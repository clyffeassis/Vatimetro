

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jul  4 03:53:39 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.05
    61                           ; Generated 20/12/2018 GMT
    62                           ; 
    63                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	smallconst
    96  000800                     __psmallconst:
    97                           	opt callstack 0
    98  000800  00                 	db	0
    99  000801  4260               	dw	16992
   100  000803  0DA2               	dw	3490
   101  000805                     __end_of_tiny:
   102                           	opt callstack 0
   103  0000                     _TMR1	set	4046
   104  0000                     _ADCON0bits	set	4034
   105  0000                     _ADCON0	set	4034
   106  0000                     _ADRESL	set	4035
   107  0000                     _ADRESH	set	4036
   108  0000                     _ADCON2	set	4032
   109  0000                     _ADCON1	set	4033
   110  0000                     _TRISA	set	3986
   111  0000                     _T1CON	set	4045
   112  0000                     _PIR1bits	set	3998
   113  0000                     _LATB	set	3978
   114  0000                     _TRISB	set	3987
   115  0000                     _TRISC	set	3988
   116  0000                     _OSCCON	set	4051
   117  0000                     _GO	set	32273
   118  0000                     _ADON	set	32272
   119  0000                     _TMR1ON	set	32360
   120  0000                     _TMR1IF	set	31984
   121  0000                     _TMR1IE	set	31976
   122  0000                     _PEIE	set	32662
   123  0000                     _GIE	set	32663
   124  0000                     _LATB1	set	31825
   125  0000                     _LATB0	set	31824
   126  000805                     STR_3:
   127                           
   128                           ; BSR set to: 0
   129  000805  50                 	db	80	;'P'
   130  000806  3D                 	db	61	;'='
   131  000807  25                 	db	37
   132  000808  30                 	db	48	;'0'
   133  000809  2E                 	db	46
   134  00080A  32                 	db	50	;'2'
   135  00080B  66                 	db	102	;'f'
   136  00080C  20                 	db	32
   137  00080D  57                 	db	87	;'W'
   138  00080E  00                 	db	0
   139  00080F                     STR_2:
   140                           
   141                           ; BSR set to: 0
   142  00080F  49                 	db	73	;'I'
   143  000810  3D                 	db	61	;'='
   144  000811  25                 	db	37
   145  000812  30                 	db	48	;'0'
   146  000813  2E                 	db	46
   147  000814  31                 	db	49	;'1'
   148  000815  66                 	db	102	;'f'
   149  000816  41                 	db	65	;'A'
   150  000817  00                 	db	0
   151  000818                     STR_1:
   152                           
   153                           ; BSR set to: 0
   154  000818  56                 	db	86	;'V'
   155  000819  3D                 	db	61	;'='
   156  00081A  25                 	db	37
   157  00081B  30                 	db	48	;'0'
   158  00081C  2E                 	db	46
   159  00081D  31                 	db	49	;'1'
   160  00081E  66                 	db	102	;'f'
   161  00081F  56                 	db	86	;'V'
   162  000820  00                 	db	0
   163  000821                     STR_4:
   164                           
   165                           ; BSR set to: 0
   166  000821  49                 	db	73	;'I'
   167  000822  4E                 	db	78	;'N'
   168  000823  46                 	db	70	;'F'
   169  000824  00                 	db	0
   170  000825                     STR_8:
   171                           
   172                           ; BSR set to: 0
   173  000825  4E                 	db	78	;'N'
   174  000826  41                 	db	65	;'A'
   175  000827  4E                 	db	78	;'N'
   176  000828  00                 	db	0
   177  000829                     STR_5:
   178                           
   179                           ; BSR set to: 0
   180  000829  69                 	db	105	;'i'
   181  00082A  6E                 	db	110	;'n'
   182  00082B  66                 	db	102	;'f'
   183  00082C  00                 	db	0
   184  00082D                     STR_9:
   185                           
   186                           ; BSR set to: 0
   187  00082D  6E                 	db	110	;'n'
   188  00082E  61                 	db	97	;'a'
   189  00082F  6E                 	db	110	;'n'
   190  000830  00                 	db	0
   191  000831                     STR_12:
   192                           
   193                           ; BSR set to: 0
   194  000831  6C                 	db	108	;'l'
   195  000832  66                 	db	102	;'f'
   196  000833  00                 	db	0
   197  0000                     
   198                           ; #config settings
   199  000834  00                 	db	0	; dummy byte at the end
   200  0000                     
   201                           	psect	cinit
   202  0036B2                     __pcinit:
   203                           	opt callstack 0
   204  0036B2                     start_initialization:
   205                           	opt callstack 0
   206  0036B2                     __initialization:
   207                           	opt callstack 0
   208                           
   209                           ; Clear objects allocated to BANK1 (146 bytes)
   210  0036B2  EE01  F000         	lfsr	0,__pbssBANK1
   211  0036B6  0E92               	movlw	146
   212  0036B8                     clear_0:
   213  0036B8  6AEE               	clrf	postinc0,c
   214  0036BA  06E8               	decf	wreg,f,c
   215  0036BC  E1FD               	bnz	clear_0
   216                           
   217                           ; Clear objects allocated to BANK0 (26 bytes)
   218  0036BE  EE00  F0E5         	lfsr	0,__pbssBANK0
   219  0036C2  0E1A               	movlw	26
   220  0036C4                     clear_1:
   221  0036C4  6AEE               	clrf	postinc0,c
   222  0036C6  06E8               	decf	wreg,f,c
   223  0036C8  E1FD               	bnz	clear_1
   224  0036CA                     end_of_initialization:
   225                           	opt callstack 0
   226  0036CA                     __end_of__initialization:
   227                           	opt callstack 0
   228  0036CA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   229  0036CC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   230  0036CE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   231  0036D0  6EF8               	movwf	tblptru,c
   232  0036D2  0100               	movlb	0
   233  0036D4  EFD9  F008         	goto	_main	;jump to C main() function
   234                           
   235                           	psect	bssBANK0
   236  0000E5                     __pbssBANK0:
   237                           	opt callstack 0
   238  0000E5                     _voltage:
   239                           	opt callstack 0
   240  0000E5                     	ds	4
   241  0000E9                     _current:
   242                           	opt callstack 0
   243  0000E9                     	ds	4
   244  0000ED                     _prec:
   245                           	opt callstack 0
   246  0000ED                     	ds	2
   247  0000EF                     _flags:
   248                           	opt callstack 0
   249  0000EF                     	ds	2
   250  0000F1                     _counter2:
   251                           	opt callstack 0
   252  0000F1                     	ds	2
   253  0000F3                     _max_voltage:
   254                           	opt callstack 0
   255  0000F3                     	ds	2
   256  0000F5                     _max_current:
   257                           	opt callstack 0
   258  0000F5                     	ds	2
   259  0000F7                     _voltage_read:
   260                           	opt callstack 0
   261  0000F7                     	ds	2
   262  0000F9                     _current_read:
   263                           	opt callstack 0
   264  0000F9                     	ds	2
   265  0000FB                     _max_voltage_ant:
   266                           	opt callstack 0
   267  0000FB                     	ds	2
   268  0000FD                     _max_current_ant:
   269                           	opt callstack 0
   270  0000FD                     	ds	2
   271                           
   272                           	psect	bssBANK1
   273  000100                     __pbssBANK1:
   274                           	opt callstack 0
   275  000100                     _phase_str:
   276                           	opt callstack 0
   277  000100                     	ds	7
   278  000107                     floorf@F524:
   279                           	opt callstack 0
   280  000107                     	ds	4
   281  00010B                     ___fpclassifyf@F463:
   282                           	opt callstack 0
   283  00010B                     	ds	4
   284  00010F                     _counter:
   285                           	opt callstack 0
   286  00010F                     	ds	4
   287  000113                     _phase_ant:
   288                           	opt callstack 0
   289  000113                     	ds	4
   290  000117                     _phase:
   291                           	opt callstack 0
   292  000117                     	ds	4
   293  00011B                     _power:
   294                           	opt callstack 0
   295  00011B                     	ds	4
   296  00011F                     _time_voltage:
   297                           	opt callstack 0
   298  00011F                     	ds	4
   299  000123                     _time_current:
   300                           	opt callstack 0
   301  000123                     	ds	4
   302  000127                     _errno:
   303                           	opt callstack 0
   304  000127                     	ds	2
   305  000129                     _nout:
   306                           	opt callstack 0
   307  000129                     	ds	2
   308  00012B                     _width:
   309                           	opt callstack 0
   310  00012B                     	ds	2
   311  00012D                     _dbuf:
   312                           	opt callstack 0
   313  00012D                     	ds	80
   314  00017D                     _power_str:
   315                           	opt callstack 0
   316  00017D                     	ds	7
   317  000184                     _voltage_str:
   318                           	opt callstack 0
   319  000184                     	ds	7
   320  00018B                     _current_str:
   321                           	opt callstack 0
   322  00018B                     	ds	7
   323                           
   324                           	psect	cstackBANK0
   325  000060                     __pcstackBANK0:
   326                           	opt callstack 0
   327  000060                     ?_sqrtf:
   328                           	opt callstack 0
   329  000060                     ?___flsub:
   330                           	opt callstack 0
   331  000060                     ?___fltol:
   332                           	opt callstack 0
   333  000060                     ___fltol@f1:
   334                           	opt callstack 0
   335  000060                     ___flsub@b:
   336                           	opt callstack 0
   337  000060                     floorf@m:
   338                           	opt callstack 0
   339  000060                     sqrtf@x:
   340                           	opt callstack 0
   341                           
   342                           ; 4 bytes @ 0x0
   343  000060                     	ds	4
   344  000064                     ??_sqrtf:
   345  000064                     ??___fltol:
   346  000064                     floorf@e:
   347                           	opt callstack 0
   348  000064                     ___flsub@a:
   349                           	opt callstack 0
   350                           
   351                           ; 4 bytes @ 0x4
   352  000064                     	ds	2
   353  000066                     floorf@u:
   354                           	opt callstack 0
   355                           
   356                           ; 4 bytes @ 0x6
   357  000066                     	ds	4
   358  00006A                     ?_efgtoa:
   359                           	opt callstack 0
   360  00006A                     efgtoa@fp:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0xA
   364  00006A                     	ds	2
   365  00006C                     efgtoa@f:
   366                           	opt callstack 0
   367                           
   368                           ; 4 bytes @ 0xC
   369  00006C                     	ds	1
   370  00006D                     sqrtf@s:
   371                           	opt callstack 0
   372                           
   373                           ; 4 bytes @ 0xD
   374  00006D                     	ds	3
   375  000070                     efgtoa@c:
   376                           	opt callstack 0
   377                           
   378                           ; 1 bytes @ 0x10
   379  000070                     	ds	1
   380  000071                     ??_efgtoa:
   381  000071                     sqrtf@i:
   382                           	opt callstack 0
   383                           
   384                           ; 4 bytes @ 0x11
   385  000071                     	ds	4
   386  000075                     sqrtf@__xc8_float_word:
   387                           	opt callstack 0
   388                           
   389                           ; 4 bytes @ 0x15
   390  000075                     	ds	1
   391  000076                     efgtoa@ou:
   392                           	opt callstack 0
   393                           
   394                           ; 4 bytes @ 0x16
   395  000076                     	ds	3
   396  000079                     sqrtf@q:
   397                           	opt callstack 0
   398                           
   399                           ; 4 bytes @ 0x19
   400  000079                     	ds	1
   401  00007A                     _efgtoa$367:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0x1A
   405  00007A                     	ds	2
   406  00007C                     _efgtoa$368:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x1C
   410  00007C                     	ds	1
   411  00007D                     sqrtf@t:
   412                           	opt callstack 0
   413                           
   414                           ; 4 bytes @ 0x1D
   415  00007D                     	ds	1
   416  00007E                     _efgtoa$373:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x1E
   420  00007E                     	ds	2
   421  000080                     _efgtoa$377:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0x20
   425  000080                     	ds	1
   426  000081                     sqrtf@z:
   427                           	opt callstack 0
   428                           
   429                           ; 4 bytes @ 0x21
   430  000081                     	ds	1
   431  000082                     _efgtoa$378:
   432                           	opt callstack 0
   433                           
   434                           ; 2 bytes @ 0x22
   435  000082                     	ds	2
   436  000084                     _efgtoa$379:
   437                           	opt callstack 0
   438                           
   439                           ; 2 bytes @ 0x24
   440  000084                     	ds	1
   441  000085                     sqrtf@m:
   442                           	opt callstack 0
   443                           
   444                           ; 4 bytes @ 0x25
   445  000085                     	ds	1
   446  000086                     efgtoa@t:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x26
   450  000086                     	ds	2
   451  000088                     efgtoa@pp:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x28
   455  000088                     	ds	1
   456  000089                     sqrtf@r:
   457                           	opt callstack 0
   458                           
   459                           ; 4 bytes @ 0x29
   460  000089                     	ds	1
   461  00008A                     efgtoa@m:
   462                           	opt callstack 0
   463                           
   464                           ; 2 bytes @ 0x2A
   465  00008A                     	ds	2
   466  00008C                     efgtoa@ne:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0x2C
   470  00008C                     	ds	1
   471  00008D                     sqrtf@ix:
   472                           	opt callstack 0
   473                           
   474                           ; 4 bytes @ 0x2D
   475  00008D                     	ds	1
   476  00008E                     efgtoa@d:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x2E
   480  00008E                     	ds	2
   481  000090                     efgtoa@sign:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x30
   485  000090                     	ds	2
   486  000092                     efgtoa@p:
   487                           	opt callstack 0
   488                           
   489                           ; 2 bytes @ 0x32
   490  000092                     	ds	2
   491  000094                     efgtoa@nmode:
   492                           	opt callstack 0
   493                           
   494                           ; 1 bytes @ 0x34
   495  000094                     	ds	1
   496  000095                     efgtoa@w:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x35
   500  000095                     	ds	2
   501  000097                     efgtoa@mode:
   502                           	opt callstack 0
   503                           
   504                           ; 1 bytes @ 0x37
   505  000097                     	ds	1
   506  000098                     efgtoa@h:
   507                           	opt callstack 0
   508                           
   509                           ; 4 bytes @ 0x38
   510  000098                     	ds	4
   511  00009C                     efgtoa@l:
   512                           	opt callstack 0
   513                           
   514                           ; 4 bytes @ 0x3C
   515  00009C                     	ds	4
   516  0000A0                     efgtoa@i:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0x40
   520  0000A0                     	ds	2
   521  0000A2                     efgtoa@g:
   522                           	opt callstack 0
   523                           
   524                           ; 4 bytes @ 0x42
   525  0000A2                     	ds	4
   526  0000A6                     efgtoa@e:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x46
   530  0000A6                     	ds	2
   531  0000A8                     efgtoa@n:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x48
   535  0000A8                     	ds	2
   536  0000AA                     efgtoa@u:
   537                           	opt callstack 0
   538                           
   539                           ; 4 bytes @ 0x4A
   540  0000AA                     	ds	4
   541  0000AE                     ?_vfpfcnvrt:
   542                           	opt callstack 0
   543  0000AE                     vfpfcnvrt@fp:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x4E
   547  0000AE                     	ds	2
   548  0000B0                     vfpfcnvrt@fmt:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x50
   552  0000B0                     	ds	2
   553  0000B2                     vfpfcnvrt@ap:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x52
   557  0000B2                     	ds	2
   558  0000B4                     ??_vfpfcnvrt:
   559                           
   560                           ; 1 bytes @ 0x54
   561  0000B4                     	ds	4
   562  0000B8                     vfpfcnvrt@done:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x58
   566  0000B8                     	ds	2
   567  0000BA                     _vfpfcnvrt$393:
   568                           	opt callstack 0
   569                           
   570                           ; 2 bytes @ 0x5A
   571  0000BA                     	ds	2
   572  0000BC                     _vfpfcnvrt$397:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x5C
   576  0000BC                     	ds	2
   577  0000BE                     vfpfcnvrt@f:
   578                           	opt callstack 0
   579                           
   580                           ; 4 bytes @ 0x5E
   581  0000BE                     	ds	4
   582  0000C2                     vfpfcnvrt@ct:
   583                           	opt callstack 0
   584                           
   585                           ; 3 bytes @ 0x62
   586  0000C2                     	ds	3
   587  0000C5                     vfpfcnvrt@c:
   588                           	opt callstack 0
   589                           
   590                           ; 1 bytes @ 0x65
   591  0000C5                     	ds	1
   592  0000C6                     ?_vfprintf:
   593                           	opt callstack 0
   594  0000C6                     vfprintf@fp:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x66
   598  0000C6                     	ds	2
   599  0000C8                     vfprintf@fmt:
   600                           	opt callstack 0
   601                           
   602                           ; 2 bytes @ 0x68
   603  0000C8                     	ds	2
   604  0000CA                     vfprintf@ap:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0x6A
   608  0000CA                     	ds	2
   609  0000CC                     vfprintf@cfmt:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0x6C
   613  0000CC                     	ds	2
   614  0000CE                     ?_sprintf:
   615                           	opt callstack 0
   616  0000CE                     sprintf@s:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x6E
   620  0000CE                     	ds	2
   621  0000D0                     sprintf@fmt:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x70
   625  0000D0                     	ds	8
   626  0000D8                     sprintf@ap:
   627                           	opt callstack 0
   628                           
   629                           ; 2 bytes @ 0x78
   630  0000D8                     	ds	2
   631  0000DA                     sprintf@f:
   632                           	opt callstack 0
   633                           
   634                           ; 6 bytes @ 0x7A
   635  0000DA                     	ds	6
   636  0000E0                     ??_main:
   637                           
   638                           ; 1 bytes @ 0x80
   639  0000E0                     	ds	1
   640  0000E1                     _main$1221:
   641                           	opt callstack 0
   642                           
   643                           ; 4 bytes @ 0x81
   644  0000E1                     	ds	4
   645                           
   646                           	psect	cstackCOMRAM
   647  000001                     __pcstackCOMRAM:
   648                           	opt callstack 0
   649  000001                     ?_ADC_Read:
   650                           	opt callstack 0
   651  000001                     ?_strlen:
   652                           	opt callstack 0
   653  000001                     ?___fpclassifyf:
   654                           	opt callstack 0
   655  000001                     ?_isupper:
   656                           	opt callstack 0
   657  000001                     ?_isdigit:
   658                           	opt callstack 0
   659  000001                     ?_strncmp:
   660                           	opt callstack 0
   661  000001                     ?_isspace:
   662                           	opt callstack 0
   663  000001                     ?___wmul:
   664                           	opt callstack 0
   665  000001                     ?___awdiv:
   666                           	opt callstack 0
   667  000001                     ?___awmod:
   668                           	opt callstack 0
   669  000001                     ?_nanf:
   670                           	opt callstack 0
   671  000001                     ?___flneg:
   672                           	opt callstack 0
   673  000001                     ?___xxtofl:
   674                           	opt callstack 0
   675  000001                     MSdelay@val:
   676                           	opt callstack 0
   677  000001                     ADC_Read@channel:
   678                           	opt callstack 0
   679  000001                     ___wmul@multiplier:
   680                           	opt callstack 0
   681  000001                     ___awdiv@dividend:
   682                           	opt callstack 0
   683  000001                     ___awmod@dividend:
   684                           	opt callstack 0
   685  000001                     isdigit@c:
   686                           	opt callstack 0
   687  000001                     isspace@c:
   688                           	opt callstack 0
   689  000001                     isupper@c:
   690                           	opt callstack 0
   691  000001                     fputc@c:
   692                           	opt callstack 0
   693  000001                     strcpy@dest:
   694                           	opt callstack 0
   695  000001                     strlen@s:
   696                           	opt callstack 0
   697  000001                     strncmp@_l:
   698                           	opt callstack 0
   699  000001                     nanf@s:
   700                           	opt callstack 0
   701  000001                     ___fleq@ff1:
   702                           	opt callstack 0
   703  000001                     ___flneg@f1:
   704                           	opt callstack 0
   705  000001                     ___xxtofl@val:
   706                           	opt callstack 0
   707  000001                     ___fpclassifyf@x:
   708                           	opt callstack 0
   709                           
   710                           ; 4 bytes @ 0x0
   711  000001                     	ds	2
   712  000003                     ??_ADC_Read:
   713  000003                     ??_isupper:
   714  000003                     ??_isdigit:
   715  000003                     ??_isspace:
   716  000003                     MSdelay@i:
   717                           	opt callstack 0
   718  000003                     ___wmul@multiplicand:
   719                           	opt callstack 0
   720  000003                     ___awdiv@divisor:
   721                           	opt callstack 0
   722  000003                     ___awmod@divisor:
   723                           	opt callstack 0
   724  000003                     fputc@fp:
   725                           	opt callstack 0
   726  000003                     strcpy@src:
   727                           	opt callstack 0
   728  000003                     strlen@a:
   729                           	opt callstack 0
   730  000003                     strncmp@_r:
   731                           	opt callstack 0
   732                           
   733                           ; 2 bytes @ 0x2
   734  000003                     	ds	2
   735  000005                     ??_fputc:
   736  000005                     ??___fpclassifyf:
   737  000005                     ??_strcpy:
   738  000005                     ??___xxtofl:
   739  000005                     ___awdiv@counter:
   740                           	opt callstack 0
   741  000005                     ___awmod@counter:
   742                           	opt callstack 0
   743  000005                     MSdelay@j:
   744                           	opt callstack 0
   745  000005                     ___wmul@product:
   746                           	opt callstack 0
   747  000005                     strncmp@n:
   748                           	opt callstack 0
   749  000005                     ___fleq@ff2:
   750                           	opt callstack 0
   751  000005                     nanf@u:
   752                           	opt callstack 0
   753                           
   754                           ; 4 bytes @ 0x4
   755  000005                     	ds	1
   756  000006                     ___awdiv@sign:
   757                           	opt callstack 0
   758  000006                     ___awmod@sign:
   759                           	opt callstack 0
   760                           
   761                           ; 1 bytes @ 0x5
   762  000006                     	ds	1
   763  000007                     ??_LCD_Command:
   764  000007                     ??_strncmp:
   765  000007                     ??_LCD_Char:
   766  000007                     ?_tolower:
   767                           	opt callstack 0
   768  000007                     _isspace$899:
   769                           	opt callstack 0
   770  000007                     ADC_Read@digital:
   771                           	opt callstack 0
   772  000007                     ___awdiv@quotient:
   773                           	opt callstack 0
   774  000007                     strcpy@s:
   775                           	opt callstack 0
   776  000007                     tolower@c:
   777                           	opt callstack 0
   778                           
   779                           ; 2 bytes @ 0x6
   780  000007                     	ds	1
   781  000008                     ?_atoi:
   782                           	opt callstack 0
   783  000008                     LCD_Command@cmd:
   784                           	opt callstack 0
   785  000008                     LCD_Char@dat:
   786                           	opt callstack 0
   787  000008                     atoi@s:
   788                           	opt callstack 0
   789  000008                     strncmp@l:
   790                           	opt callstack 0
   791                           
   792                           ; 2 bytes @ 0x7
   793  000008                     	ds	1
   794  000009                     ??_tolower:
   795  000009                     ??___fleq:
   796  000009                     ___xxtofl@sign:
   797                           	opt callstack 0
   798  000009                     LCD_String@msg:
   799                           	opt callstack 0
   800  000009                     ___fpclassifyf@e:
   801                           	opt callstack 0
   802  000009                     strcpy@d:
   803                           	opt callstack 0
   804                           
   805                           ; 2 bytes @ 0x8
   806  000009                     	ds	1
   807  00000A                     ??_atoi:
   808  00000A                     ___xxtofl@exp:
   809                           	opt callstack 0
   810  00000A                     fputs@s:
   811                           	opt callstack 0
   812  00000A                     strncmp@r:
   813                           	opt callstack 0
   814                           
   815                           ; 2 bytes @ 0x9
   816  00000A                     	ds	1
   817  00000B                     LCD_String_xy@pos:
   818                           	opt callstack 0
   819  00000B                     ___xxtofl@arg:
   820                           	opt callstack 0
   821  00000B                     ___fpclassifyf@u:
   822                           	opt callstack 0
   823                           
   824                           ; 4 bytes @ 0xA
   825  00000B                     	ds	1
   826  00000C                     LCD_String_xy@msg:
   827                           	opt callstack 0
   828  00000C                     fputs@fp:
   829                           	opt callstack 0
   830                           
   831                           ; 2 bytes @ 0xB
   832  00000C                     	ds	1
   833  00000D                     _tolower$1009:
   834                           	opt callstack 0
   835                           
   836                           ; 2 bytes @ 0xC
   837  00000D                     	ds	1
   838  00000E                     LCD_String_xy@row:
   839                           	opt callstack 0
   840  00000E                     fputs@c:
   841                           	opt callstack 0
   842  00000E                     atoi@neg:
   843                           	opt callstack 0
   844                           
   845                           ; 2 bytes @ 0xD
   846  00000E                     	ds	1
   847  00000F                     ?___flmul:
   848                           	opt callstack 0
   849  00000F                     LCD_String_xy@location:
   850                           	opt callstack 0
   851  00000F                     fputs@i:
   852                           	opt callstack 0
   853  00000F                     ___flmul@b:
   854                           	opt callstack 0
   855                           
   856                           ; 4 bytes @ 0xE
   857  00000F                     	ds	1
   858  000010                     _atoi$868:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0xF
   862  000010                     	ds	1
   863  000011                     ?_pad:
   864                           	opt callstack 0
   865  000011                     pad@fp:
   866                           	opt callstack 0
   867                           
   868                           ; 2 bytes @ 0x10
   869  000011                     	ds	1
   870  000012                     _atoi$870:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x11
   874  000012                     	ds	1
   875  000013                     pad@buf:
   876                           	opt callstack 0
   877  000013                     ___flmul@a:
   878                           	opt callstack 0
   879                           
   880                           ; 4 bytes @ 0x12
   881  000013                     	ds	1
   882  000014                     _atoi$869:
   883                           	opt callstack 0
   884                           
   885                           ; 1 bytes @ 0x13
   886  000014                     	ds	1
   887  000015                     pad@p:
   888                           	opt callstack 0
   889  000015                     atoi@n:
   890                           	opt callstack 0
   891                           
   892                           ; 2 bytes @ 0x14
   893  000015                     	ds	2
   894  000017                     ??___flmul:
   895  000017                     ??_pad:
   896                           
   897                           ; 1 bytes @ 0x16
   898  000017                     	ds	1
   899  000018                     pad@i:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0x17
   903  000018                     	ds	2
   904  00001A                     pad@w:
   905                           	opt callstack 0
   906                           
   907                           ; 2 bytes @ 0x19
   908  00001A                     	ds	1
   909  00001B                     ___flmul@sign:
   910                           	opt callstack 0
   911                           
   912                           ; 1 bytes @ 0x1A
   913  00001B                     	ds	1
   914  00001C                     ___flmul@grs:
   915                           	opt callstack 0
   916                           
   917                           ; 4 bytes @ 0x1B
   918  00001C                     	ds	4
   919  000020                     ___flmul@aexp:
   920                           	opt callstack 0
   921                           
   922                           ; 1 bytes @ 0x1F
   923  000020                     	ds	1
   924  000021                     ___flmul@bexp:
   925                           	opt callstack 0
   926                           
   927                           ; 1 bytes @ 0x20
   928  000021                     	ds	1
   929  000022                     ___flmul@prod:
   930                           	opt callstack 0
   931                           
   932                           ; 4 bytes @ 0x21
   933  000022                     	ds	4
   934  000026                     ___flmul@temp:
   935                           	opt callstack 0
   936                           
   937                           ; 2 bytes @ 0x25
   938  000026                     	ds	2
   939  000028                     ___flge@ff1:
   940                           	opt callstack 0
   941                           
   942                           ; 4 bytes @ 0x27
   943  000028                     	ds	4
   944  00002C                     ___flge@ff2:
   945                           	opt callstack 0
   946                           
   947                           ; 4 bytes @ 0x2B
   948  00002C                     	ds	4
   949  000030                     ??___flge:
   950                           
   951                           ; 1 bytes @ 0x2F
   952  000030                     	ds	4
   953  000034                     ?___fldiv:
   954                           	opt callstack 0
   955  000034                     ___fldiv@b:
   956                           	opt callstack 0
   957                           
   958                           ; 4 bytes @ 0x33
   959  000034                     	ds	4
   960  000038                     ___fldiv@a:
   961                           	opt callstack 0
   962                           
   963                           ; 4 bytes @ 0x37
   964  000038                     	ds	4
   965  00003C                     ??___fldiv:
   966                           
   967                           ; 1 bytes @ 0x3B
   968  00003C                     	ds	4
   969  000040                     ___fldiv@rem:
   970                           	opt callstack 0
   971                           
   972                           ; 4 bytes @ 0x3F
   973  000040                     	ds	4
   974  000044                     ___fldiv@sign:
   975                           	opt callstack 0
   976                           
   977                           ; 1 bytes @ 0x43
   978  000044                     	ds	1
   979  000045                     ___fldiv@new_exp:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x44
   983  000045                     	ds	2
   984  000047                     ___fldiv@grs:
   985                           	opt callstack 0
   986                           
   987                           ; 4 bytes @ 0x46
   988  000047                     	ds	4
   989  00004B                     ___fldiv@bexp:
   990                           	opt callstack 0
   991                           
   992                           ; 1 bytes @ 0x4A
   993  00004B                     	ds	1
   994  00004C                     ___fldiv@aexp:
   995                           	opt callstack 0
   996                           
   997                           ; 1 bytes @ 0x4B
   998  00004C                     	ds	1
   999  00004D                     ?_floorf:
  1000                           	opt callstack 0
  1001  00004D                     ?___fladd:
  1002                           	opt callstack 0
  1003  00004D                     ___fladd@b:
  1004                           	opt callstack 0
  1005  00004D                     floorf@x:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 4 bytes @ 0x4C
  1009  00004D                     	ds	4
  1010  000051                     ??_floorf:
  1011  000051                     ___fladd@a:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x50
  1015  000051                     	ds	4
  1016  000055                     ??___fladd:
  1017                           
  1018                           ; 1 bytes @ 0x54
  1019  000055                     	ds	4
  1020  000059                     ___fladd@signs:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x58
  1024  000059                     	ds	1
  1025  00005A                     ___fladd@aexp:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x59
  1029  00005A                     	ds	1
  1030  00005B                     ___fladd@bexp:
  1031                           	opt callstack 0
  1032                           
  1033                           ; 1 bytes @ 0x5A
  1034  00005B                     	ds	1
  1035  00005C                     ___fladd@grs:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x5B
  1039  00005C                     	ds	1
  1040  00005D                     ___fltol@sign1:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x5C
  1044  00005D                     	ds	1
  1045  00005E                     ___fltol@exp1:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x5D
  1049  00005E                     	ds	1
  1050  00005F                     
  1051                           ; 1 bytes @ 0x5E
  1052 ;;
  1053 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1054 ;;
  1055 ;; *************** function _main *****************
  1056 ;; Defined at:
  1057 ;;		line 54 in file "main.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  2  110[None  ] int 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1071 ;;      Params:         0       0       0       0       0       0       0       0       0
  1072 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1073 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1074 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1075 ;;Total ram usage:        5 bytes
  1076 ;; Hardware stack levels required when called:    9
  1077 ;; This function calls:
  1078 ;;		_ADC_Init
  1079 ;;		_ADC_Read
  1080 ;;		_LCD_Clear
  1081 ;;		_LCD_Init
  1082 ;;		_LCD_String_xy
  1083 ;;		_MSdelay
  1084 ;;		_TIMER1_Start
  1085 ;;		___fladd
  1086 ;;		___fldiv
  1087 ;;		___flge
  1088 ;;		___flmul
  1089 ;;		___fltol
  1090 ;;		___xxtofl
  1091 ;;		_sprintf
  1092 ;;		_sqrtf
  1093 ;; This function is called by:
  1094 ;;		Startup code after reset
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text0
  1099  0011B2                     __ptext0:
  1100                           	opt callstack 0
  1101  0011B2                     _main:
  1102                           	opt callstack 22
  1103                           
  1104                           ;main.c: 56:     OSCCON = 0x72;
  1105                           
  1106                           ;incstack = 0
  1107  0011B2  0E72               	movlw	114
  1108  0011B4  6ED3               	movwf	4051,c	;volatile
  1109                           
  1110                           ;main.c: 57:     TRISC = 0x00;
  1111  0011B6  0E00               	movlw	0
  1112  0011B8  6E94               	movwf	3988,c	;volatile
  1113                           
  1114                           ;main.c: 58:  LCD_Init();
  1115  0011BA  EC15  F01B         	call	_LCD_Init	;wreg free
  1116                           
  1117                           ;main.c: 59:     TIMER1_Start();
  1118  0011BE  ECB4  F01B         	call	_TIMER1_Start	;wreg free
  1119                           
  1120                           ;main.c: 60:     ADC_Init();
  1121  0011C2  ECCA  F01B         	call	_ADC_Init	;wreg free
  1122                           
  1123                           ;main.c: 61:     LCD_Clear();
  1124  0011C6  ECC0  F01B         	call	_LCD_Clear	;wreg free
  1125  0011CA                     l4425:
  1126                           
  1127                           ;main.c: 63:     {;main.c: 64:         current_read = ADC_Read(0);
  1128  0011CA  0E00               	movlw	0
  1129  0011CC  6E02               	movwf	ADC_Read@channel+1,c
  1130  0011CE  0E00               	movlw	0
  1131  0011D0  6E01               	movwf	ADC_Read@channel,c
  1132  0011D2  ECEA  F018         	call	_ADC_Read	;wreg free
  1133  0011D6  C001  F0F9         	movff	?_ADC_Read,_current_read
  1134  0011DA  C002  F0FA         	movff	?_ADC_Read+1,_current_read+1
  1135                           
  1136                           ;main.c: 65:         voltage_read = ADC_Read(1);
  1137  0011DE  0E00               	movlw	0
  1138  0011E0  6E02               	movwf	ADC_Read@channel+1,c
  1139  0011E2  0E01               	movlw	1
  1140  0011E4  6E01               	movwf	ADC_Read@channel,c
  1141  0011E6  ECEA  F018         	call	_ADC_Read	;wreg free
  1142  0011EA  C001  F0F7         	movff	?_ADC_Read,_voltage_read
  1143  0011EE  C002  F0F8         	movff	?_ADC_Read+1,_voltage_read+1
  1144                           
  1145                           ;main.c: 67:         if (current_read > max_current)
  1146  0011F2  0100               	movlb	0	; () banked
  1147  0011F4  51F9               	movf	_current_read& (0+255),w,b
  1148  0011F6  5DF5               	subwf	_max_current& (0+255),w,b
  1149  0011F8  51F6               	movf	(_max_current+1)& (0+255),w,b
  1150  0011FA  0A80               	xorlw	128
  1151  0011FC  6FE0               	movwf	??_main& (0+255),b
  1152  0011FE  51FA               	movf	(_current_read+1)& (0+255),w,b
  1153  001200  0A80               	xorlw	128
  1154  001202  59E0               	subwfb	??_main& (0+255),w,b
  1155  001204  B0D8               	btfsc	status,0,c
  1156  001206  D00C               	goto	l4433
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;main.c: 68:         {;main.c: 69:             max_current = current_read;
  1160  001208  C0F9  F0F5         	movff	_current_read,_max_current
  1161  00120C  C0FA  F0F6         	movff	_current_read+1,_max_current+1
  1162                           
  1163                           ;main.c: 70:             time_current = counter;
  1164  001210  C10F  F123         	movff	_counter,_time_current
  1165  001214  C110  F124         	movff	_counter+1,_time_current+1
  1166  001218  C111  F125         	movff	_counter+2,_time_current+2
  1167  00121C  C112  F126         	movff	_counter+3,_time_current+3
  1168  001220                     l4433:
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;main.c: 72:         if (voltage_read > max_voltage)
  1172  001220  51F7               	movf	_voltage_read& (0+255),w,b
  1173  001222  5DF3               	subwf	_max_voltage& (0+255),w,b
  1174  001224  51F4               	movf	(_max_voltage+1)& (0+255),w,b
  1175  001226  0A80               	xorlw	128
  1176  001228  6FE0               	movwf	??_main& (0+255),b
  1177  00122A  51F8               	movf	(_voltage_read+1)& (0+255),w,b
  1178  00122C  0A80               	xorlw	128
  1179  00122E  59E0               	subwfb	??_main& (0+255),w,b
  1180  001230  B0D8               	btfsc	status,0,c
  1181  001232  D00C               	goto	l4437
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;main.c: 73:         {;main.c: 74:             max_voltage = voltage_read;
  1185  001234  C0F7  F0F3         	movff	_voltage_read,_max_voltage
  1186  001238  C0F8  F0F4         	movff	_voltage_read+1,_max_voltage+1
  1187                           
  1188                           ;main.c: 75:             time_voltage = counter;
  1189  00123C  C10F  F11F         	movff	_counter,_time_voltage
  1190  001240  C110  F120         	movff	_counter+1,_time_voltage+1
  1191  001244  C111  F121         	movff	_counter+2,_time_voltage+2
  1192  001248  C112  F122         	movff	_counter+3,_time_voltage+3
  1193  00124C                     l4437:
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;main.c: 81:         if (counter2 >= 50000)
  1197  00124C  0E50               	movlw	80
  1198  00124E  5DF1               	subwf	_counter2& (0+255),w,b
  1199  001250  0EC3               	movlw	195
  1200  001252  59F2               	subwfb	(_counter2+1)& (0+255),w,b
  1201  001254  A0D8               	btfss	status,0,c
  1202  001256  D7B9               	goto	l4425
  1203                           
  1204                           ; BSR set to: 0
  1205                           ;main.c: 82:         {;main.c: 83:             max_current = (0.5 * max_current_ant) + (
      +                          1 - 0.5)*max_current;
  1206  001258  0E00               	movlw	0
  1207  00125A  6E13               	movwf	___flmul@a,c
  1208  00125C  0E00               	movlw	0
  1209  00125E  6E14               	movwf	___flmul@a+1,c
  1210  001260  0E00               	movlw	0
  1211  001262  6E15               	movwf	___flmul@a+2,c
  1212  001264  0E3F               	movlw	63
  1213  001266  6E16               	movwf	___flmul@a+3,c
  1214  001268  C0F5  F001         	movff	_max_current,___xxtofl@val
  1215  00126C  C0F6  F002         	movff	_max_current+1,___xxtofl@val+1
  1216  001270  0E00               	movlw	0
  1217  001272  BE02               	btfsc	___xxtofl@val+1,7,c
  1218  001274  0EFF               	movlw	-1
  1219  001276  6E03               	movwf	___xxtofl@val+2,c
  1220  001278  6E04               	movwf	___xxtofl@val+3,c
  1221  00127A  0E01               	movlw	1
  1222  00127C  ECA9  F015         	call	___xxtofl
  1223  001280  C001  F00F         	movff	?___xxtofl,___flmul@b
  1224  001284  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1225  001288  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1226  00128C  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1227  001290  ECB9  F00F         	call	___flmul	;wreg free
  1228  001294  C00F  F051         	movff	?___flmul,___fladd@a
  1229  001298  C010  F052         	movff	?___flmul+1,___fladd@a+1
  1230  00129C  C011  F053         	movff	?___flmul+2,___fladd@a+2
  1231  0012A0  C012  F054         	movff	?___flmul+3,___fladd@a+3
  1232  0012A4  0E00               	movlw	0
  1233  0012A6  6E13               	movwf	___flmul@a,c
  1234  0012A8  0E00               	movlw	0
  1235  0012AA  6E14               	movwf	___flmul@a+1,c
  1236  0012AC  0E00               	movlw	0
  1237  0012AE  6E15               	movwf	___flmul@a+2,c
  1238  0012B0  0E3F               	movlw	63
  1239  0012B2  6E16               	movwf	___flmul@a+3,c
  1240  0012B4  C0FD  F001         	movff	_max_current_ant,___xxtofl@val
  1241  0012B8  C0FE  F002         	movff	_max_current_ant+1,___xxtofl@val+1
  1242  0012BC  0E00               	movlw	0
  1243  0012BE  BE02               	btfsc	___xxtofl@val+1,7,c
  1244  0012C0  0EFF               	movlw	-1
  1245  0012C2  6E03               	movwf	___xxtofl@val+2,c
  1246  0012C4  6E04               	movwf	___xxtofl@val+3,c
  1247  0012C6  0E01               	movlw	1
  1248  0012C8  ECA9  F015         	call	___xxtofl
  1249  0012CC  C001  F00F         	movff	?___xxtofl,___flmul@b
  1250  0012D0  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1251  0012D4  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1252  0012D8  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1253  0012DC  ECB9  F00F         	call	___flmul	;wreg free
  1254  0012E0  C00F  F04D         	movff	?___flmul,___fladd@b
  1255  0012E4  C010  F04E         	movff	?___flmul+1,___fladd@b+1
  1256  0012E8  C011  F04F         	movff	?___flmul+2,___fladd@b+2
  1257  0012EC  C012  F050         	movff	?___flmul+3,___fladd@b+3
  1258  0012F0  EC62  F011         	call	___fladd	;wreg free
  1259  0012F4  C04D  F060         	movff	?___fladd,___fltol@f1
  1260  0012F8  C04E  F061         	movff	?___fladd+1,___fltol@f1+1
  1261  0012FC  C04F  F062         	movff	?___fladd+2,___fltol@f1+2
  1262  001300  C050  F063         	movff	?___fladd+3,___fltol@f1+3
  1263  001304  EC17  F017         	call	___fltol	;wreg free
  1264  001308  C060  F0F5         	movff	?___fltol,_max_current
  1265  00130C  C061  F0F6         	movff	?___fltol+1,_max_current+1
  1266                           
  1267                           ;main.c: 84:             current = max_current * 5. / 1023. - 2.5;
  1268  001310  0E00               	movlw	0
  1269  001312  6E38               	movwf	___fldiv@a,c
  1270  001314  0EC0               	movlw	192
  1271  001316  6E39               	movwf	___fldiv@a+1,c
  1272  001318  0E7F               	movlw	127
  1273  00131A  6E3A               	movwf	___fldiv@a+2,c
  1274  00131C  0E44               	movlw	68
  1275  00131E  6E3B               	movwf	___fldiv@a+3,c
  1276  001320  0E00               	movlw	0
  1277  001322  6E13               	movwf	___flmul@a,c
  1278  001324  0E00               	movlw	0
  1279  001326  6E14               	movwf	___flmul@a+1,c
  1280  001328  0EA0               	movlw	160
  1281  00132A  6E15               	movwf	___flmul@a+2,c
  1282  00132C  0E40               	movlw	64
  1283  00132E  6E16               	movwf	___flmul@a+3,c
  1284  001330  C0F5  F001         	movff	_max_current,___xxtofl@val
  1285  001334  C0F6  F002         	movff	_max_current+1,___xxtofl@val+1
  1286  001338  0E00               	movlw	0
  1287  00133A  BE02               	btfsc	___xxtofl@val+1,7,c
  1288  00133C  0EFF               	movlw	-1
  1289  00133E  6E03               	movwf	___xxtofl@val+2,c
  1290  001340  6E04               	movwf	___xxtofl@val+3,c
  1291  001342  0E01               	movlw	1
  1292  001344  ECA9  F015         	call	___xxtofl
  1293  001348  C001  F00F         	movff	?___xxtofl,___flmul@b
  1294  00134C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1295  001350  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1296  001354  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1297  001358  ECB9  F00F         	call	___flmul	;wreg free
  1298  00135C  C00F  F034         	movff	?___flmul,___fldiv@b
  1299  001360  C010  F035         	movff	?___flmul+1,___fldiv@b+1
  1300  001364  C011  F036         	movff	?___flmul+2,___fldiv@b+2
  1301  001368  C012  F037         	movff	?___flmul+3,___fldiv@b+3
  1302  00136C  ECE8  F012         	call	___fldiv	;wreg free
  1303  001370  C034  F04D         	movff	?___fldiv,___fladd@b
  1304  001374  C035  F04E         	movff	?___fldiv+1,___fladd@b+1
  1305  001378  C036  F04F         	movff	?___fldiv+2,___fladd@b+2
  1306  00137C  C037  F050         	movff	?___fldiv+3,___fladd@b+3
  1307  001380  0E00               	movlw	0
  1308  001382  6E51               	movwf	___fladd@a,c
  1309  001384  0E00               	movlw	0
  1310  001386  6E52               	movwf	___fladd@a+1,c
  1311  001388  0E20               	movlw	32
  1312  00138A  6E53               	movwf	___fladd@a+2,c
  1313  00138C  0EC0               	movlw	192
  1314  00138E  6E54               	movwf	___fladd@a+3,c
  1315  001390  EC62  F011         	call	___fladd	;wreg free
  1316  001394  C04D  F0E9         	movff	?___fladd,_current
  1317  001398  C04E  F0EA         	movff	?___fladd+1,_current+1
  1318  00139C  C04F  F0EB         	movff	?___fladd+2,_current+2
  1319  0013A0  C050  F0EC         	movff	?___fladd+3,_current+3
  1320                           
  1321                           ;main.c: 85:             current = current / ( 0.2 * sqrtf(2));
  1322  0013A4  0E00               	movlw	0
  1323  0013A6  0100               	movlb	0	; () banked
  1324  0013A8  6F60               	movwf	sqrtf@x& (0+255),b
  1325  0013AA  0E00               	movlw	0
  1326  0013AC  6F61               	movwf	(sqrtf@x+1)& (0+255),b
  1327  0013AE  0E00               	movlw	0
  1328  0013B0  6F62               	movwf	(sqrtf@x+2)& (0+255),b
  1329  0013B2  0E40               	movlw	64
  1330  0013B4  6F63               	movwf	(sqrtf@x+3)& (0+255),b
  1331  0013B6  ECA0  F00D         	call	_sqrtf	;wreg free
  1332  0013BA  C060  F0E1         	movff	?_sqrtf,_main$1221
  1333  0013BE  C061  F0E2         	movff	?_sqrtf+1,_main$1221+1
  1334  0013C2  C062  F0E3         	movff	?_sqrtf+2,_main$1221+2
  1335  0013C6  C063  F0E4         	movff	?_sqrtf+3,_main$1221+3
  1336                           
  1337                           ;main.c: 85:             current = current / ( 0.2 * sqrtf(2));
  1338  0013CA  C0E9  F034         	movff	_current,___fldiv@b
  1339  0013CE  C0EA  F035         	movff	_current+1,___fldiv@b+1
  1340  0013D2  C0EB  F036         	movff	_current+2,___fldiv@b+2
  1341  0013D6  C0EC  F037         	movff	_current+3,___fldiv@b+3
  1342  0013DA  0ECD               	movlw	205
  1343  0013DC  6E13               	movwf	___flmul@a,c
  1344  0013DE  0ECC               	movlw	204
  1345  0013E0  6E14               	movwf	___flmul@a+1,c
  1346  0013E2  0E4C               	movlw	76
  1347  0013E4  6E15               	movwf	___flmul@a+2,c
  1348  0013E6  0E3E               	movlw	62
  1349  0013E8  6E16               	movwf	___flmul@a+3,c
  1350  0013EA  C0E1  F00F         	movff	_main$1221,___flmul@b
  1351  0013EE  C0E2  F010         	movff	_main$1221+1,___flmul@b+1
  1352  0013F2  C0E3  F011         	movff	_main$1221+2,___flmul@b+2
  1353  0013F6  C0E4  F012         	movff	_main$1221+3,___flmul@b+3
  1354  0013FA  ECB9  F00F         	call	___flmul	;wreg free
  1355  0013FE  C00F  F038         	movff	?___flmul,___fldiv@a
  1356  001402  C010  F039         	movff	?___flmul+1,___fldiv@a+1
  1357  001406  C011  F03A         	movff	?___flmul+2,___fldiv@a+2
  1358  00140A  C012  F03B         	movff	?___flmul+3,___fldiv@a+3
  1359  00140E  ECE8  F012         	call	___fldiv	;wreg free
  1360  001412  C034  F0E9         	movff	?___fldiv,_current
  1361  001416  C035  F0EA         	movff	?___fldiv+1,_current+1
  1362  00141A  C036  F0EB         	movff	?___fldiv+2,_current+2
  1363  00141E  C037  F0EC         	movff	?___fldiv+3,_current+3
  1364                           
  1365                           ;main.c: 86:             max_voltage = (0.5 * max_voltage_ant) + (1 - 0.5)*max_voltage;
  1366  001422  0E00               	movlw	0
  1367  001424  6E13               	movwf	___flmul@a,c
  1368  001426  0E00               	movlw	0
  1369  001428  6E14               	movwf	___flmul@a+1,c
  1370  00142A  0E00               	movlw	0
  1371  00142C  6E15               	movwf	___flmul@a+2,c
  1372  00142E  0E3F               	movlw	63
  1373  001430  6E16               	movwf	___flmul@a+3,c
  1374  001432  C0F3  F001         	movff	_max_voltage,___xxtofl@val
  1375  001436  C0F4  F002         	movff	_max_voltage+1,___xxtofl@val+1
  1376  00143A  0E00               	movlw	0
  1377  00143C  BE02               	btfsc	___xxtofl@val+1,7,c
  1378  00143E  0EFF               	movlw	-1
  1379  001440  6E03               	movwf	___xxtofl@val+2,c
  1380  001442  6E04               	movwf	___xxtofl@val+3,c
  1381  001444  0E01               	movlw	1
  1382  001446  ECA9  F015         	call	___xxtofl
  1383  00144A  C001  F00F         	movff	?___xxtofl,___flmul@b
  1384  00144E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1385  001452  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1386  001456  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1387  00145A  ECB9  F00F         	call	___flmul	;wreg free
  1388  00145E  C00F  F051         	movff	?___flmul,___fladd@a
  1389  001462  C010  F052         	movff	?___flmul+1,___fladd@a+1
  1390  001466  C011  F053         	movff	?___flmul+2,___fladd@a+2
  1391  00146A  C012  F054         	movff	?___flmul+3,___fladd@a+3
  1392  00146E  0E00               	movlw	0
  1393  001470  6E13               	movwf	___flmul@a,c
  1394  001472  0E00               	movlw	0
  1395  001474  6E14               	movwf	___flmul@a+1,c
  1396  001476  0E00               	movlw	0
  1397  001478  6E15               	movwf	___flmul@a+2,c
  1398  00147A  0E3F               	movlw	63
  1399  00147C  6E16               	movwf	___flmul@a+3,c
  1400  00147E  C0FB  F001         	movff	_max_voltage_ant,___xxtofl@val
  1401  001482  C0FC  F002         	movff	_max_voltage_ant+1,___xxtofl@val+1
  1402  001486  0E00               	movlw	0
  1403  001488  BE02               	btfsc	___xxtofl@val+1,7,c
  1404  00148A  0EFF               	movlw	-1
  1405  00148C  6E03               	movwf	___xxtofl@val+2,c
  1406  00148E  6E04               	movwf	___xxtofl@val+3,c
  1407  001490  0E01               	movlw	1
  1408  001492  ECA9  F015         	call	___xxtofl
  1409  001496  C001  F00F         	movff	?___xxtofl,___flmul@b
  1410  00149A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1411  00149E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1412  0014A2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1413  0014A6  ECB9  F00F         	call	___flmul	;wreg free
  1414  0014AA  C00F  F04D         	movff	?___flmul,___fladd@b
  1415  0014AE  C010  F04E         	movff	?___flmul+1,___fladd@b+1
  1416  0014B2  C011  F04F         	movff	?___flmul+2,___fladd@b+2
  1417  0014B6  C012  F050         	movff	?___flmul+3,___fladd@b+3
  1418  0014BA  EC62  F011         	call	___fladd	;wreg free
  1419  0014BE  C04D  F060         	movff	?___fladd,___fltol@f1
  1420  0014C2  C04E  F061         	movff	?___fladd+1,___fltol@f1+1
  1421  0014C6  C04F  F062         	movff	?___fladd+2,___fltol@f1+2
  1422  0014CA  C050  F063         	movff	?___fladd+3,___fltol@f1+3
  1423  0014CE  EC17  F017         	call	___fltol	;wreg free
  1424  0014D2  C060  F0F3         	movff	?___fltol,_max_voltage
  1425  0014D6  C061  F0F4         	movff	?___fltol+1,_max_voltage+1
  1426                           
  1427                           ;main.c: 87:             voltage = max_voltage * 5. / 1023. - 2.5;
  1428  0014DA  0E00               	movlw	0
  1429  0014DC  6E38               	movwf	___fldiv@a,c
  1430  0014DE  0EC0               	movlw	192
  1431  0014E0  6E39               	movwf	___fldiv@a+1,c
  1432  0014E2  0E7F               	movlw	127
  1433  0014E4  6E3A               	movwf	___fldiv@a+2,c
  1434  0014E6  0E44               	movlw	68
  1435  0014E8  6E3B               	movwf	___fldiv@a+3,c
  1436  0014EA  0E00               	movlw	0
  1437  0014EC  6E13               	movwf	___flmul@a,c
  1438  0014EE  0E00               	movlw	0
  1439  0014F0  6E14               	movwf	___flmul@a+1,c
  1440  0014F2  0EA0               	movlw	160
  1441  0014F4  6E15               	movwf	___flmul@a+2,c
  1442  0014F6  0E40               	movlw	64
  1443  0014F8  6E16               	movwf	___flmul@a+3,c
  1444  0014FA  C0F3  F001         	movff	_max_voltage,___xxtofl@val
  1445  0014FE  C0F4  F002         	movff	_max_voltage+1,___xxtofl@val+1
  1446  001502  0E00               	movlw	0
  1447  001504  BE02               	btfsc	___xxtofl@val+1,7,c
  1448  001506  0EFF               	movlw	-1
  1449  001508  6E03               	movwf	___xxtofl@val+2,c
  1450  00150A  6E04               	movwf	___xxtofl@val+3,c
  1451  00150C  0E01               	movlw	1
  1452  00150E  ECA9  F015         	call	___xxtofl
  1453  001512  C001  F00F         	movff	?___xxtofl,___flmul@b
  1454  001516  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1455  00151A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1456  00151E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1457  001522  ECB9  F00F         	call	___flmul	;wreg free
  1458  001526  C00F  F034         	movff	?___flmul,___fldiv@b
  1459  00152A  C010  F035         	movff	?___flmul+1,___fldiv@b+1
  1460  00152E  C011  F036         	movff	?___flmul+2,___fldiv@b+2
  1461  001532  C012  F037         	movff	?___flmul+3,___fldiv@b+3
  1462  001536  ECE8  F012         	call	___fldiv	;wreg free
  1463  00153A  C034  F04D         	movff	?___fldiv,___fladd@b
  1464  00153E  C035  F04E         	movff	?___fldiv+1,___fladd@b+1
  1465  001542  C036  F04F         	movff	?___fldiv+2,___fladd@b+2
  1466  001546  C037  F050         	movff	?___fldiv+3,___fladd@b+3
  1467  00154A  0E00               	movlw	0
  1468  00154C  6E51               	movwf	___fladd@a,c
  1469  00154E  0E00               	movlw	0
  1470  001550  6E52               	movwf	___fladd@a+1,c
  1471  001552  0E20               	movlw	32
  1472  001554  6E53               	movwf	___fladd@a+2,c
  1473  001556  0EC0               	movlw	192
  1474  001558  6E54               	movwf	___fladd@a+3,c
  1475  00155A  EC62  F011         	call	___fladd	;wreg free
  1476  00155E  C04D  F0E5         	movff	?___fladd,_voltage
  1477  001562  C04E  F0E6         	movff	?___fladd+1,_voltage+1
  1478  001566  C04F  F0E7         	movff	?___fladd+2,_voltage+2
  1479  00156A  C050  F0E8         	movff	?___fladd+3,_voltage+3
  1480                           
  1481                           ;main.c: 88:             voltage = voltage / ( 0.0227);
  1482  00156E  C0E5  F034         	movff	_voltage,___fldiv@b
  1483  001572  C0E6  F035         	movff	_voltage+1,___fldiv@b+1
  1484  001576  C0E7  F036         	movff	_voltage+2,___fldiv@b+2
  1485  00157A  C0E8  F037         	movff	_voltage+3,___fldiv@b+3
  1486  00157E  0E5A               	movlw	90
  1487  001580  6E38               	movwf	___fldiv@a,c
  1488  001582  0EF5               	movlw	245
  1489  001584  6E39               	movwf	___fldiv@a+1,c
  1490  001586  0EB9               	movlw	185
  1491  001588  6E3A               	movwf	___fldiv@a+2,c
  1492  00158A  0E3C               	movlw	60
  1493  00158C  6E3B               	movwf	___fldiv@a+3,c
  1494  00158E  ECE8  F012         	call	___fldiv	;wreg free
  1495  001592  C034  F0E5         	movff	?___fldiv,_voltage
  1496  001596  C035  F0E6         	movff	?___fldiv+1,_voltage+1
  1497  00159A  C036  F0E7         	movff	?___fldiv+2,_voltage+2
  1498  00159E  C037  F0E8         	movff	?___fldiv+3,_voltage+3
  1499                           
  1500                           ;main.c: 89:             if (voltage > 0 && current > 0)
  1501  0015A2  0E00               	movlw	0
  1502  0015A4  6E28               	movwf	___flge@ff1,c
  1503  0015A6  0E00               	movlw	0
  1504  0015A8  6E29               	movwf	___flge@ff1+1,c
  1505  0015AA  0E00               	movlw	0
  1506  0015AC  6E2A               	movwf	___flge@ff1+2,c
  1507  0015AE  0E00               	movlw	0
  1508  0015B0  6E2B               	movwf	___flge@ff1+3,c
  1509  0015B2  C0E5  F02C         	movff	_voltage,___flge@ff2
  1510  0015B6  C0E6  F02D         	movff	_voltage+1,___flge@ff2+1
  1511  0015BA  C0E7  F02E         	movff	_voltage+2,___flge@ff2+2
  1512  0015BE  C0E8  F02F         	movff	_voltage+3,___flge@ff2+3
  1513  0015C2  EC49  F016         	call	___flge	;wreg free
  1514  0015C6  B0D8               	btfsc	status,0,c
  1515  0015C8  D08E               	goto	l4463
  1516  0015CA  0E00               	movlw	0
  1517  0015CC  6E28               	movwf	___flge@ff1,c
  1518  0015CE  0E00               	movlw	0
  1519  0015D0  6E29               	movwf	___flge@ff1+1,c
  1520  0015D2  0E00               	movlw	0
  1521  0015D4  6E2A               	movwf	___flge@ff1+2,c
  1522  0015D6  0E00               	movlw	0
  1523  0015D8  6E2B               	movwf	___flge@ff1+3,c
  1524  0015DA  C0E9  F02C         	movff	_current,___flge@ff2
  1525  0015DE  C0EA  F02D         	movff	_current+1,___flge@ff2+1
  1526  0015E2  C0EB  F02E         	movff	_current+2,___flge@ff2+2
  1527  0015E6  C0EC  F02F         	movff	_current+3,___flge@ff2+3
  1528  0015EA  EC49  F016         	call	___flge	;wreg free
  1529  0015EE  B0D8               	btfsc	status,0,c
  1530  0015F0  D07A               	goto	l4463
  1531                           
  1532                           ;main.c: 90:             {;main.c: 91:                 sprintf(voltage_str, "V=%0.1fV", 
      +                          voltage);
  1533  0015F2  0E84               	movlw	low _voltage_str
  1534  0015F4  0100               	movlb	0	; () banked
  1535  0015F6  6FCE               	movwf	sprintf@s& (0+255),b
  1536  0015F8  0E01               	movlw	high _voltage_str
  1537  0015FA  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1538  0015FC  0E18               	movlw	low STR_1
  1539  0015FE  6FD0               	movwf	sprintf@fmt& (0+255),b
  1540  001600  0E08               	movlw	high STR_1
  1541  001602  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1542  001604  C0E5  F0D2         	movff	_voltage,?_sprintf+4
  1543  001608  C0E6  F0D3         	movff	_voltage+1,?_sprintf+5
  1544  00160C  C0E7  F0D4         	movff	_voltage+2,?_sprintf+6
  1545  001610  C0E8  F0D5         	movff	_voltage+3,?_sprintf+7
  1546  001614  EC8E  F019         	call	_sprintf	;wreg free
  1547                           
  1548                           ;main.c: 92:                 LCD_String_xy(1,1, voltage_str);
  1549  001618  0E01               	movlw	1
  1550  00161A  6E0B               	movwf	LCD_String_xy@pos,c
  1551  00161C  0E84               	movlw	low _voltage_str
  1552  00161E  6E0C               	movwf	LCD_String_xy@msg,c
  1553  001620  0E01               	movlw	high _voltage_str
  1554  001622  6E0D               	movwf	LCD_String_xy@msg+1,c
  1555  001624  0E01               	movlw	1
  1556  001626  ECB1  F01A         	call	_LCD_String_xy
  1557                           
  1558                           ;main.c: 93:                 MSdelay(10);
  1559  00162A  0E00               	movlw	0
  1560  00162C  6E02               	movwf	MSdelay@val+1,c
  1561  00162E  0E0A               	movlw	10
  1562  001630  6E01               	movwf	MSdelay@val,c
  1563  001632  ECCB  F01A         	call	_MSdelay	;wreg free
  1564                           
  1565                           ;main.c: 94:                 sprintf(current_str, "I=%0.1fA", current);
  1566  001636  0E8B               	movlw	low _current_str
  1567  001638  0100               	movlb	0	; () banked
  1568  00163A  6FCE               	movwf	sprintf@s& (0+255),b
  1569  00163C  0E01               	movlw	high _current_str
  1570  00163E  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1571  001640  0E0F               	movlw	low STR_2
  1572  001642  6FD0               	movwf	sprintf@fmt& (0+255),b
  1573  001644  0E08               	movlw	high STR_2
  1574  001646  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1575  001648  C0E9  F0D2         	movff	_current,?_sprintf+4
  1576  00164C  C0EA  F0D3         	movff	_current+1,?_sprintf+5
  1577  001650  C0EB  F0D4         	movff	_current+2,?_sprintf+6
  1578  001654  C0EC  F0D5         	movff	_current+3,?_sprintf+7
  1579  001658  EC8E  F019         	call	_sprintf	;wreg free
  1580                           
  1581                           ;main.c: 95:                 LCD_String_xy(1,10, current_str);
  1582  00165C  0E0A               	movlw	10
  1583  00165E  6E0B               	movwf	LCD_String_xy@pos,c
  1584  001660  0E8B               	movlw	low _current_str
  1585  001662  6E0C               	movwf	LCD_String_xy@msg,c
  1586  001664  0E01               	movlw	high _current_str
  1587  001666  6E0D               	movwf	LCD_String_xy@msg+1,c
  1588  001668  0E01               	movlw	1
  1589  00166A  ECB1  F01A         	call	_LCD_String_xy
  1590                           
  1591                           ;main.c: 96:                 MSdelay(10);
  1592  00166E  0E00               	movlw	0
  1593  001670  6E02               	movwf	MSdelay@val+1,c
  1594  001672  0E0A               	movlw	10
  1595  001674  6E01               	movwf	MSdelay@val,c
  1596  001676  ECCB  F01A         	call	_MSdelay	;wreg free
  1597                           
  1598                           ;main.c: 97:                 power = current * voltage;
  1599  00167A  C0E9  F00F         	movff	_current,___flmul@b
  1600  00167E  C0EA  F010         	movff	_current+1,___flmul@b+1
  1601  001682  C0EB  F011         	movff	_current+2,___flmul@b+2
  1602  001686  C0EC  F012         	movff	_current+3,___flmul@b+3
  1603  00168A  C0E5  F013         	movff	_voltage,___flmul@a
  1604  00168E  C0E6  F014         	movff	_voltage+1,___flmul@a+1
  1605  001692  C0E7  F015         	movff	_voltage+2,___flmul@a+2
  1606  001696  C0E8  F016         	movff	_voltage+3,___flmul@a+3
  1607  00169A  ECB9  F00F         	call	___flmul	;wreg free
  1608  00169E  C00F  F11B         	movff	?___flmul,_power
  1609  0016A2  C010  F11C         	movff	?___flmul+1,_power+1
  1610  0016A6  C011  F11D         	movff	?___flmul+2,_power+2
  1611  0016AA  C012  F11E         	movff	?___flmul+3,_power+3
  1612                           
  1613                           ;main.c: 98:                 sprintf(power_str, "P=%0.2f W", power);
  1614  0016AE  0E7D               	movlw	low _power_str
  1615  0016B0  0100               	movlb	0	; () banked
  1616  0016B2  6FCE               	movwf	sprintf@s& (0+255),b
  1617  0016B4  0E01               	movlw	high _power_str
  1618  0016B6  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1619  0016B8  0E05               	movlw	low STR_3
  1620  0016BA  6FD0               	movwf	sprintf@fmt& (0+255),b
  1621  0016BC  0E08               	movlw	high STR_3
  1622  0016BE  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1623  0016C0  C11B  F0D2         	movff	_power,?_sprintf+4
  1624  0016C4  C11C  F0D3         	movff	_power+1,?_sprintf+5
  1625  0016C8  C11D  F0D4         	movff	_power+2,?_sprintf+6
  1626  0016CC  C11E  F0D5         	movff	_power+3,?_sprintf+7
  1627  0016D0  EC8E  F019         	call	_sprintf	;wreg free
  1628                           
  1629                           ;main.c: 99:                 LCD_String_xy(2,1, power_str);
  1630  0016D4  0E01               	movlw	1
  1631  0016D6  6E0B               	movwf	LCD_String_xy@pos,c
  1632  0016D8  0E7D               	movlw	low _power_str
  1633  0016DA  6E0C               	movwf	LCD_String_xy@msg,c
  1634  0016DC  0E01               	movlw	high _power_str
  1635  0016DE  6E0D               	movwf	LCD_String_xy@msg+1,c
  1636  0016E0  0E02               	movlw	2
  1637  0016E2  ECB1  F01A         	call	_LCD_String_xy
  1638  0016E6                     l4463:
  1639                           
  1640                           ;main.c: 101:             max_current_ant = max_current;
  1641  0016E6  C0F5  F0FD         	movff	_max_current,_max_current_ant
  1642  0016EA  C0F6  F0FE         	movff	_max_current+1,_max_current_ant+1
  1643                           
  1644                           ;main.c: 102:             max_current = 0;
  1645  0016EE  0E00               	movlw	0
  1646  0016F0  0100               	movlb	0	; () banked
  1647  0016F2  6FF6               	movwf	(_max_current+1)& (0+255),b
  1648  0016F4  0E00               	movlw	0
  1649  0016F6  6FF5               	movwf	_max_current& (0+255),b
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;main.c: 103:             max_voltage_ant = max_voltage;
  1653  0016F8  C0F3  F0FB         	movff	_max_voltage,_max_voltage_ant
  1654  0016FC  C0F4  F0FC         	movff	_max_voltage+1,_max_voltage_ant+1
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;main.c: 104:             max_voltage = 0;
  1658  001700  0E00               	movlw	0
  1659  001702  6FF4               	movwf	(_max_voltage+1)& (0+255),b
  1660  001704  0E00               	movlw	0
  1661  001706  6FF3               	movwf	_max_voltage& (0+255),b
  1662  001708  D560               	goto	l4425
  1663  00170A                     __end_of_main:
  1664                           	opt callstack 0
  1665                           
  1666 ;; *************** function _sqrtf *****************
  1667 ;; Defined at:
  1668 ;;		line 24 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sqrtf.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  x               4    0[BANK0 ] float 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  ix              4   45[BANK0 ] long 
  1673 ;;  r               4   41[BANK0 ] unsigned long 
  1674 ;;  m               4   37[BANK0 ] long 
  1675 ;;  z               4   33[BANK0 ] float 
  1676 ;;  t               4   29[BANK0 ] long 
  1677 ;;  q               4   25[BANK0 ] long 
  1678 ;;  __xc8_float_    4   21[BANK0 ] struct .
  1679 ;;  i               4   17[BANK0 ] long 
  1680 ;;  s               4   13[BANK0 ] long 
  1681 ;;  sign            4    0        long 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  4    0[BANK0 ] float 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1691 ;;      Params:         0       4       0       0       0       0       0       0       0
  1692 ;;      Locals:         0      40       0       0       0       0       0       0       0
  1693 ;;      Temps:          0       5       0       0       0       0       0       0       0
  1694 ;;      Totals:         0      49       0       0       0       0       0       0       0
  1695 ;;Total ram usage:       49 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    2
  1698 ;; This function calls:
  1699 ;;		___fladd
  1700 ;;		___flge
  1701 ;;		___flmul
  1702 ;;		_nanf
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text1
  1709  001B40                     __ptext1:
  1710                           	opt callstack 0
  1711  001B40                     _sqrtf:
  1712                           	opt callstack 28
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;incstack = 0
  1716  001B40  C060  F075         	movff	sqrtf@x,sqrtf@__xc8_float_word
  1717  001B44  C061  F076         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
  1718  001B48  C062  F077         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
  1719  001B4C  C063  F078         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
  1720  001B50  C075  F08D         	movff	sqrtf@__xc8_float_word,sqrtf@ix
  1721  001B54  C076  F08E         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
  1722  001B58  C077  F08F         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
  1723  001B5C  C078  F090         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
  1724  001B60  0E00               	movlw	0
  1725  001B62  0100               	movlb	0	; () banked
  1726  001B64  158D               	andwf	sqrtf@ix& (0+255),w,b
  1727  001B66  6F64               	movwf	??_sqrtf& (0+255),b
  1728  001B68  0E00               	movlw	0
  1729  001B6A  158E               	andwf	(sqrtf@ix+1)& (0+255),w,b
  1730  001B6C  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  1731  001B6E  0E80               	movlw	128
  1732  001B70  158F               	andwf	(sqrtf@ix+2)& (0+255),w,b
  1733  001B72  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  1734  001B74  0E7F               	movlw	127
  1735  001B76  1590               	andwf	(sqrtf@ix+3)& (0+255),w,b
  1736  001B78  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  1737  001B7A  0E80               	movlw	128
  1738  001B7C  1966               	xorwf	(??_sqrtf+2)& (0+255),w,b
  1739  001B7E  E133               	bnz	l4279
  1740  001B80  0E7F               	movlw	127
  1741  001B82  1967               	xorwf	(??_sqrtf+3)& (0+255),w,b
  1742  001B84  1164               	iorwf	??_sqrtf& (0+255),w,b
  1743  001B86  1165               	iorwf	(??_sqrtf+1)& (0+255),w,b
  1744  001B88  A4D8               	btfss	status,2,c
  1745  001B8A  D02D               	goto	l4279
  1746                           
  1747                           ; BSR set to: 0
  1748  001B8C  C060  F013         	movff	sqrtf@x,___flmul@a
  1749  001B90  C061  F014         	movff	sqrtf@x+1,___flmul@a+1
  1750  001B94  C062  F015         	movff	sqrtf@x+2,___flmul@a+2
  1751  001B98  C063  F016         	movff	sqrtf@x+3,___flmul@a+3
  1752  001B9C  C060  F00F         	movff	sqrtf@x,___flmul@b
  1753  001BA0  C061  F010         	movff	sqrtf@x+1,___flmul@b+1
  1754  001BA4  C062  F011         	movff	sqrtf@x+2,___flmul@b+2
  1755  001BA8  C063  F012         	movff	sqrtf@x+3,___flmul@b+3
  1756  001BAC  ECB9  F00F         	call	___flmul	;wreg free
  1757  001BB0  C00F  F04D         	movff	?___flmul,___fladd@b
  1758  001BB4  C010  F04E         	movff	?___flmul+1,___fladd@b+1
  1759  001BB8  C011  F04F         	movff	?___flmul+2,___fladd@b+2
  1760  001BBC  C012  F050         	movff	?___flmul+3,___fladd@b+3
  1761  001BC0  C060  F051         	movff	sqrtf@x,___fladd@a
  1762  001BC4  C061  F052         	movff	sqrtf@x+1,___fladd@a+1
  1763  001BC8  C062  F053         	movff	sqrtf@x+2,___fladd@a+2
  1764  001BCC  C063  F054         	movff	sqrtf@x+3,___fladd@a+3
  1765  001BD0  EC62  F011         	call	___fladd	;wreg free
  1766  001BD4  C04D  F060         	movff	?___fladd,?_sqrtf
  1767  001BD8  C04E  F061         	movff	?___fladd+1,?_sqrtf+1
  1768  001BDC  C04F  F062         	movff	?___fladd+2,?_sqrtf+2
  1769  001BE0  C050  F063         	movff	?___fladd+3,?_sqrtf+3
  1770  001BE4  0012               	return	
  1771  001BE6                     l4279:
  1772                           
  1773                           ; BSR set to: 0
  1774  001BE6  BF90               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  1775  001BE8  D007               	goto	u5080
  1776  001BEA  5190               	movf	(sqrtf@ix+3)& (0+255),w,b
  1777  001BEC  118F               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  1778  001BEE  118E               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  1779  001BF0  E134               	bnz	l4293
  1780  001BF2  058D               	decf	sqrtf@ix& (0+255),w,b
  1781  001BF4  B0D8               	btfsc	status,0,c
  1782  001BF6  D031               	goto	l4293
  1783  001BF8                     u5080:
  1784                           
  1785                           ; BSR set to: 0
  1786  001BF8  0EFF               	movlw	255
  1787  001BFA  158D               	andwf	sqrtf@ix& (0+255),w,b
  1788  001BFC  6F64               	movwf	??_sqrtf& (0+255),b
  1789  001BFE  0EFF               	movlw	255
  1790  001C00  158E               	andwf	(sqrtf@ix+1)& (0+255),w,b
  1791  001C02  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  1792  001C04  0EFF               	movlw	255
  1793  001C06  158F               	andwf	(sqrtf@ix+2)& (0+255),w,b
  1794  001C08  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  1795  001C0A  0E7F               	movlw	127
  1796  001C0C  1590               	andwf	(sqrtf@ix+3)& (0+255),w,b
  1797  001C0E  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  1798  001C10  5164               	movf	??_sqrtf& (0+255),w,b
  1799  001C12  1165               	iorwf	(??_sqrtf+1)& (0+255),w,b
  1800  001C14  1166               	iorwf	(??_sqrtf+2)& (0+255),w,b
  1801  001C16  1167               	iorwf	(??_sqrtf+3)& (0+255),w,b
  1802  001C18  A4D8               	btfss	status,2,c
  1803  001C1A  D009               	goto	l4285
  1804                           
  1805                           ; BSR set to: 0
  1806  001C1C  C060  F060         	movff	sqrtf@x,?_sqrtf
  1807  001C20  C061  F061         	movff	sqrtf@x+1,?_sqrtf+1
  1808  001C24  C062  F062         	movff	sqrtf@x+2,?_sqrtf+2
  1809  001C28  C063  F063         	movff	sqrtf@x+3,?_sqrtf+3
  1810  001C2C  0012               	return	
  1811  001C2E                     l4285:
  1812                           
  1813                           ; BSR set to: 0
  1814  001C2E  AF90               	btfss	(sqrtf@ix+3)& (0+255),7,b
  1815  001C30  D014               	goto	l4293
  1816                           
  1817                           ; BSR set to: 0
  1818  001C32  0E00               	movlw	0
  1819  001C34  0101               	movlb	1	; () banked
  1820  001C36  6F28               	movwf	(_errno+1)& (0+255),b
  1821  001C38  0E21               	movlw	33
  1822  001C3A  6F27               	movwf	_errno& (0+255),b
  1823                           
  1824                           ; BSR set to: 1
  1825  001C3C  0E17               	movlw	low (STR_2+8)
  1826  001C3E  6E01               	movwf	nanf@s,c
  1827  001C40  0E08               	movlw	high (STR_2+8)
  1828  001C42  6E02               	movwf	nanf@s+1,c
  1829  001C44  ECA3  F01B         	call	_nanf	;wreg free
  1830  001C48  C001  F060         	movff	?_nanf,?_sqrtf
  1831  001C4C  C002  F061         	movff	?_nanf+1,?_sqrtf+1
  1832  001C50  C003  F062         	movff	?_nanf+2,?_sqrtf+2
  1833  001C54  C004  F063         	movff	?_nanf+3,?_sqrtf+3
  1834  001C58  0012               	return	
  1835  001C5A                     l4293:
  1836                           
  1837                           ; BSR set to: 0
  1838  001C5A  0E17               	movlw	23
  1839  001C5C  6F64               	movwf	??_sqrtf& (0+255),b
  1840  001C5E  C08D  F065         	movff	sqrtf@ix,??_sqrtf+1
  1841  001C62  C08E  F066         	movff	sqrtf@ix+1,??_sqrtf+2
  1842  001C66  C08F  F067         	movff	sqrtf@ix+2,??_sqrtf+3
  1843  001C6A  C090  F068         	movff	sqrtf@ix+3,??_sqrtf+4
  1844  001C6E                     u5115:
  1845  001C6E  6764               	tstfsz	??_sqrtf& (0+255),b
  1846  001C70  D001               	goto	u5116
  1847  001C72  D007               	goto	u5117
  1848  001C74                     u5116:
  1849  001C74  3568               	rlcf	(??_sqrtf+4)& (0+255),w,b
  1850  001C76  3368               	rrcf	(??_sqrtf+4)& (0+255),f,b
  1851  001C78  3367               	rrcf	(??_sqrtf+3)& (0+255),f,b
  1852  001C7A  3366               	rrcf	(??_sqrtf+2)& (0+255),f,b
  1853  001C7C  3365               	rrcf	(??_sqrtf+1)& (0+255),f,b
  1854  001C7E  2F64               	decfsz	??_sqrtf& (0+255),f,b
  1855  001C80  D7F6               	goto	u5115
  1856  001C82                     u5117:
  1857  001C82  C065  F085         	movff	??_sqrtf+1,sqrtf@m
  1858  001C86  C066  F086         	movff	??_sqrtf+2,sqrtf@m+1
  1859  001C8A  C067  F087         	movff	??_sqrtf+3,sqrtf@m+2
  1860  001C8E  C068  F088         	movff	??_sqrtf+4,sqrtf@m+3
  1861  001C92  0100               	movlb	0	; () banked
  1862  001C94  5185               	movf	sqrtf@m& (0+255),w,b
  1863  001C96  1186               	iorwf	(sqrtf@m+1)& (0+255),w,b
  1864  001C98  1187               	iorwf	(sqrtf@m+2)& (0+255),w,b
  1865  001C9A  1188               	iorwf	(sqrtf@m+3)& (0+255),w,b
  1866  001C9C  A4D8               	btfss	status,2,c
  1867  001C9E  D02A               	goto	l1144
  1868                           
  1869                           ; BSR set to: 0
  1870  001CA0  0E00               	movlw	0
  1871  001CA2  6F71               	movwf	sqrtf@i& (0+255),b
  1872  001CA4  0E00               	movlw	0
  1873  001CA6  6F72               	movwf	(sqrtf@i+1)& (0+255),b
  1874  001CA8  0E00               	movlw	0
  1875  001CAA  6F73               	movwf	(sqrtf@i+2)& (0+255),b
  1876  001CAC  0E00               	movlw	0
  1877  001CAE  6F74               	movwf	(sqrtf@i+3)& (0+255),b
  1878  001CB0  D00B               	goto	l4301
  1879  001CB2                     l4297:
  1880                           
  1881                           ; BSR set to: 0
  1882  001CB2  90D8               	bcf	status,0,c
  1883  001CB4  378D               	rlcf	sqrtf@ix& (0+255),f,b
  1884  001CB6  378E               	rlcf	(sqrtf@ix+1)& (0+255),f,b
  1885  001CB8  378F               	rlcf	(sqrtf@ix+2)& (0+255),f,b
  1886  001CBA  3790               	rlcf	(sqrtf@ix+3)& (0+255),f,b
  1887                           
  1888                           ; BSR set to: 0
  1889  001CBC  0E01               	movlw	1
  1890  001CBE  2771               	addwf	sqrtf@i& (0+255),f,b
  1891  001CC0  0E00               	movlw	0
  1892  001CC2  2372               	addwfc	(sqrtf@i+1)& (0+255),f,b
  1893  001CC4  2373               	addwfc	(sqrtf@i+2)& (0+255),f,b
  1894  001CC6  2374               	addwfc	(sqrtf@i+3)& (0+255),f,b
  1895  001CC8                     l4301:
  1896                           
  1897                           ; BSR set to: 0
  1898  001CC8  AF8F               	btfss	(sqrtf@ix+2)& (0+255),7,b
  1899  001CCA  D7F3               	goto	l4297
  1900                           
  1901                           ; BSR set to: 0
  1902  001CCC  0EFF               	movlw	255
  1903  001CCE  2571               	addwf	sqrtf@i& (0+255),w,b
  1904  001CD0  6F64               	movwf	??_sqrtf& (0+255),b
  1905  001CD2  0EFF               	movlw	255
  1906  001CD4  2172               	addwfc	(sqrtf@i+1)& (0+255),w,b
  1907  001CD6  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  1908  001CD8  0EFF               	movlw	255
  1909  001CDA  2173               	addwfc	(sqrtf@i+2)& (0+255),w,b
  1910  001CDC  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  1911  001CDE  0EFF               	movlw	255
  1912  001CE0  2174               	addwfc	(sqrtf@i+3)& (0+255),w,b
  1913  001CE2  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  1914  001CE4  5164               	movf	??_sqrtf& (0+255),w,b
  1915  001CE6  5F85               	subwf	sqrtf@m& (0+255),f,b
  1916  001CE8  5165               	movf	(??_sqrtf+1)& (0+255),w,b
  1917  001CEA  5B86               	subwfb	(sqrtf@m+1)& (0+255),f,b
  1918  001CEC  5166               	movf	(??_sqrtf+2)& (0+255),w,b
  1919  001CEE  5B87               	subwfb	(sqrtf@m+2)& (0+255),f,b
  1920  001CF0  5167               	movf	(??_sqrtf+3)& (0+255),w,b
  1921  001CF2  5B88               	subwfb	(sqrtf@m+3)& (0+255),f,b
  1922  001CF4                     l1144:
  1923                           
  1924                           ; BSR set to: 0
  1925  001CF4  0E81               	movlw	129
  1926  001CF6  2785               	addwf	sqrtf@m& (0+255),f,b
  1927  001CF8  0EFF               	movlw	255
  1928  001CFA  2386               	addwfc	(sqrtf@m+1)& (0+255),f,b
  1929  001CFC  0EFF               	movlw	255
  1930  001CFE  2387               	addwfc	(sqrtf@m+2)& (0+255),f,b
  1931  001D00  0EFF               	movlw	255
  1932  001D02  2388               	addwfc	(sqrtf@m+3)& (0+255),f,b
  1933  001D04  0EFF               	movlw	255
  1934  001D06  158D               	andwf	sqrtf@ix& (0+255),w,b
  1935  001D08  6F64               	movwf	??_sqrtf& (0+255),b
  1936  001D0A  0EFF               	movlw	255
  1937  001D0C  158E               	andwf	(sqrtf@ix+1)& (0+255),w,b
  1938  001D0E  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  1939  001D10  0E7F               	movlw	127
  1940  001D12  158F               	andwf	(sqrtf@ix+2)& (0+255),w,b
  1941  001D14  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  1942  001D16  0E00               	movlw	0
  1943  001D18  1590               	andwf	(sqrtf@ix+3)& (0+255),w,b
  1944  001D1A  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  1945  001D1C  0E00               	movlw	0
  1946  001D1E  1164               	iorwf	??_sqrtf& (0+255),w,b
  1947  001D20  6F8D               	movwf	sqrtf@ix& (0+255),b
  1948  001D22  0E00               	movlw	0
  1949  001D24  1165               	iorwf	(??_sqrtf+1)& (0+255),w,b
  1950  001D26  6F8E               	movwf	(sqrtf@ix+1)& (0+255),b
  1951  001D28  0E80               	movlw	128
  1952  001D2A  1166               	iorwf	(??_sqrtf+2)& (0+255),w,b
  1953  001D2C  6F8F               	movwf	(sqrtf@ix+2)& (0+255),b
  1954  001D2E  0E00               	movlw	0
  1955  001D30  1167               	iorwf	(??_sqrtf+3)& (0+255),w,b
  1956  001D32  6F90               	movwf	(sqrtf@ix+3)& (0+255),b
  1957                           
  1958                           ; BSR set to: 0
  1959  001D34  A185               	btfss	sqrtf@m& (0+255),0,b
  1960  001D36  D008               	goto	l1148
  1961                           
  1962                           ; BSR set to: 0
  1963  001D38  518D               	movf	sqrtf@ix& (0+255),w,b
  1964  001D3A  278D               	addwf	sqrtf@ix& (0+255),f,b
  1965  001D3C  518E               	movf	(sqrtf@ix+1)& (0+255),w,b
  1966  001D3E  238E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  1967  001D40  518F               	movf	(sqrtf@ix+2)& (0+255),w,b
  1968  001D42  238F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  1969  001D44  5190               	movf	(sqrtf@ix+3)& (0+255),w,b
  1970  001D46  2390               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  1971  001D48                     l1148:
  1972                           
  1973                           ; BSR set to: 0
  1974  001D48  3588               	rlcf	(sqrtf@m+3)& (0+255),w,b
  1975  001D4A  3388               	rrcf	(sqrtf@m+3)& (0+255),f,b
  1976  001D4C  3387               	rrcf	(sqrtf@m+2)& (0+255),f,b
  1977  001D4E  3386               	rrcf	(sqrtf@m+1)& (0+255),f,b
  1978  001D50  3385               	rrcf	sqrtf@m& (0+255),f,b
  1979  001D52  518D               	movf	sqrtf@ix& (0+255),w,b
  1980  001D54  278D               	addwf	sqrtf@ix& (0+255),f,b
  1981  001D56  518E               	movf	(sqrtf@ix+1)& (0+255),w,b
  1982  001D58  238E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  1983  001D5A  518F               	movf	(sqrtf@ix+2)& (0+255),w,b
  1984  001D5C  238F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  1985  001D5E  5190               	movf	(sqrtf@ix+3)& (0+255),w,b
  1986  001D60  2390               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  1987                           
  1988                           ; BSR set to: 0
  1989  001D62  0E00               	movlw	0
  1990  001D64  6F6D               	movwf	sqrtf@s& (0+255),b
  1991  001D66  0E00               	movlw	0
  1992  001D68  6F6E               	movwf	(sqrtf@s+1)& (0+255),b
  1993  001D6A  0E00               	movlw	0
  1994  001D6C  6F6F               	movwf	(sqrtf@s+2)& (0+255),b
  1995  001D6E  0E00               	movlw	0
  1996  001D70  6F70               	movwf	(sqrtf@s+3)& (0+255),b
  1997  001D72  C06D  F079         	movff	sqrtf@s,sqrtf@q
  1998  001D76  C06E  F07A         	movff	sqrtf@s+1,sqrtf@q+1
  1999  001D7A  C06F  F07B         	movff	sqrtf@s+2,sqrtf@q+2
  2000  001D7E  C070  F07C         	movff	sqrtf@s+3,sqrtf@q+3
  2001                           
  2002                           ; BSR set to: 0
  2003  001D82  0E00               	movlw	0
  2004  001D84  6F89               	movwf	sqrtf@r& (0+255),b
  2005  001D86  0E00               	movlw	0
  2006  001D88  6F8A               	movwf	(sqrtf@r+1)& (0+255),b
  2007  001D8A  0E00               	movlw	0
  2008  001D8C  6F8B               	movwf	(sqrtf@r+2)& (0+255),b
  2009  001D8E  0E01               	movlw	1
  2010  001D90  6F8C               	movwf	(sqrtf@r+3)& (0+255),b
  2011  001D92  D043               	goto	l4319
  2012  001D94                     l4313:
  2013                           
  2014                           ; BSR set to: 0
  2015  001D94  5189               	movf	sqrtf@r& (0+255),w,b
  2016  001D96  256D               	addwf	sqrtf@s& (0+255),w,b
  2017  001D98  6F7D               	movwf	sqrtf@t& (0+255),b
  2018  001D9A  518A               	movf	(sqrtf@r+1)& (0+255),w,b
  2019  001D9C  216E               	addwfc	(sqrtf@s+1)& (0+255),w,b
  2020  001D9E  6F7E               	movwf	(sqrtf@t+1)& (0+255),b
  2021  001DA0  518B               	movf	(sqrtf@r+2)& (0+255),w,b
  2022  001DA2  216F               	addwfc	(sqrtf@s+2)& (0+255),w,b
  2023  001DA4  6F7F               	movwf	(sqrtf@t+2)& (0+255),b
  2024  001DA6  518C               	movf	(sqrtf@r+3)& (0+255),w,b
  2025  001DA8  2170               	addwfc	(sqrtf@s+3)& (0+255),w,b
  2026  001DAA  6F80               	movwf	(sqrtf@t+3)& (0+255),b
  2027  001DAC  517D               	movf	sqrtf@t& (0+255),w,b
  2028  001DAE  5D8D               	subwf	sqrtf@ix& (0+255),w,b
  2029  001DB0  517E               	movf	(sqrtf@t+1)& (0+255),w,b
  2030  001DB2  598E               	subwfb	(sqrtf@ix+1)& (0+255),w,b
  2031  001DB4  517F               	movf	(sqrtf@t+2)& (0+255),w,b
  2032  001DB6  598F               	subwfb	(sqrtf@ix+2)& (0+255),w,b
  2033  001DB8  5190               	movf	(sqrtf@ix+3)& (0+255),w,b
  2034  001DBA  0A80               	xorlw	128
  2035  001DBC  6F64               	movwf	??_sqrtf& (0+255),b
  2036  001DBE  5180               	movf	(sqrtf@t+3)& (0+255),w,b
  2037  001DC0  0A80               	xorlw	128
  2038  001DC2  5964               	subwfb	??_sqrtf& (0+255),w,b
  2039  001DC4  A0D8               	btfss	status,0,c
  2040  001DC6  D01C               	goto	l1151
  2041                           
  2042                           ; BSR set to: 0
  2043  001DC8  5189               	movf	sqrtf@r& (0+255),w,b
  2044  001DCA  257D               	addwf	sqrtf@t& (0+255),w,b
  2045  001DCC  6F6D               	movwf	sqrtf@s& (0+255),b
  2046  001DCE  518A               	movf	(sqrtf@r+1)& (0+255),w,b
  2047  001DD0  217E               	addwfc	(sqrtf@t+1)& (0+255),w,b
  2048  001DD2  6F6E               	movwf	(sqrtf@s+1)& (0+255),b
  2049  001DD4  518B               	movf	(sqrtf@r+2)& (0+255),w,b
  2050  001DD6  217F               	addwfc	(sqrtf@t+2)& (0+255),w,b
  2051  001DD8  6F6F               	movwf	(sqrtf@s+2)& (0+255),b
  2052  001DDA  518C               	movf	(sqrtf@r+3)& (0+255),w,b
  2053  001DDC  2180               	addwfc	(sqrtf@t+3)& (0+255),w,b
  2054  001DDE  6F70               	movwf	(sqrtf@s+3)& (0+255),b
  2055  001DE0  517D               	movf	sqrtf@t& (0+255),w,b
  2056  001DE2  5F8D               	subwf	sqrtf@ix& (0+255),f,b
  2057  001DE4  517E               	movf	(sqrtf@t+1)& (0+255),w,b
  2058  001DE6  5B8E               	subwfb	(sqrtf@ix+1)& (0+255),f,b
  2059  001DE8  517F               	movf	(sqrtf@t+2)& (0+255),w,b
  2060  001DEA  5B8F               	subwfb	(sqrtf@ix+2)& (0+255),f,b
  2061  001DEC  5180               	movf	(sqrtf@t+3)& (0+255),w,b
  2062  001DEE  5B90               	subwfb	(sqrtf@ix+3)& (0+255),f,b
  2063  001DF0  5189               	movf	sqrtf@r& (0+255),w,b
  2064  001DF2  2779               	addwf	sqrtf@q& (0+255),f,b
  2065  001DF4  518A               	movf	(sqrtf@r+1)& (0+255),w,b
  2066  001DF6  237A               	addwfc	(sqrtf@q+1)& (0+255),f,b
  2067  001DF8  518B               	movf	(sqrtf@r+2)& (0+255),w,b
  2068  001DFA  237B               	addwfc	(sqrtf@q+2)& (0+255),f,b
  2069  001DFC  518C               	movf	(sqrtf@r+3)& (0+255),w,b
  2070  001DFE  237C               	addwfc	(sqrtf@q+3)& (0+255),f,b
  2071  001E00                     l1151:
  2072                           
  2073                           ; BSR set to: 0
  2074  001E00  518D               	movf	sqrtf@ix& (0+255),w,b
  2075  001E02  278D               	addwf	sqrtf@ix& (0+255),f,b
  2076  001E04  518E               	movf	(sqrtf@ix+1)& (0+255),w,b
  2077  001E06  238E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  2078  001E08  518F               	movf	(sqrtf@ix+2)& (0+255),w,b
  2079  001E0A  238F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  2080  001E0C  5190               	movf	(sqrtf@ix+3)& (0+255),w,b
  2081  001E0E  2390               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  2082                           
  2083                           ; BSR set to: 0
  2084  001E10  90D8               	bcf	status,0,c
  2085  001E12  338C               	rrcf	(sqrtf@r+3)& (0+255),f,b
  2086  001E14  338B               	rrcf	(sqrtf@r+2)& (0+255),f,b
  2087  001E16  338A               	rrcf	(sqrtf@r+1)& (0+255),f,b
  2088  001E18  3389               	rrcf	sqrtf@r& (0+255),f,b
  2089  001E1A                     l4319:
  2090                           
  2091                           ; BSR set to: 0
  2092  001E1A  5189               	movf	sqrtf@r& (0+255),w,b
  2093  001E1C  118A               	iorwf	(sqrtf@r+1)& (0+255),w,b
  2094  001E1E  118B               	iorwf	(sqrtf@r+2)& (0+255),w,b
  2095  001E20  118C               	iorwf	(sqrtf@r+3)& (0+255),w,b
  2096  001E22  A4D8               	btfss	status,2,c
  2097  001E24  D7B7               	goto	l4313
  2098                           
  2099                           ; BSR set to: 0
  2100  001E26  518D               	movf	sqrtf@ix& (0+255),w,b
  2101  001E28  118E               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  2102  001E2A  118F               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  2103  001E2C  1190               	iorwf	(sqrtf@ix+3)& (0+255),w,b
  2104  001E2E  B4D8               	btfsc	status,2,c
  2105  001E30  D055               	goto	l1153
  2106                           
  2107                           ; BSR set to: 0
  2108  001E32  0E00               	movlw	0
  2109  001E34  6F81               	movwf	sqrtf@z& (0+255),b
  2110  001E36  0E00               	movlw	0
  2111  001E38  6F82               	movwf	(sqrtf@z+1)& (0+255),b
  2112  001E3A  0E80               	movlw	128
  2113  001E3C  6F83               	movwf	(sqrtf@z+2)& (0+255),b
  2114  001E3E  0E3F               	movlw	63
  2115  001E40  6F84               	movwf	(sqrtf@z+3)& (0+255),b
  2116                           
  2117                           ; BSR set to: 0
  2118  001E42  C081  F028         	movff	sqrtf@z,___flge@ff1
  2119  001E46  C082  F029         	movff	sqrtf@z+1,___flge@ff1+1
  2120  001E4A  C083  F02A         	movff	sqrtf@z+2,___flge@ff1+2
  2121  001E4E  C084  F02B         	movff	sqrtf@z+3,___flge@ff1+3
  2122  001E52  0E00               	movlw	0
  2123  001E54  6E2C               	movwf	___flge@ff2,c
  2124  001E56  0E00               	movlw	0
  2125  001E58  6E2D               	movwf	___flge@ff2+1,c
  2126  001E5A  0E80               	movlw	128
  2127  001E5C  6E2E               	movwf	___flge@ff2+2,c
  2128  001E5E  0E3F               	movlw	63
  2129  001E60  6E2F               	movwf	___flge@ff2+3,c
  2130  001E62  EC49  F016         	call	___flge	;wreg free
  2131  001E66  A0D8               	btfss	status,0,c
  2132  001E68  D039               	goto	l1153
  2133  001E6A  0E00               	movlw	0
  2134  001E6C  0100               	movlb	0	; () banked
  2135  001E6E  6F81               	movwf	sqrtf@z& (0+255),b
  2136  001E70  0E00               	movlw	0
  2137  001E72  6F82               	movwf	(sqrtf@z+1)& (0+255),b
  2138  001E74  0E80               	movlw	128
  2139  001E76  6F83               	movwf	(sqrtf@z+2)& (0+255),b
  2140  001E78  0E3F               	movlw	63
  2141  001E7A  6F84               	movwf	(sqrtf@z+3)& (0+255),b
  2142                           
  2143                           ; BSR set to: 0
  2144  001E7C  0E00               	movlw	0
  2145  001E7E  6E28               	movwf	___flge@ff1,c
  2146  001E80  0E00               	movlw	0
  2147  001E82  6E29               	movwf	___flge@ff1+1,c
  2148  001E84  0E80               	movlw	128
  2149  001E86  6E2A               	movwf	___flge@ff1+2,c
  2150  001E88  0E3F               	movlw	63
  2151  001E8A  6E2B               	movwf	___flge@ff1+3,c
  2152  001E8C  C081  F02C         	movff	sqrtf@z,___flge@ff2
  2153  001E90  C082  F02D         	movff	sqrtf@z+1,___flge@ff2+1
  2154  001E94  C083  F02E         	movff	sqrtf@z+2,___flge@ff2+2
  2155  001E98  C084  F02F         	movff	sqrtf@z+3,___flge@ff2+3
  2156  001E9C  EC49  F016         	call	___flge	;wreg free
  2157  001EA0  B0D8               	btfsc	status,0,c
  2158  001EA2  D007               	goto	l4333
  2159  001EA4  0E02               	movlw	2
  2160  001EA6  0100               	movlb	0	; () banked
  2161  001EA8  2779               	addwf	sqrtf@q& (0+255),f,b
  2162  001EAA  0E00               	movlw	0
  2163  001EAC  237A               	addwfc	(sqrtf@q+1)& (0+255),f,b
  2164  001EAE  237B               	addwfc	(sqrtf@q+2)& (0+255),f,b
  2165  001EB0  D014               	goto	L1
  2166  001EB2                     l4333:
  2167  001EB2  0E01               	movlw	1
  2168  001EB4  0100               	movlb	0	; () banked
  2169  001EB6  1579               	andwf	sqrtf@q& (0+255),w,b
  2170  001EB8  6F64               	movwf	??_sqrtf& (0+255),b
  2171  001EBA  0E00               	movlw	0
  2172  001EBC  157A               	andwf	(sqrtf@q+1)& (0+255),w,b
  2173  001EBE  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  2174  001EC0  0E00               	movlw	0
  2175  001EC2  157B               	andwf	(sqrtf@q+2)& (0+255),w,b
  2176  001EC4  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  2177  001EC6  0E00               	movlw	0
  2178  001EC8  157C               	andwf	(sqrtf@q+3)& (0+255),w,b
  2179  001ECA  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  2180  001ECC  5164               	movf	??_sqrtf& (0+255),w,b
  2181  001ECE  2779               	addwf	sqrtf@q& (0+255),f,b
  2182  001ED0  5165               	movf	(??_sqrtf+1)& (0+255),w,b
  2183  001ED2  237A               	addwfc	(sqrtf@q+1)& (0+255),f,b
  2184  001ED4  5166               	movf	(??_sqrtf+2)& (0+255),w,b
  2185  001ED6  237B               	addwfc	(sqrtf@q+2)& (0+255),f,b
  2186  001ED8  5167               	movf	(??_sqrtf+3)& (0+255),w,b
  2187  001EDA                     L1:
  2188  001EDA  237C               	addwfc	(sqrtf@q+3)& (0+255),f,b
  2189  001EDC                     l1153:
  2190  001EDC  C079  F064         	movff	sqrtf@q,??_sqrtf
  2191  001EE0  C07A  F065         	movff	sqrtf@q+1,??_sqrtf+1
  2192  001EE4  C07B  F066         	movff	sqrtf@q+2,??_sqrtf+2
  2193  001EE8  C07C  F067         	movff	sqrtf@q+3,??_sqrtf+3
  2194  001EEC  0100               	movlb	0	; () banked
  2195  001EEE  3567               	rlcf	(??_sqrtf+3)& (0+255),w,b
  2196  001EF0  3367               	rrcf	(??_sqrtf+3)& (0+255),f,b
  2197  001EF2  3366               	rrcf	(??_sqrtf+2)& (0+255),f,b
  2198  001EF4  3365               	rrcf	(??_sqrtf+1)& (0+255),f,b
  2199  001EF6  3364               	rrcf	??_sqrtf& (0+255),f,b
  2200  001EF8  0E00               	movlw	0
  2201  001EFA  2564               	addwf	??_sqrtf& (0+255),w,b
  2202  001EFC  6F8D               	movwf	sqrtf@ix& (0+255),b
  2203  001EFE  0E00               	movlw	0
  2204  001F00  2165               	addwfc	(??_sqrtf+1)& (0+255),w,b
  2205  001F02  6F8E               	movwf	(sqrtf@ix+1)& (0+255),b
  2206  001F04  0E00               	movlw	0
  2207  001F06  2166               	addwfc	(??_sqrtf+2)& (0+255),w,b
  2208  001F08  6F8F               	movwf	(sqrtf@ix+2)& (0+255),b
  2209  001F0A  0E3F               	movlw	63
  2210  001F0C  2167               	addwfc	(??_sqrtf+3)& (0+255),w,b
  2211  001F0E  6F90               	movwf	(sqrtf@ix+3)& (0+255),b
  2212  001F10  C085  F064         	movff	sqrtf@m,??_sqrtf
  2213  001F14  C086  F065         	movff	sqrtf@m+1,??_sqrtf+1
  2214  001F18  C087  F066         	movff	sqrtf@m+2,??_sqrtf+2
  2215  001F1C  C088  F067         	movff	sqrtf@m+3,??_sqrtf+3
  2216  001F20  0E17               	movlw	23
  2217  001F22                     u5205:
  2218  001F22  90D8               	bcf	status,0,c
  2219  001F24  3764               	rlcf	??_sqrtf& (0+255),f,b
  2220  001F26  3765               	rlcf	(??_sqrtf+1)& (0+255),f,b
  2221  001F28  3766               	rlcf	(??_sqrtf+2)& (0+255),f,b
  2222  001F2A  3767               	rlcf	(??_sqrtf+3)& (0+255),f,b
  2223  001F2C  2EE8               	decfsz	wreg,f,c
  2224  001F2E  D7F9               	goto	u5205
  2225  001F30  5164               	movf	??_sqrtf& (0+255),w,b
  2226  001F32  278D               	addwf	sqrtf@ix& (0+255),f,b
  2227  001F34  5165               	movf	(??_sqrtf+1)& (0+255),w,b
  2228  001F36  238E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  2229  001F38  5166               	movf	(??_sqrtf+2)& (0+255),w,b
  2230  001F3A  238F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  2231  001F3C  5167               	movf	(??_sqrtf+3)& (0+255),w,b
  2232  001F3E  2390               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  2233                           
  2234                           ; BSR set to: 0
  2235  001F40  C08D  F075         	movff	sqrtf@ix,sqrtf@__xc8_float_word
  2236  001F44  C08E  F076         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
  2237  001F48  C08F  F077         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
  2238  001F4C  C090  F078         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
  2239                           
  2240                           ; BSR set to: 0
  2241  001F50  C075  F081         	movff	sqrtf@__xc8_float_word,sqrtf@z
  2242  001F54  C076  F082         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
  2243  001F58  C077  F083         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
  2244  001F5C  C078  F084         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
  2245                           
  2246                           ; BSR set to: 0
  2247  001F60  C081  F060         	movff	sqrtf@z,?_sqrtf
  2248  001F64  C082  F061         	movff	sqrtf@z+1,?_sqrtf+1
  2249  001F68  C083  F062         	movff	sqrtf@z+2,?_sqrtf+2
  2250  001F6C  C084  F063         	movff	sqrtf@z+3,?_sqrtf+3
  2251  001F70  0012               	return		;funcret
  2252  001F72                     __end_of_sqrtf:
  2253                           	opt callstack 0
  2254                           
  2255 ;; *************** function _nanf *****************
  2256 ;; Defined at:
  2257 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nanf.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2260 ;;		 -> STR_17(1), 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  u               4    4[COMRAM] struct .
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  4    0[COMRAM] float 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2272 ;;      Params:         4       0       0       0       0       0       0       0       0
  2273 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2275 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2276 ;;Total ram usage:        8 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    1
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_sqrtf
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text2
  2287  003746                     __ptext2:
  2288                           	opt callstack 0
  2289  003746                     _nanf:
  2290                           	opt callstack 28
  2291                           
  2292                           ;incstack = 0
  2293  003746  0EFF               	movlw	255
  2294  003748  6E05               	movwf	nanf@u,c
  2295  00374A  0EFF               	movlw	255
  2296  00374C  6E06               	movwf	nanf@u+1,c
  2297  00374E  0EFF               	movlw	255
  2298  003750  6E07               	movwf	nanf@u+2,c
  2299  003752  0E7F               	movlw	127
  2300  003754  6E08               	movwf	nanf@u+3,c
  2301  003756  C005  F001         	movff	nanf@u,?_nanf
  2302  00375A  C006  F002         	movff	nanf@u+1,?_nanf+1
  2303  00375E  C007  F003         	movff	nanf@u+2,?_nanf+2
  2304  003762  C008  F004         	movff	nanf@u+3,?_nanf+3
  2305  003766  0012               	return		;funcret
  2306  003768                     __end_of_nanf:
  2307                           	opt callstack 0
  2308                           
  2309 ;; *************** function _sprintf *****************
  2310 ;; Defined at:
  2311 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  s               2  110[BANK0 ] PTR unsigned char 
  2314 ;;		 -> power_str(7), current_str(7), voltage_str(7), 
  2315 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  2316 ;;		 -> STR_3(10), STR_2(9), STR_1(9), 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  f               6  122[BANK0 ] struct _IO_FILE
  2319 ;;  ap              2  120[BANK0 ] PTR void [1]
  2320 ;;		 -> ?_sprintf(2), 
  2321 ;;  ret             2    0        int 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  2  110[BANK0 ] int 
  2324 ;; Registers used:
  2325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2331 ;;      Params:         0       8       0       0       0       0       0       0       0
  2332 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2334 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2335 ;;Total ram usage:       18 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    8
  2338 ;; This function calls:
  2339 ;;		_vfprintf
  2340 ;; This function is called by:
  2341 ;;		_main
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text3
  2346  00331C                     __ptext3:
  2347                           	opt callstack 0
  2348  00331C                     _sprintf:
  2349                           	opt callstack 22
  2350                           
  2351                           ;incstack = 0
  2352  00331C  0ED2               	movlw	low (?_sprintf+4)
  2353  00331E  0100               	movlb	0	; () banked
  2354  003320  6FD8               	movwf	sprintf@ap& (0+255),b
  2355  003322  0E00               	movlw	high (?_sprintf+4)
  2356  003324  6FD9               	movwf	(sprintf@ap+1)& (0+255),b
  2357  003326  C0CE  F0DA         	movff	sprintf@s,sprintf@f
  2358  00332A  C0CF  F0DB         	movff	sprintf@s+1,sprintf@f+1
  2359                           
  2360                           ; BSR set to: 0
  2361  00332E  0E00               	movlw	0
  2362  003330  6FDD               	movwf	(sprintf@f+3)& (0+255),b
  2363  003332  0E00               	movlw	0
  2364  003334  6FDC               	movwf	(sprintf@f+2)& (0+255),b
  2365                           
  2366                           ; BSR set to: 0
  2367  003336  0E00               	movlw	0
  2368  003338  6FDF               	movwf	(sprintf@f+5)& (0+255),b
  2369  00333A  0E00               	movlw	0
  2370  00333C  6FDE               	movwf	(sprintf@f+4)& (0+255),b
  2371                           
  2372                           ; BSR set to: 0
  2373  00333E  0EDA               	movlw	low sprintf@f
  2374  003340  6FC6               	movwf	vfprintf@fp& (0+255),b
  2375  003342  0E00               	movlw	high sprintf@f
  2376  003344  6FC7               	movwf	(vfprintf@fp+1)& (0+255),b
  2377  003346  C0D0  F0C8         	movff	sprintf@fmt,vfprintf@fmt
  2378  00334A  C0D1  F0C9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2379  00334E  0ED8               	movlw	low sprintf@ap
  2380  003350  6FCA               	movwf	vfprintf@ap& (0+255),b
  2381  003352  0E00               	movlw	high sprintf@ap
  2382  003354  6FCB               	movwf	(vfprintf@ap+1)& (0+255),b
  2383  003356  EC5F  F019         	call	_vfprintf	;wreg free
  2384  00335A  0100               	movlb	0	; () banked
  2385  00335C  51DC               	movf	(sprintf@f+2)& (0+255),w,b
  2386  00335E  25CE               	addwf	sprintf@s& (0+255),w,b
  2387  003360  6ED9               	movwf	fsr2l,c
  2388  003362  51DD               	movf	(sprintf@f+3)& (0+255),w,b
  2389  003364  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  2390  003366  6EDA               	movwf	fsr2h,c
  2391  003368  0E00               	movlw	0
  2392  00336A  6EDF               	movwf	indf2,c
  2393                           
  2394                           ; BSR set to: 0
  2395  00336C  0012               	return		;funcret
  2396  00336E                     __end_of_sprintf:
  2397                           	opt callstack 0
  2398                           
  2399 ;; *************** function _vfprintf *****************
  2400 ;; Defined at:
  2401 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  fp              2  102[BANK0 ] PTR struct _IO_FILE
  2404 ;;		 -> sprintf@f(6), 
  2405 ;;  fmt             2  104[BANK0 ] PTR const unsigned char 
  2406 ;;		 -> STR_3(10), STR_2(9), STR_1(9), 
  2407 ;;  ap              2  106[BANK0 ] PTR PTR void 
  2408 ;;		 -> sprintf@ap(2), 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  2411 ;;		 -> STR_3(10), STR_2(9), STR_1(9), 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  2  102[BANK0 ] int 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2421 ;;      Params:         0       6       0       0       0       0       0       0       0
  2422 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2424 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2425 ;;Total ram usage:        8 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    7
  2428 ;; This function calls:
  2429 ;;		_vfpfcnvrt
  2430 ;; This function is called by:
  2431 ;;		_sprintf
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text4
  2436  0032BE                     __ptext4:
  2437                           	opt callstack 0
  2438  0032BE                     _vfprintf:
  2439                           	opt callstack 22
  2440                           
  2441                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;incstack = 0
  2445  0032BE  C0C8  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  2446  0032C2  C0C9  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2447                           
  2448                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2449  0032C6  0E00               	movlw	0
  2450  0032C8  0101               	movlb	1	; () banked
  2451  0032CA  6F2A               	movwf	(_nout+1)& (0+255),b
  2452  0032CC  0E00               	movlw	0
  2453  0032CE  6F29               	movwf	_nout& (0+255),b
  2454                           
  2455                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2456  0032D0  D017               	goto	l4225
  2457  0032D2                     l4223:
  2458                           
  2459                           ; BSR set to: 1
  2460                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  2461  0032D2  C0C6  F0AE         	movff	vfprintf@fp,vfpfcnvrt@fp
  2462  0032D6  C0C7  F0AF         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2463  0032DA  0ECC               	movlw	low vfprintf@cfmt
  2464  0032DC  0100               	movlb	0	; () banked
  2465  0032DE  6FB0               	movwf	vfpfcnvrt@fmt& (0+255),b
  2466  0032E0  0E00               	movlw	high vfprintf@cfmt
  2467  0032E2  6FB1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2468  0032E4  C0CA  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2469  0032E8  C0CB  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2470  0032EC  EC85  F00B         	call	_vfpfcnvrt	;wreg free
  2471  0032F0  0100               	movlb	0	; () banked
  2472  0032F2  51AE               	movf	?_vfpfcnvrt& (0+255),w,b
  2473  0032F4  0101               	movlb	1	; () banked
  2474  0032F6  2729               	addwf	_nout& (0+255),f,b
  2475  0032F8  0100               	movlb	0	; () banked
  2476  0032FA  51AF               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2477  0032FC  0101               	movlb	1	; () banked
  2478  0032FE  232A               	addwfc	(_nout+1)& (0+255),f,b
  2479  003300                     l4225:
  2480                           
  2481                           ; BSR set to: 1
  2482                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2483  003300  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  2484  003304  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2485  003308                     	if	0	;tblptru may be non-zero
  2486  003308                     	endif
  2487  003308                     	if	0	;tblptru may be non-zero
  2488  003308                     	endif
  2489  003308  0008               	tblrd		*
  2490  00330A  50F5               	movf	tablat,w,c
  2491  00330C  0900               	iorlw	0
  2492  00330E  A4D8               	btfss	status,2,c
  2493  003310  D7E0               	goto	l4223
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  2497  003312  C129  F0C6         	movff	_nout,?_vfprintf
  2498  003316  C12A  F0C7         	movff	_nout+1,?_vfprintf+1
  2499                           
  2500                           ; BSR set to: 1
  2501  00331A  0012               	return		;funcret
  2502  00331C                     __end_of_vfprintf:
  2503                           	opt callstack 0
  2504                           
  2505 ;; *************** function _vfpfcnvrt *****************
  2506 ;; Defined at:
  2507 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  fp              2   78[BANK0 ] PTR struct _IO_FILE
  2510 ;;		 -> sprintf@f(6), 
  2511 ;;  fmt             2   80[BANK0 ] PTR PTR unsigned char 
  2512 ;;		 -> vfprintf@cfmt(2), 
  2513 ;;  ap              2   82[BANK0 ] PTR PTR void 
  2514 ;;		 -> sprintf@ap(2), 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  llu             8    0        unsigned long long 
  2517 ;;  ll              8    0        long long 
  2518 ;;  f               4   94[BANK0 ] long long 
  2519 ;;  ct              3   98[BANK0 ] unsigned char [3]
  2520 ;;  vp              3    0        PTR void 
  2521 ;;  cp              3    0        PTR unsigned char 
  2522 ;;  done            2   88[BANK0 ] int 
  2523 ;;  i               2    0        int 
  2524 ;;  c               1  101[BANK0 ] unsigned char 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  2   78[BANK0 ] int 
  2527 ;; Registers used:
  2528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2534 ;;      Params:         0       6       0       0       0       0       0       0       0
  2535 ;;      Locals:         0      14       0       0       0       0       0       0       0
  2536 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2537 ;;      Totals:         0      24       0       0       0       0       0       0       0
  2538 ;;Total ram usage:       24 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    6
  2541 ;; This function calls:
  2542 ;;		_atoi
  2543 ;;		_efgtoa
  2544 ;;		_fputc
  2545 ;;		_isdigit
  2546 ;;		_isupper
  2547 ;;		_strncmp
  2548 ;;		_tolower
  2549 ;; This function is called by:
  2550 ;;		_vfprintf
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text5
  2555  00170A                     __ptext5:
  2556                           	opt callstack 0
  2557  00170A                     _vfpfcnvrt:
  2558                           	opt callstack 22
  2559                           
  2560                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  2561                           
  2562                           ; BSR set to: 1
  2563                           ;incstack = 0
  2564  00170A  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2565  00170E  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2566  001712  CFDE FFF6          	movff	postinc2,tblptrl
  2567  001716  CFDD FFF7          	movff	postdec2,tblptrh
  2568  00171A                     	if	0	;tblptru may be non-zero
  2569  00171A                     	endif
  2570  00171A                     	if	0	;tblptru may be non-zero
  2571  00171A                     	endif
  2572  00171A  0008               	tblrd		*
  2573  00171C  50F5               	movf	tablat,w,c
  2574  00171E  0A25               	xorlw	37
  2575  001720  A4D8               	btfss	status,2,c
  2576  001722  D1F4               	goto	l4177
  2577                           
  2578                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2579  001724  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2580  001728  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2581  00172C  2ADE               	incf	postinc2,f,c
  2582  00172E  0E00               	movlw	0
  2583  001730  22DD               	addwfc	postdec2,f,c
  2584                           
  2585                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  2586  001732  0E00               	movlw	0
  2587  001734  0101               	movlb	1	; () banked
  2588  001736  6F2C               	movwf	(_width+1)& (0+255),b
  2589  001738  0E00               	movlw	0
  2590  00173A  6F2B               	movwf	_width& (0+255),b
  2591  00173C  C12B  F0EF         	movff	_width,_flags
  2592  001740  C12C  F0F0         	movff	_width+1,_flags+1
  2593                           
  2594                           ; BSR set to: 1
  2595                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  2596  001744  0100               	movlb	0	; () banked
  2597  001746  69ED               	setf	_prec& (0+255),b
  2598  001748  69EE               	setf	(_prec+1)& (0+255),b
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
  2602  00174A  0E00               	movlw	0
  2603  00174C  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2604  00174E  0E00               	movlw	0
  2605  001750  D014               	goto	L2
  2606  001752                     l4073:
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
  2610  001752  81EF               	bsf	_flags& (0+255),0,b
  2611  001754                     l4075:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                
      +                               ++*fmt;
  2615  001754  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2616  001758  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2617  00175C  2ADE               	incf	postinc2,f,c
  2618  00175E  0E00               	movlw	0
  2619  001760  22DD               	addwfc	postdec2,f,c
  2620                           
  2621                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                
      +                               break;
  2622  001762  D02E               	goto	l4099
  2623  001764                     l4077:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
  2627  001764  83EF               	bsf	_flags& (0+255),1,b
  2628  001766  D7F6               	goto	l4075
  2629  001768                     l4081:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
  2633  001768  85EF               	bsf	_flags& (0+255),2,b
  2634  00176A  D7F4               	goto	l4075
  2635  00176C                     l4085:
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
  2639  00176C  87EF               	bsf	_flags& (0+255),3,b
  2640  00176E  D7F2               	goto	l4075
  2641  001770                     l4089:
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
  2645  001770  89EF               	bsf	_flags& (0+255),4,b
  2646  001772  D7F0               	goto	l4075
  2647  001774                     l4093:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
  2651  001774  0E00               	movlw	0
  2652  001776  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2653  001778  0E01               	movlw	1
  2654  00177A                     L2:
  2655  00177A  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  2656                           
  2657                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
  2658  00177C  D021               	goto	l4099
  2659  00177E                     l4097:
  2660                           
  2661                           ; BSR set to: 0
  2662  00177E  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2663  001782  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2664  001786  CFDE FFF6          	movff	postinc2,tblptrl
  2665  00178A  CFDD FFF7          	movff	postdec2,tblptrh
  2666  00178E                     	if	0	;tblptru may be non-zero
  2667  00178E                     	endif
  2668  00178E                     	if	0	;tblptru may be non-zero
  2669  00178E                     	endif
  2670  00178E  0008               	tblrd		*
  2671  001790  50F5               	movf	tablat,w,c
  2672  001792  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2673  001794  6BB5               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2674                           
  2675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2676                           ; Switch size 1, requested type "simple"
  2677                           ; Number of cases is 1, Range of values is 0 to 0
  2678                           ; switch strategies available:
  2679                           ; Name         Instructions Cycles
  2680                           ; simple_byte            4     3 (average)
  2681                           ;	Chosen strategy is simple_byte
  2682  001796  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2683  001798  0A00               	xorlw	0	; case 0
  2684  00179A  A4D8               	btfss	status,2,c
  2685  00179C  D7EB               	goto	l4093
  2686                           
  2687                           ; BSR set to: 0
  2688                           ; Switch size 1, requested type "simple"
  2689                           ; Number of cases is 5, Range of values is 32 to 48
  2690                           ; switch strategies available:
  2691                           ; Name         Instructions Cycles
  2692                           ; simple_byte           16     9 (average)
  2693                           ;	Chosen strategy is simple_byte
  2694  00179E  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2695  0017A0  0A20               	xorlw	32	; case 32
  2696  0017A2  B4D8               	btfsc	status,2,c
  2697  0017A4  D7E3               	goto	l4085
  2698  0017A6  0A03               	xorlw	3	; case 35
  2699  0017A8  B4D8               	btfsc	status,2,c
  2700  0017AA  D7E2               	goto	l4089
  2701  0017AC  0A08               	xorlw	8	; case 43
  2702  0017AE  B4D8               	btfsc	status,2,c
  2703  0017B0  D7DB               	goto	l4081
  2704  0017B2  0A06               	xorlw	6	; case 45
  2705  0017B4  B4D8               	btfsc	status,2,c
  2706  0017B6  D7CD               	goto	l4073
  2707  0017B8  0A1D               	xorlw	29	; case 48
  2708  0017BA  B4D8               	btfsc	status,2,c
  2709  0017BC  D7D3               	goto	l4077
  2710  0017BE  D7DA               	goto	l4093
  2711  0017C0                     l4099:
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
  2715  0017C0  51B8               	movf	vfpfcnvrt@done& (0+255),w,b
  2716  0017C2  11B9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2717  0017C4  B4D8               	btfsc	status,2,c
  2718  0017C6  D7DB               	goto	l4097
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
  2722  0017C8  B1EF               	btfsc	_flags& (0+255),0,b
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
  2726  0017CA  93EF               	bcf	_flags& (0+255),1,b
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*f
      +                          mt)[0] == '.') {
  2730  0017CC  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2731  0017D0  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2732  0017D4  CFDE FFF6          	movff	postinc2,tblptrl
  2733  0017D8  CFDD FFF7          	movff	postdec2,tblptrh
  2734  0017DC                     	if	0	;tblptru may be non-zero
  2735  0017DC                     	endif
  2736  0017DC                     	if	0	;tblptru may be non-zero
  2737  0017DC                     	endif
  2738  0017DC  0008               	tblrd		*
  2739  0017DE  50F5               	movf	tablat,w,c
  2740  0017E0  0A2E               	xorlw	46
  2741  0017E2  A4D8               	btfss	status,2,c
  2742  0017E4  D06E               	goto	u4890
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             pre
      +                          c = 0;
  2746  0017E6  0E00               	movlw	0
  2747  0017E8  6FEE               	movwf	(_prec+1)& (0+255),b
  2748  0017EA  0E00               	movlw	0
  2749  0017EC  6FED               	movwf	_prec& (0+255),b
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*
      +                          fmt;
  2753  0017EE  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2754  0017F2  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2755  0017F6  2ADE               	incf	postinc2,f,c
  2756  0017F8  0E00               	movlw	0
  2757  0017FA  22DD               	addwfc	postdec2,f,c
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if 
      +                          ((*fmt)[0] == '*') {
  2761  0017FC  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2762  001800  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2763  001804  CFDE FFF6          	movff	postinc2,tblptrl
  2764  001808  CFDD FFF7          	movff	postdec2,tblptrh
  2765  00180C                     	if	0	;tblptru may be non-zero
  2766  00180C                     	endif
  2767  00180C                     	if	0	;tblptru may be non-zero
  2768  00180C                     	endif
  2769  00180C  0008               	tblrd		*
  2770  00180E  50F5               	movf	tablat,w,c
  2771  001810  0A2A               	xorlw	42
  2772  001812  A4D8               	btfss	status,2,c
  2773  001814  D01C               	goto	l4113
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                
      +                           ++*fmt;
  2777  001816  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2778  00181A  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2779  00181E  2ADE               	incf	postinc2,f,c
  2780  001820  0E00               	movlw	0
  2781  001822  22DD               	addwfc	postdec2,f,c
  2782                           
  2783                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                
      +                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2784  001824  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2785  001828  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2786  00182C  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  2787  001830  0E02               	movlw	2
  2788  001832  26DE               	addwf	postinc2,f,c
  2789  001834  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  2790  001838  0E00               	movlw	0
  2791  00183A  22DD               	addwfc	postdec2,f,c
  2792  00183C  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2793  001840  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2794  001844  CFDE F0ED          	movff	postinc2,_prec
  2795  001848  CFDD F0EE          	movff	postdec2,_prec+1
  2796                           
  2797                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } e
      +                          lse {
  2798  00184C  D03A               	goto	u4890
  2799  00184E                     l4113:
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                
      +                           prec = atoi(*fmt);
  2803  00184E  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2804  001852  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2805  001856  CFDE F008          	movff	postinc2,atoi@s
  2806  00185A  CFDD F009          	movff	postdec2,atoi@s+1
  2807  00185E  EC09  F015         	call	_atoi	;wreg free
  2808  001862  C008  F0ED         	movff	?_atoi,_prec
  2809  001866  C009  F0EE         	movff	?_atoi+1,_prec+1
  2810                           
  2811                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                
      +                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2812  00186A  D007               	goto	l4117
  2813  00186C                     l4115:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                
      +                               ++*fmt;
  2817  00186C  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2818  001870  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2819  001874  2ADE               	incf	postinc2,f,c
  2820  001876  0E00               	movlw	0
  2821  001878  22DD               	addwfc	postdec2,f,c
  2822  00187A                     l4117:
  2823  00187A  0ED0               	movlw	208
  2824  00187C  0100               	movlb	0	; () banked
  2825  00187E  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2826  001880  0EFF               	movlw	255
  2827  001882  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2828  001884  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2829  001888  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2830  00188C  CFDE FFF6          	movff	postinc2,tblptrl
  2831  001890  CFDD FFF7          	movff	postdec2,tblptrh
  2832  001894                     	if	0	;tblptru may be non-zero
  2833  001894                     	endif
  2834  001894                     	if	0	;tblptru may be non-zero
  2835  001894                     	endif
  2836  001894  0008               	tblrd		*
  2837  001896  50F5               	movf	tablat,w,c
  2838  001898  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2839  00189A  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2840  00189C  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2841  00189E  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2842  0018A0  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2843  0018A2  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2844  0018A4  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2845  0018A6  E106               	bnz	u4870
  2846  0018A8  0E0A               	movlw	10
  2847  0018AA  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2848  0018AC  B0D8               	btfsc	status,0,c
  2849  0018AE  D002               	goto	u4870
  2850  0018B0  0E01               	movlw	1
  2851  0018B2  D001               	goto	u4880
  2852  0018B4                     u4870:
  2853  0018B4  0E00               	movlw	0
  2854  0018B6                     u4880:
  2855  0018B6  6FBA               	movwf	_vfpfcnvrt$393& (0+255),b
  2856  0018B8  6BBB               	clrf	(_vfpfcnvrt$393+1)& (0+255),b
  2857                           
  2858                           ; BSR set to: 0
  2859  0018BA  51BA               	movf	_vfpfcnvrt$393& (0+255),w,b
  2860  0018BC  11BB               	iorwf	(_vfpfcnvrt$393+1)& (0+255),w,b
  2861  0018BE  A4D8               	btfss	status,2,c
  2862  0018C0  D7D5               	goto	l4115
  2863  0018C2                     u4890:
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] =
      +                           tolower((int)(*fmt)[0]);
  2867  0018C2  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2868  0018C6  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2869  0018CA  CFDE FFF6          	movff	postinc2,tblptrl
  2870  0018CE  CFDD FFF7          	movff	postdec2,tblptrh
  2871  0018D2                     	if	0	;tblptru may be non-zero
  2872  0018D2                     	endif
  2873  0018D2                     	if	0	;tblptru may be non-zero
  2874  0018D2                     	endif
  2875  0018D2  0008               	tblrd		*
  2876  0018D4  50F5               	movf	tablat,w,c
  2877  0018D6  6E07               	movwf	tolower@c,c
  2878  0018D8  6A08               	clrf	tolower@c+1,c
  2879  0018DA  ECE0  F019         	call	_tolower	;wreg free
  2880  0018DE  5007               	movf	?_tolower,w,c
  2881  0018E0  0100               	movlb	0	; () banked
  2882  0018E2  6FC2               	movwf	vfpfcnvrt@ct& (0+255),b
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[
      +                          0]) {
  2886  0018E4  51C2               	movf	vfpfcnvrt@ct& (0+255),w,b
  2887  0018E6  B4D8               	btfsc	status,2,c
  2888  0018E8  D035               	goto	l4133
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[
      +                          1] = tolower((int)(*fmt)[1]);
  2892  0018EA  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2893  0018EE  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2894  0018F2  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  2895  0018F6  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  2896  0018FA  0E01               	movlw	1
  2897  0018FC  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  2898  0018FE  0E00               	movlw	0
  2899  001900  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2900  001902  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2901  001906  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2902  00190A                     	if	0	;tblptru may be non-zero
  2903  00190A                     	endif
  2904  00190A                     	if	0	;tblptru may be non-zero
  2905  00190A                     	endif
  2906  00190A  0008               	tblrd		*
  2907  00190C  50F5               	movf	tablat,w,c
  2908  00190E  6E07               	movwf	tolower@c,c
  2909  001910  6A08               	clrf	tolower@c+1,c
  2910  001912  ECE0  F019         	call	_tolower	;wreg free
  2911  001916  5007               	movf	?_tolower,w,c
  2912  001918  0100               	movlb	0	; () banked
  2913  00191A  6FC3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if 
      +                          (ct[1]) {
  2917  00191C  51C3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2918  00191E  B4D8               	btfsc	status,2,c
  2919  001920  D019               	goto	l4133
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                
      +                           ct[2] = tolower((int)(*fmt)[2]);
  2923  001922  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2924  001926  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2925  00192A  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  2926  00192E  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  2927  001932  0E02               	movlw	2
  2928  001934  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  2929  001936  0E00               	movlw	0
  2930  001938  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2931  00193A  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2932  00193E  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2933  001942                     	if	0	;tblptru may be non-zero
  2934  001942                     	endif
  2935  001942                     	if	0	;tblptru may be non-zero
  2936  001942                     	endif
  2937  001942  0008               	tblrd		*
  2938  001944  50F5               	movf	tablat,w,c
  2939  001946  6E07               	movwf	tolower@c,c
  2940  001948  6A08               	clrf	tolower@c+1,c
  2941  00194A  ECE0  F019         	call	_tolower	;wreg free
  2942  00194E  5007               	movf	?_tolower,w,c
  2943  001950  0100               	movlb	0	; () banked
  2944  001952  6FC4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2945  001954                     l4133:
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[
      +                          0] == 'f') {
  2949  001954  0E66               	movlw	102
  2950  001956  19C2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2951  001958  A4D8               	btfss	status,2,c
  2952  00195A  D03F               	goto	l4145
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c =
      +                           (*fmt)[0];
  2956  00195C  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2957  001960  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2958  001964  CFDE FFF6          	movff	postinc2,tblptrl
  2959  001968  CFDD FFF7          	movff	postdec2,tblptrh
  2960  00196C                     	if	0	;tblptru may be non-zero
  2961  00196C                     	endif
  2962  00196C                     	if	0	;tblptru may be non-zero
  2963  00196C                     	endif
  2964  00196C  0008               	tblrd		*
  2965  00196E  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*
      +                          fmt;
  2969  001972  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2970  001976  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2971  00197A  2ADE               	incf	postinc2,f,c
  2972  00197C  0E00               	movlw	0
  2973  00197E  22DD               	addwfc	postdec2,f,c
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f =
      +                           (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2977  001980  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2978  001984  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2979  001988  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  2980  00198C  0E04               	movlw	4
  2981  00198E  26DE               	addwf	postinc2,f,c
  2982  001990  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  2983  001994  0E00               	movlw	0
  2984  001996  22DD               	addwfc	postdec2,f,c
  2985  001998  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2986  00199C  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2987  0019A0  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  2988  0019A4  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  2989  0019A8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  2990  0019AC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  2991  0019B0                     l4141:
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             ret
      +                          urn efgtoa(fp, f, c);
  2995  0019B0  C0AE  F06A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2996  0019B4  C0AF  F06B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2997  0019B8  C0BE  F06C         	movff	vfpfcnvrt@f,efgtoa@f
  2998  0019BC  C0BF  F06D         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2999  0019C0  C0C0  F06E         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3000  0019C4  C0C1  F06F         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3001  0019C8  C0C5  F070         	movff	vfpfcnvrt@c,efgtoa@c
  3002  0019CC  EC1B  F004         	call	_efgtoa	;wreg free
  3003  0019D0  C06A  F0AE         	movff	?_efgtoa,?_vfpfcnvrt
  3004  0019D4  C06B  F0AF         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3005  0019D8  0012               	return	
  3006  0019DA                     l4145:
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!st
      +                          rncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3010  0019DA  0EC2               	movlw	low vfpfcnvrt@ct
  3011  0019DC  6E01               	movwf	strncmp@_l,c
  3012  0019DE  0E00               	movlw	high vfpfcnvrt@ct
  3013  0019E0  6E02               	movwf	strncmp@_l+1,c
  3014  0019E2  0E31               	movlw	low STR_12
  3015  0019E4  6E03               	movwf	strncmp@_r,c
  3016  0019E6  0E08               	movlw	high STR_12
  3017  0019E8  6E04               	movwf	strncmp@_r+1,c
  3018  0019EA  0E00               	movlw	0
  3019  0019EC  6E06               	movwf	strncmp@n+1,c
  3020  0019EE  0E02               	movlw	2
  3021  0019F0  6E05               	movwf	strncmp@n,c
  3022  0019F2  EC75  F017         	call	_strncmp	;wreg free
  3023  0019F6  5001               	movf	?_strncmp,w,c
  3024  0019F8  1002               	iorwf	?_strncmp+1,w,c
  3025  0019FA  A4D8               	btfss	status,2,c
  3026  0019FC  D056               	goto	l4161
  3027                           
  3028                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if 
      +                          ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3029  0019FE  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3030  001A02  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3031  001A06  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  3032  001A0A  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  3033  001A0E  0E01               	movlw	1
  3034  001A10  0100               	movlb	0	; () banked
  3035  001A12  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3036  001A14  0E00               	movlw	0
  3037  001A16  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3038  001A18  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3039  001A1C  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3040  001A20                     	if	0	;tblptru may be non-zero
  3041  001A20                     	endif
  3042  001A20                     	if	0	;tblptru may be non-zero
  3043  001A20                     	endif
  3044  001A20  0008               	tblrd		*
  3045  001A22  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  3046  001A26  0EBF               	movlw	191
  3047  001A28  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3048  001A2A  0EFF               	movlw	255
  3049  001A2C  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3050  001A2E  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3051  001A32  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3052  001A36  CFDE FFF6          	movff	postinc2,tblptrl
  3053  001A3A  CFDD FFF7          	movff	postdec2,tblptrh
  3054  001A3E                     	if	0	;tblptru may be non-zero
  3055  001A3E                     	endif
  3056  001A3E                     	if	0	;tblptru may be non-zero
  3057  001A3E                     	endif
  3058  001A3E  0008               	tblrd		*
  3059  001A40  50F5               	movf	tablat,w,c
  3060  001A42  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3061  001A44  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3062  001A46  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3063  001A48  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3064  001A4A  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3065  001A4C  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3066  001A4E  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3067  001A50  E106               	bnz	u4940
  3068  001A52  0E1A               	movlw	26
  3069  001A54  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3070  001A56  B0D8               	btfsc	status,0,c
  3071  001A58  D002               	goto	u4940
  3072  001A5A  0E01               	movlw	1
  3073  001A5C  D001               	goto	u4950
  3074  001A5E                     u4940:
  3075  001A5E  0E00               	movlw	0
  3076  001A60                     u4950:
  3077  001A60  6FBC               	movwf	_vfpfcnvrt$397& (0+255),b
  3078  001A62  6BBD               	clrf	(_vfpfcnvrt$397+1)& (0+255),b
  3079                           
  3080                           ; BSR set to: 0
  3081  001A64  51BC               	movf	_vfpfcnvrt$397& (0+255),w,b
  3082  001A66  11BD               	iorwf	(_vfpfcnvrt$397+1)& (0+255),w,b
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                
      +                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3086                           
  3087                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } e
      +                          lse {
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                
      +                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3091  001A68  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3092  001A6C  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3093  001A70  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  3094  001A74  0E04               	movlw	4
  3095  001A76  26DE               	addwf	postinc2,f,c
  3096  001A78  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  3097  001A7C  0E00               	movlw	0
  3098  001A7E  22DD               	addwfc	postdec2,f,c
  3099  001A80  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3100  001A84  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3101  001A88  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  3102  001A8C  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  3103  001A90  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  3104  001A94  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fm
      +                          t += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3108                           
  3109                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  3110  001A98  0E02               	movlw	2
  3111  001A9A  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3112  001A9E  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3113  001AA2  26DE               	addwf	postinc2,f,c
  3114  001AA4  0E00               	movlw	0
  3115  001AA6  22DD               	addwfc	postdec2,f,c
  3116  001AA8  D783               	goto	l4141
  3117  001AAA                     l4161:
  3118                           
  3119                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  3120  001AAA  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3121  001AAE  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3122  001AB2  CFDE FFF6          	movff	postinc2,tblptrl
  3123  001AB6  CFDD FFF7          	movff	postdec2,tblptrh
  3124  001ABA                     	if	0	;tblptru may be non-zero
  3125  001ABA                     	endif
  3126  001ABA                     	if	0	;tblptru may be non-zero
  3127  001ABA                     	endif
  3128  001ABA  0008               	tblrd		*
  3129  001ABC  50F5               	movf	tablat,w,c
  3130  001ABE  0A25               	xorlw	37
  3131  001AC0  A4D8               	btfss	status,2,c
  3132  001AC2  D017               	goto	l4171
  3133                           
  3134                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  3135  001AC4  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3136  001AC8  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3137  001ACC  2ADE               	incf	postinc2,f,c
  3138  001ACE  0E00               	movlw	0
  3139  001AD0  22DD               	addwfc	postdec2,f,c
  3140                           
  3141                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  3142  001AD2  0E00               	movlw	0
  3143  001AD4  6E02               	movwf	fputc@c+1,c
  3144  001AD6  0E25               	movlw	37
  3145  001AD8  6E01               	movwf	fputc@c,c
  3146  001ADA  C0AE  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3147  001ADE  C0AF  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3148  001AE2  ECC6  F017         	call	_fputc	;wreg free
  3149  001AE6                     l4167:
  3150                           
  3151                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  3152  001AE6  0E00               	movlw	0
  3153  001AE8  0100               	movlb	0	; () banked
  3154  001AEA  6FAF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3155  001AEC  0E01               	movlw	1
  3156  001AEE  6FAE               	movwf	?_vfpfcnvrt& (0+255),b
  3157  001AF0  0012               	return	
  3158  001AF2                     l4171:
  3159                           
  3160                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  3161  001AF2  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3162  001AF6  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3163  001AFA  2ADE               	incf	postinc2,f,c
  3164  001AFC  0E00               	movlw	0
  3165  001AFE  22DD               	addwfc	postdec2,f,c
  3166                           
  3167                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  3168  001B00  0E00               	movlw	0
  3169  001B02  0100               	movlb	0	; () banked
  3170  001B04  6FAF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3171  001B06  0E00               	movlw	0
  3172  001B08  6FAE               	movwf	?_vfpfcnvrt& (0+255),b
  3173  001B0A  0012               	return	
  3174  001B0C                     l4177:
  3175                           
  3176                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  3177  001B0C  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3178  001B10  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3179  001B14  CFDE FFF6          	movff	postinc2,tblptrl
  3180  001B18  CFDD FFF7          	movff	postdec2,tblptrh
  3181  001B1C                     	if	0	;tblptru may be non-zero
  3182  001B1C                     	endif
  3183  001B1C                     	if	0	;tblptru may be non-zero
  3184  001B1C                     	endif
  3185  001B1C  0008               	tblrd		*
  3186  001B1E  50F5               	movf	tablat,w,c
  3187  001B20  6E01               	movwf	fputc@c,c
  3188  001B22  6A02               	clrf	fputc@c+1,c
  3189  001B24  C0AE  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3190  001B28  C0AF  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3191  001B2C  ECC6  F017         	call	_fputc	;wreg free
  3192                           
  3193                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3194  001B30  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3195  001B34  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3196  001B38  2ADE               	incf	postinc2,f,c
  3197  001B3A  0E00               	movlw	0
  3198  001B3C  22DD               	addwfc	postdec2,f,c
  3199  001B3E  D7D3               	goto	l4167
  3200  001B40                     __end_of_vfpfcnvrt:
  3201                           	opt callstack 0
  3202                           
  3203 ;; *************** function _strncmp *****************
  3204 ;; Defined at:
  3205 ;;		line 3 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3208 ;;		 -> vfpfcnvrt@ct(3), 
  3209 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3210 ;;		 -> STR_14(3), 
  3211 ;;  n               2    4[COMRAM] unsigned int 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3214 ;;		 -> STR_14(3), 
  3215 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3216 ;;		 -> vfpfcnvrt@ct(3), 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  2    0[COMRAM] int 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3226 ;;      Params:         6       0       0       0       0       0       0       0       0
  3227 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3228 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3229 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3230 ;;Total ram usage:       11 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    1
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_vfpfcnvrt
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text6
  3241  002EEA                     __ptext6:
  3242                           	opt callstack 0
  3243  002EEA                     _strncmp:
  3244                           	opt callstack 26
  3245                           
  3246                           ;incstack = 0
  3247  002EEA  C001  F008         	movff	strncmp@_l,strncmp@l
  3248  002EEE  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3249  002EF2  C003  F00A         	movff	strncmp@_r,strncmp@r
  3250  002EF6  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3251  002EFA  0605               	decf	strncmp@n,f,c
  3252  002EFC  A0D8               	btfss	status,0,c
  3253  002EFE  0606               	decf	strncmp@n+1,f,c
  3254  002F00  2805               	incf	strncmp@n,w,c
  3255  002F02  E10F               	bnz	l4031
  3256  002F04  2806               	incf	strncmp@n+1,w,c
  3257  002F06  A4D8               	btfss	status,2,c
  3258  002F08  D00C               	goto	l4031
  3259  002F0A  0E00               	movlw	0
  3260  002F0C  6E02               	movwf	?_strncmp+1,c
  3261  002F0E  0E00               	movlw	0
  3262  002F10  6E01               	movwf	?_strncmp,c
  3263  002F12  0012               	return	
  3264  002F14                     l4029:
  3265  002F14  4A08               	infsnz	strncmp@l,f,c
  3266  002F16  2A09               	incf	strncmp@l+1,f,c
  3267  002F18  4A0A               	infsnz	strncmp@r,f,c
  3268  002F1A  2A0B               	incf	strncmp@r+1,f,c
  3269  002F1C  0605               	decf	strncmp@n,f,c
  3270  002F1E  A0D8               	btfss	status,0,c
  3271  002F20  0606               	decf	strncmp@n+1,f,c
  3272  002F22                     l4031:
  3273  002F22  C008  FFD9         	movff	strncmp@l,fsr2l
  3274  002F26  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3275  002F2A  50DF               	movf	indf2,w,c
  3276  002F2C  B4D8               	btfsc	status,2,c
  3277  002F2E  D01C               	goto	u4810
  3278  002F30  C00A  FFF6         	movff	strncmp@r,tblptrl
  3279  002F34  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3280  002F38                     	if	0	;tblptru may be non-zero
  3281  002F38                     	endif
  3282  002F38                     	if	0	;tblptru may be non-zero
  3283  002F38                     	endif
  3284  002F38  0008               	tblrd		*
  3285  002F3A  50F5               	movf	tablat,w,c
  3286  002F3C  0900               	iorlw	0
  3287  002F3E  B4D8               	btfsc	status,2,c
  3288  002F40  D013               	goto	u4810
  3289  002F42  5005               	movf	strncmp@n,w,c
  3290  002F44  1006               	iorwf	strncmp@n+1,w,c
  3291  002F46  B4D8               	btfsc	status,2,c
  3292  002F48  D00F               	goto	u4810
  3293  002F4A  C008  FFD9         	movff	strncmp@l,fsr2l
  3294  002F4E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3295  002F52  50DF               	movf	indf2,w,c
  3296  002F54  6E07               	movwf	??_strncmp& (0+255),c
  3297  002F56  C00A  FFF6         	movff	strncmp@r,tblptrl
  3298  002F5A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3299  002F5E                     	if	0	;tblptru may be non-zero
  3300  002F5E                     	endif
  3301  002F5E                     	if	0	;tblptru may be non-zero
  3302  002F5E                     	endif
  3303  002F5E  0008               	tblrd		*
  3304  002F60  50F5               	movf	tablat,w,c
  3305  002F62  1807               	xorwf	??_strncmp,w,c
  3306  002F64  B4D8               	btfsc	status,2,c
  3307  002F66  D7D6               	goto	l4029
  3308  002F68                     u4810:
  3309  002F68  C008  FFD9         	movff	strncmp@l,fsr2l
  3310  002F6C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3311  002F70  50DF               	movf	indf2,w,c
  3312  002F72  6E07               	movwf	??_strncmp& (0+255),c
  3313  002F74  C00A  FFF6         	movff	strncmp@r,tblptrl
  3314  002F78  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3315  002F7C                     	if	0	;tblptru may be non-zero
  3316  002F7C                     	endif
  3317  002F7C                     	if	0	;tblptru may be non-zero
  3318  002F7C                     	endif
  3319  002F7C  0008               	tblrd		*
  3320  002F7E  50F5               	movf	tablat,w,c
  3321  002F80  5C07               	subwf	??_strncmp,w,c
  3322  002F82  6E01               	movwf	?_strncmp,c
  3323  002F84  6A02               	clrf	?_strncmp+1,c
  3324  002F86  A0D8               	btfss	status,0,c
  3325  002F88  0602               	decf	?_strncmp+1,f,c
  3326  002F8A  0012               	return		;funcret
  3327  002F8C                     __end_of_strncmp:
  3328                           	opt callstack 0
  3329                           
  3330 ;; *************** function _efgtoa *****************
  3331 ;; Defined at:
  3332 ;;		line 319 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  3335 ;;		 -> sprintf@f(6), 
  3336 ;;  f               4   12[BANK0 ] PTR struct _IO_FILE
  3337 ;;  c               1   16[BANK0 ] unsigned char 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  u               4   74[BANK0 ] unsigned char 
  3340 ;;  g               4   66[BANK0 ] unsigned char 
  3341 ;;  l               4   60[BANK0 ] unsigned char 
  3342 ;;  h               4   56[BANK0 ] unsigned char 
  3343 ;;  ou              4   22[BANK0 ] unsigned char 
  3344 ;;  n               2   72[BANK0 ] int 
  3345 ;;  e               2   70[BANK0 ] int 
  3346 ;;  i               2   64[BANK0 ] int 
  3347 ;;  w               2   53[BANK0 ] int 
  3348 ;;  p               2   50[BANK0 ] int 
  3349 ;;  sign            2   48[BANK0 ] int 
  3350 ;;  d               2   46[BANK0 ] int 
  3351 ;;  ne              2   44[BANK0 ] int 
  3352 ;;  m               2   42[BANK0 ] int 
  3353 ;;  pp              2   40[BANK0 ] int 
  3354 ;;  t               2   38[BANK0 ] int 
  3355 ;;  mode            1   55[BANK0 ] unsigned char 
  3356 ;;  nmode           1   52[BANK0 ] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  2   10[BANK0 ] int 
  3359 ;; Registers used:
  3360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3366 ;;      Params:         0       7       0       0       0       0       0       0       0
  3367 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3368 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3369 ;;      Totals:         0      68       0       0       0       0       0       0       0
  3370 ;;Total ram usage:       68 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:    5
  3373 ;; This function calls:
  3374 ;;		___awdiv
  3375 ;;		___awmod
  3376 ;;		___fladd
  3377 ;;		___fldiv
  3378 ;;		___fleq
  3379 ;;		___flge
  3380 ;;		___flmul
  3381 ;;		___flneg
  3382 ;;		___flsub
  3383 ;;		___fltol
  3384 ;;		___fpclassifyf
  3385 ;;		_floorf
  3386 ;;		_isupper
  3387 ;;		_pad
  3388 ;;		_strcpy
  3389 ;;		_tolower
  3390 ;; This function is called by:
  3391 ;;		_vfpfcnvrt
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text7
  3396  000836                     __ptext7:
  3397                           	opt callstack 0
  3398  000836                     _efgtoa:
  3399                           	opt callstack 22
  3400                           
  3401                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgt
      +                          oa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 320: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c:
      +                           321:     char mode, nmode;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dop
      +                          rnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;/Applications/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 323:     long double g, h, l, ou, u;
  3402                           
  3403                           ;incstack = 0
  3404  000836  0E00               	movlw	0
  3405  000838  0100               	movlb	0	; () banked
  3406  00083A  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  3407  00083C  0E00               	movlw	0
  3408  00083E  6F90               	movwf	efgtoa@sign& (0+255),b
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  3412  000840  C06C  F0A2         	movff	efgtoa@f,efgtoa@g
  3413  000844  C06D  F0A3         	movff	efgtoa@f+1,efgtoa@g+1
  3414  000848  C06E  F0A4         	movff	efgtoa@f+2,efgtoa@g+2
  3415  00084C  C06F  F0A5         	movff	efgtoa@f+3,efgtoa@g+3
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0
      +                          ) {
  3419  000850  AFA5               	btfss	(efgtoa@g+3)& (0+255),7,b
  3420  000852  D016               	goto	l3693
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 
      +                          1;
  3424  000854  0E00               	movlw	0
  3425  000856  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  3426  000858  0E01               	movlw	1
  3427  00085A  6F90               	movwf	efgtoa@sign& (0+255),b
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  3431  00085C  C0A2  F001         	movff	efgtoa@g,___flneg@f1
  3432  000860  C0A3  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3433  000864  C0A4  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3434  000868  C0A5  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3435  00086C  EC2D  F01B         	call	___flneg	;wreg free
  3436  000870  C001  F0A2         	movff	?___flneg,efgtoa@g
  3437  000874  C002  F0A3         	movff	?___flneg+1,efgtoa@g+1
  3438  000878  C003  F0A4         	movff	?___flneg+2,efgtoa@g+2
  3439  00087C  C004  F0A5         	movff	?___flneg+3,efgtoa@g+3
  3440  000880                     l3693:
  3441                           
  3442                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  3443  000880  0E00               	movlw	0
  3444  000882  0100               	movlb	0	; () banked
  3445  000884  6FA9               	movwf	(efgtoa@n+1)& (0+255),b
  3446  000886  0E00               	movlw	0
  3447  000888  6FA8               	movwf	efgtoa@n& (0+255),b
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  3451  00088A  C12B  F095         	movff	_width,efgtoa@w
  3452  00088E  C12C  F096         	movff	_width+1,efgtoa@w+1
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign ||
      +                           (flags & (1 << 2))) {
  3456  000892  5190               	movf	efgtoa@sign& (0+255),w,b
  3457  000894  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3458  000896  A4D8               	btfss	status,2,c
  3459  000898  D002               	goto	u4200
  3460                           
  3461                           ; BSR set to: 0
  3462  00089A  A5EF               	btfss	_flags& (0+255),2,b
  3463  00089C  D013               	goto	l3713
  3464  00089E                     u4200:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n]
      +                           = sign ? '-' : '+';
  3468  00089E  5190               	movf	efgtoa@sign& (0+255),w,b
  3469  0008A0  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3470  0008A2  A4D8               	btfss	status,2,c
  3471  0008A4  D004               	goto	l3705
  3472                           
  3473                           ; BSR set to: 0
  3474  0008A6  0E00               	movlw	0
  3475  0008A8  6F7B               	movwf	(_efgtoa$367+1)& (0+255),b
  3476  0008AA  0E2B               	movlw	43
  3477  0008AC  D003               	goto	L3
  3478  0008AE                     l3705:
  3479                           
  3480                           ; BSR set to: 0
  3481  0008AE  0E00               	movlw	0
  3482  0008B0  6F7B               	movwf	(_efgtoa$367+1)& (0+255),b
  3483  0008B2  0E2D               	movlw	45
  3484  0008B4                     L3:
  3485  0008B4  6F7A               	movwf	_efgtoa$367& (0+255),b
  3486                           
  3487                           ; BSR set to: 0
  3488  0008B6  C07A  F12D         	movff	_efgtoa$367,_dbuf
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  3492  0008BA  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  3493  0008BC  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  3497  0008BE  0795               	decf	efgtoa@w& (0+255),f,b
  3498  0008C0  A0D8               	btfss	status,0,c
  3499  0008C2  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  3500  0008C4                     l3713:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3504  0008C4  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  3505  0008C8  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3506  0008CC  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3507  0008D0  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3508  0008D4  ECB1  F016         	call	___fpclassifyf	;wreg free
  3509  0008D8  0401               	decf	?___fpclassifyf,w,c
  3510  0008DA  1002               	iorwf	?___fpclassifyf+1,w,c
  3511  0008DC  A4D8               	btfss	status,2,c
  3512  0008DE  D04C               	goto	l3731
  3513  0008E0  0EBF               	movlw	191
  3514  0008E2  0100               	movlb	0	; () banked
  3515  0008E4  6F71               	movwf	??_efgtoa& (0+255),b
  3516  0008E6  0EFF               	movlw	255
  3517  0008E8  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  3518  0008EA  5170               	movf	efgtoa@c& (0+255),w,b
  3519  0008EC  6F73               	movwf	(??_efgtoa+2)& (0+255),b
  3520  0008EE  6B74               	clrf	(??_efgtoa+3)& (0+255),b
  3521  0008F0  5171               	movf	??_efgtoa& (0+255),w,b
  3522  0008F2  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  3523  0008F4  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  3524  0008F6  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3525  0008F8  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  3526  0008FA  E106               	bnz	u4230
  3527  0008FC  0E1A               	movlw	26
  3528  0008FE  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  3529  000900  B0D8               	btfsc	status,0,c
  3530  000902  D002               	goto	u4230
  3531  000904  0E01               	movlw	1
  3532  000906  D001               	goto	u4240
  3533  000908                     u4230:
  3534  000908  0E00               	movlw	0
  3535  00090A                     u4240:
  3536  00090A  6F7C               	movwf	_efgtoa$368& (0+255),b
  3537  00090C  6B7D               	clrf	(_efgtoa$368+1)& (0+255),b
  3538                           
  3539                           ; BSR set to: 0
  3540  00090E  517C               	movf	_efgtoa$368& (0+255),w,b
  3541  000910  117D               	iorwf	(_efgtoa$368+1)& (0+255),w,b
  3542  000912  B4D8               	btfsc	status,2,c
  3543  000914  D00D               	goto	l3723
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             str
      +                          cpy(&dbuf[n], "INF");
  3547  000916  0E2D               	movlw	low _dbuf
  3548  000918  25A8               	addwf	efgtoa@n& (0+255),w,b
  3549  00091A  6E01               	movwf	strcpy@dest,c
  3550  00091C  0E01               	movlw	high _dbuf
  3551  00091E  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3552  000920  6E02               	movwf	strcpy@dest+1,c
  3553  000922  0E21               	movlw	low STR_4
  3554  000924  6E03               	movwf	strcpy@src,c
  3555  000926  0E08               	movlw	high STR_4
  3556  000928  6E04               	movwf	strcpy@src+1,c
  3557  00092A  ECB7  F019         	call	_strcpy	;wreg free
  3558                           
  3559                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else 
      +                          {
  3560  00092E  D00C               	goto	l3725
  3561  000930                     l3723:
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             str
      +                          cpy(&dbuf[n], "inf");
  3565  000930  0E2D               	movlw	low _dbuf
  3566  000932  25A8               	addwf	efgtoa@n& (0+255),w,b
  3567  000934  6E01               	movwf	strcpy@dest,c
  3568  000936  0E01               	movlw	high _dbuf
  3569  000938  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3570  00093A  6E02               	movwf	strcpy@dest+1,c
  3571  00093C  0E29               	movlw	low STR_5
  3572  00093E  6E03               	movwf	strcpy@src,c
  3573  000940  0E08               	movlw	high STR_5
  3574  000942  6E04               	movwf	strcpy@src+1,c
  3575  000944  ECB7  F019         	call	_strcpy	;wreg free
  3576  000948                     l3725:
  3577                           
  3578                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3579  000948  0100               	movlb	0	; () banked
  3580  00094A  0EFD               	movlw	253
  3581  00094C  2795               	addwf	efgtoa@w& (0+255),f,b
  3582  00094E  0EFF               	movlw	255
  3583  000950  2396               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3584  000952                     l3727:
  3585                           
  3586                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return 
      +                          pad(fp, &dbuf[0], w);
  3587  000952  C06A  F011         	movff	efgtoa@fp,pad@fp
  3588  000956  C06B  F012         	movff	efgtoa@fp+1,pad@fp+1
  3589  00095A  0E2D               	movlw	low _dbuf
  3590  00095C  6E13               	movwf	pad@buf,c
  3591  00095E  0E01               	movlw	high _dbuf
  3592  000960  6E14               	movwf	pad@buf+1,c
  3593  000962  C095  F015         	movff	efgtoa@w,pad@p
  3594  000966  C096  F016         	movff	efgtoa@w+1,pad@p+1
  3595  00096A  EC16  F018         	call	_pad	;wreg free
  3596  00096E  C011  F06A         	movff	?_pad,?_efgtoa
  3597  000972  C012  F06B         	movff	?_pad+1,?_efgtoa+1
  3598  000976  0012               	return	
  3599  000978                     l3731:
  3600                           
  3601                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3602  000978  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  3603  00097C  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3604  000980  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3605  000984  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3606  000988  ECB1  F016         	call	___fpclassifyf	;wreg free
  3607  00098C  5001               	movf	?___fpclassifyf,w,c
  3608  00098E  1002               	iorwf	?___fpclassifyf+1,w,c
  3609  000990  A4D8               	btfss	status,2,c
  3610  000992  D035               	goto	l3749
  3611  000994  0EBF               	movlw	191
  3612  000996  0100               	movlb	0	; () banked
  3613  000998  6F71               	movwf	??_efgtoa& (0+255),b
  3614  00099A  0EFF               	movlw	255
  3615  00099C  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  3616  00099E  5170               	movf	efgtoa@c& (0+255),w,b
  3617  0009A0  6F73               	movwf	(??_efgtoa+2)& (0+255),b
  3618  0009A2  6B74               	clrf	(??_efgtoa+3)& (0+255),b
  3619  0009A4  5171               	movf	??_efgtoa& (0+255),w,b
  3620  0009A6  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  3621  0009A8  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  3622  0009AA  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3623  0009AC  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  3624  0009AE  E106               	bnz	u4270
  3625  0009B0  0E1A               	movlw	26
  3626  0009B2  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  3627  0009B4  B0D8               	btfsc	status,0,c
  3628  0009B6  D002               	goto	u4270
  3629  0009B8  0E01               	movlw	1
  3630  0009BA  D001               	goto	u4280
  3631  0009BC                     u4270:
  3632  0009BC  0E00               	movlw	0
  3633  0009BE                     u4280:
  3634  0009BE  6F7E               	movwf	_efgtoa$373& (0+255),b
  3635  0009C0  6B7F               	clrf	(_efgtoa$373+1)& (0+255),b
  3636                           
  3637                           ; BSR set to: 0
  3638  0009C2  517E               	movf	_efgtoa$373& (0+255),w,b
  3639  0009C4  117F               	iorwf	(_efgtoa$373+1)& (0+255),w,b
  3640  0009C6  B4D8               	btfsc	status,2,c
  3641  0009C8  D00D               	goto	l3741
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             str
      +                          cpy(&dbuf[n], "NAN");
  3645  0009CA  0E2D               	movlw	low _dbuf
  3646  0009CC  25A8               	addwf	efgtoa@n& (0+255),w,b
  3647  0009CE  6E01               	movwf	strcpy@dest,c
  3648  0009D0  0E01               	movlw	high _dbuf
  3649  0009D2  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3650  0009D4  6E02               	movwf	strcpy@dest+1,c
  3651  0009D6  0E25               	movlw	low STR_8
  3652  0009D8  6E03               	movwf	strcpy@src,c
  3653  0009DA  0E08               	movlw	high STR_8
  3654  0009DC  6E04               	movwf	strcpy@src+1,c
  3655  0009DE  ECB7  F019         	call	_strcpy	;wreg free
  3656                           
  3657                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else 
      +                          {
  3658  0009E2  D7B2               	goto	l3725
  3659  0009E4                     l3741:
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             str
      +                          cpy(&dbuf[n], "nan");
  3663  0009E4  0E2D               	movlw	low _dbuf
  3664  0009E6  25A8               	addwf	efgtoa@n& (0+255),w,b
  3665  0009E8  6E01               	movwf	strcpy@dest,c
  3666  0009EA  0E01               	movlw	high _dbuf
  3667  0009EC  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3668  0009EE  6E02               	movwf	strcpy@dest+1,c
  3669  0009F0  0E2D               	movlw	low STR_9
  3670  0009F2  6E03               	movwf	strcpy@src,c
  3671  0009F4  0E08               	movlw	high STR_9
  3672  0009F6  6E04               	movwf	strcpy@src+1,c
  3673  0009F8  ECB7  F019         	call	_strcpy	;wreg free
  3674  0009FC  D7A5               	goto	l3725
  3675  0009FE                     l3749:
  3676                           
  3677                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  3678  0009FE  0E00               	movlw	0
  3679  000A00  0100               	movlb	0	; () banked
  3680  000A02  6FAA               	movwf	efgtoa@u& (0+255),b
  3681  000A04  0E00               	movlw	0
  3682  000A06  6FAB               	movwf	(efgtoa@u+1)& (0+255),b
  3683  000A08  0E80               	movlw	128
  3684  000A0A  6FAC               	movwf	(efgtoa@u+2)& (0+255),b
  3685  000A0C  0E3F               	movlw	63
  3686  000A0E  6FAD               	movwf	(efgtoa@u+3)& (0+255),b
  3687                           
  3688                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  3689  000A10  0E00               	movlw	0
  3690  000A12  6FA7               	movwf	(efgtoa@e+1)& (0+255),b
  3691  000A14  0E00               	movlw	0
  3692  000A16  6FA6               	movwf	efgtoa@e& (0+255),b
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 
      +                          0.0)) {
  3696  000A18  C0A2  F001         	movff	efgtoa@g,___fleq@ff1
  3697  000A1C  C0A3  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3698  000A20  C0A4  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3699  000A24  C0A5  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3700  000A28  0E00               	movlw	0
  3701  000A2A  6E05               	movwf	___fleq@ff2,c
  3702  000A2C  0E00               	movlw	0
  3703  000A2E  6E06               	movwf	___fleq@ff2+1,c
  3704  000A30  0E00               	movlw	0
  3705  000A32  6E07               	movwf	___fleq@ff2+2,c
  3706  000A34  0E00               	movlw	0
  3707  000A36  6E08               	movwf	___fleq@ff2+3,c
  3708  000A38  EC63  F018         	call	___fleq	;wreg free
  3709  000A3C  A0D8               	btfss	status,0,c
  3710  000A3E  D01E               	goto	l3759
  3711  000A40  D076               	goto	u4320
  3712  000A42                     l3755:
  3713                           
  3714                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u =
      +                           u*10.0;
  3715  000A42  C0AA  F00F         	movff	efgtoa@u,___flmul@b
  3716  000A46  C0AB  F010         	movff	efgtoa@u+1,___flmul@b+1
  3717  000A4A  C0AC  F011         	movff	efgtoa@u+2,___flmul@b+2
  3718  000A4E  C0AD  F012         	movff	efgtoa@u+3,___flmul@b+3
  3719  000A52  0E00               	movlw	0
  3720  000A54  6E13               	movwf	___flmul@a,c
  3721  000A56  0E00               	movlw	0
  3722  000A58  6E14               	movwf	___flmul@a+1,c
  3723  000A5A  0E20               	movlw	32
  3724  000A5C  6E15               	movwf	___flmul@a+2,c
  3725  000A5E  0E41               	movlw	65
  3726  000A60  6E16               	movwf	___flmul@a+3,c
  3727  000A62  ECB9  F00F         	call	___flmul	;wreg free
  3728  000A66  C00F  F0AA         	movff	?___flmul,efgtoa@u
  3729  000A6A  C010  F0AB         	movff	?___flmul+1,efgtoa@u+1
  3730  000A6E  C011  F0AC         	movff	?___flmul+2,efgtoa@u+2
  3731  000A72  C012  F0AD         	movff	?___flmul+3,efgtoa@u+3
  3732                           
  3733                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e
      +                          ;
  3734  000A76  0100               	movlb	0	; () banked
  3735  000A78  4BA6               	infsnz	efgtoa@e& (0+255),f,b
  3736  000A7A  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  3737  000A7C                     l3759:
  3738                           
  3739                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (
      +                          !(g < (u*10.0))) {
  3740  000A7C  C0A2  F028         	movff	efgtoa@g,___flge@ff1
  3741  000A80  C0A3  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3742  000A84  C0A4  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3743  000A88  C0A5  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3744  000A8C  0E00               	movlw	0
  3745  000A8E  6E13               	movwf	___flmul@a,c
  3746  000A90  0E00               	movlw	0
  3747  000A92  6E14               	movwf	___flmul@a+1,c
  3748  000A94  0E20               	movlw	32
  3749  000A96  6E15               	movwf	___flmul@a+2,c
  3750  000A98  0E41               	movlw	65
  3751  000A9A  6E16               	movwf	___flmul@a+3,c
  3752  000A9C  C0AA  F00F         	movff	efgtoa@u,___flmul@b
  3753  000AA0  C0AB  F010         	movff	efgtoa@u+1,___flmul@b+1
  3754  000AA4  C0AC  F011         	movff	efgtoa@u+2,___flmul@b+2
  3755  000AA8  C0AD  F012         	movff	efgtoa@u+3,___flmul@b+3
  3756  000AAC  ECB9  F00F         	call	___flmul	;wreg free
  3757  000AB0  C00F  F02C         	movff	?___flmul,___flge@ff2
  3758  000AB4  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3759  000AB8  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3760  000ABC  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3761  000AC0  EC49  F016         	call	___flge	;wreg free
  3762  000AC4  A0D8               	btfss	status,0,c
  3763  000AC6  D01F               	goto	l3765
  3764  000AC8  D7BC               	goto	l3755
  3765  000ACA                     l3761:
  3766                           
  3767                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u =
      +                           u/10.0;
  3768  000ACA  C0AA  F034         	movff	efgtoa@u,___fldiv@b
  3769  000ACE  C0AB  F035         	movff	efgtoa@u+1,___fldiv@b+1
  3770  000AD2  C0AC  F036         	movff	efgtoa@u+2,___fldiv@b+2
  3771  000AD6  C0AD  F037         	movff	efgtoa@u+3,___fldiv@b+3
  3772  000ADA  0E00               	movlw	0
  3773  000ADC  6E38               	movwf	___fldiv@a,c
  3774  000ADE  0E00               	movlw	0
  3775  000AE0  6E39               	movwf	___fldiv@a+1,c
  3776  000AE2  0E20               	movlw	32
  3777  000AE4  6E3A               	movwf	___fldiv@a+2,c
  3778  000AE6  0E41               	movlw	65
  3779  000AE8  6E3B               	movwf	___fldiv@a+3,c
  3780  000AEA  ECE8  F012         	call	___fldiv	;wreg free
  3781  000AEE  C034  F0AA         	movff	?___fldiv,efgtoa@u
  3782  000AF2  C035  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  3783  000AF6  C036  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  3784  000AFA  C037  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  3785                           
  3786                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e
      +                          ;
  3787  000AFE  0100               	movlb	0	; () banked
  3788  000B00  07A6               	decf	efgtoa@e& (0+255),f,b
  3789  000B02  A0D8               	btfss	status,0,c
  3790  000B04  07A7               	decf	(efgtoa@e+1)& (0+255),f,b
  3791  000B06                     l3765:
  3792                           
  3793                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (
      +                          g < u) {
  3794  000B06  C0A2  F028         	movff	efgtoa@g,___flge@ff1
  3795  000B0A  C0A3  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3796  000B0E  C0A4  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3797  000B12  C0A5  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3798  000B16  C0AA  F02C         	movff	efgtoa@u,___flge@ff2
  3799  000B1A  C0AB  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3800  000B1E  C0AC  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3801  000B22  C0AD  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3802  000B26  EC49  F016         	call	___flge	;wreg free
  3803  000B2A  A0D8               	btfss	status,0,c
  3804  000B2C  D7CE               	goto	l3761
  3805  000B2E                     u4320:
  3806                           
  3807                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolo
      +                          wer((int)c);
  3808  000B2E  C070  F007         	movff	efgtoa@c,tolower@c
  3809  000B32  6A08               	clrf	tolower@c+1,c
  3810  000B34  ECE0  F019         	call	_tolower	;wreg free
  3811  000B38  5007               	movf	?_tolower,w,c
  3812  000B3A  0100               	movlb	0	; () banked
  3813  000B3C  6F97               	movwf	efgtoa@mode& (0+255),b
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mod
      +                          e;
  3817  000B3E  C097  F094         	movff	efgtoa@mode,efgtoa@nmode
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode ==
      +                           'g') {
  3821  000B42  0E67               	movlw	103
  3822  000B44  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3823  000B46  A4D8               	btfss	status,2,c
  3824  000B48  D019               	goto	l3781
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0
      +                          ) {
  3828  000B4A  51ED               	movf	_prec& (0+255),w,b
  3829  000B4C  11EE               	iorwf	(_prec+1)& (0+255),w,b
  3830  000B4E  A4D8               	btfss	status,2,c
  3831  000B50  D004               	goto	l3777
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  3835  000B52  0E00               	movlw	0
  3836  000B54  6FEE               	movwf	(_prec+1)& (0+255),b
  3837  000B56  0E01               	movlw	1
  3838  000B58  6FED               	movwf	_prec& (0+255),b
  3839  000B5A                     l3777:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 
      +                          < prec) ? prec : 6;
  3843  000B5A  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  3844  000B5C  D005               	goto	u4350
  3845  000B5E  51EE               	movf	(_prec+1)& (0+255),w,b
  3846  000B60  E108               	bnz	l251
  3847  000B62  05ED               	decf	_prec& (0+255),w,b
  3848  000B64  B0D8               	btfsc	status,0,c
  3849  000B66  D005               	goto	l251
  3850  000B68                     u4350:
  3851                           
  3852                           ; BSR set to: 0
  3853  000B68  0E00               	movlw	0
  3854  000B6A  6F93               	movwf	(efgtoa@p+1)& (0+255),b
  3855  000B6C  0E06               	movlw	6
  3856  000B6E  6F92               	movwf	efgtoa@p& (0+255),b
  3857  000B70  D008               	goto	l3787
  3858  000B72                     l251:
  3859                           
  3860                           ; BSR set to: 0
  3861  000B72  C0ED  F092         	movff	_prec,efgtoa@p
  3862  000B76  C0EE  F093         	movff	_prec+1,efgtoa@p+1
  3863  000B7A  D003               	goto	l3787
  3864  000B7C                     l3781:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (pr
      +                          ec < 0) ? 6 : prec;
  3868  000B7C  AFEE               	btfss	(_prec+1)& (0+255),7,b
  3869  000B7E  D7F9               	goto	l251
  3870  000B80  D7F3               	goto	u4350
  3871  000B82                     l3787:
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode ==
      +                           'g') {
  3875  000B82  0E67               	movlw	103
  3876  000B84  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3877  000B86  A4D8               	btfss	status,2,c
  3878  000B88  D022               	goto	l3797
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e
      +                           < -4) && !((p - 1) < e)) {
  3882  000B8A  AFA7               	btfss	(efgtoa@e+1)& (0+255),7,b
  3883  000B8C  D006               	goto	u4380
  3884  000B8E  0EFC               	movlw	252
  3885  000B90  5DA6               	subwf	efgtoa@e& (0+255),w,b
  3886  000B92  0EFF               	movlw	255
  3887  000B94  59A7               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3888  000B96  A0D8               	btfss	status,0,c
  3889  000B98  D018               	goto	l3795
  3890  000B9A                     u4380:
  3891                           
  3892                           ; BSR set to: 0
  3893  000B9A  0EFF               	movlw	255
  3894  000B9C  6F71               	movwf	??_efgtoa& (0+255),b
  3895  000B9E  0EFF               	movlw	255
  3896  000BA0  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  3897  000BA2  C092  F073         	movff	efgtoa@p,??_efgtoa+2
  3898  000BA6  C093  F074         	movff	efgtoa@p+1,??_efgtoa+3
  3899  000BAA  5171               	movf	??_efgtoa& (0+255),w,b
  3900  000BAC  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  3901  000BAE  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  3902  000BB0  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3903  000BB2  51A6               	movf	efgtoa@e& (0+255),w,b
  3904  000BB4  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  3905  000BB6  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  3906  000BB8  0A80               	xorlw	128
  3907  000BBA  6F75               	movwf	(??_efgtoa+4)& (0+255),b
  3908  000BBC  51A7               	movf	(efgtoa@e+1)& (0+255),w,b
  3909  000BBE  0A80               	xorlw	128
  3910  000BC0  5975               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3911  000BC2  A0D8               	btfss	status,0,c
  3912  000BC4  D002               	goto	l3795
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmo
      +                          de = 'f';
  3916  000BC6  0E66               	movlw	102
  3917  000BC8  D001               	goto	L4
  3918  000BCA                     l3795:
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmo
      +                          de = 'e';
  3922  000BCA  0E65               	movlw	101
  3923  000BCC                     L4:
  3924  000BCC  6F94               	movwf	efgtoa@nmode& (0+255),b
  3925  000BCE                     l3797:
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  3929  000BCE  C092  F08A         	movff	efgtoa@p,efgtoa@m
  3930  000BD2  C093  F08B         	movff	efgtoa@p+1,efgtoa@m+1
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode 
      +                          == 'g') || ((nmode == 'f') && (e < 0))) {
  3934  000BD6  0E67               	movlw	103
  3935  000BD8  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3936  000BDA  A4D8               	btfss	status,2,c
  3937  000BDC  D005               	goto	u4420
  3938                           
  3939                           ; BSR set to: 0
  3940  000BDE  0E66               	movlw	102
  3941  000BE0  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  3942  000BE2  B4D8               	btfsc	status,2,c
  3943                           
  3944                           ; BSR set to: 0
  3945  000BE4  AFA7               	btfss	(efgtoa@e+1)& (0+255),7,b
  3946  000BE6  D002               	goto	l3807
  3947  000BE8                     u4420:
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  3951  000BE8  4B8A               	infsnz	efgtoa@m& (0+255),f,b
  3952  000BEA  2B8B               	incf	(efgtoa@m+1)& (0+255),f,b
  3953  000BEC                     l3807:
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode =
      +                          = 'f') {
  3957  000BEC  0E66               	movlw	102
  3958  000BEE  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  3959  000BF0  A4D8               	btfss	status,2,c
  3960  000BF2  D016               	goto	l3817
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e <
      +                           0) {
  3964  000BF4  AFA7               	btfss	(efgtoa@e+1)& (0+255),7,b
  3965  000BF6  D00C               	goto	l3813
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u =
      +                           1.0;
  3969  000BF8  0E00               	movlw	0
  3970  000BFA  6FAA               	movwf	efgtoa@u& (0+255),b
  3971  000BFC  0E00               	movlw	0
  3972  000BFE  6FAB               	movwf	(efgtoa@u+1)& (0+255),b
  3973  000C00  0E80               	movlw	128
  3974  000C02  6FAC               	movwf	(efgtoa@u+2)& (0+255),b
  3975  000C04  0E3F               	movlw	63
  3976  000C06  6FAD               	movwf	(efgtoa@u+3)& (0+255),b
  3977                           
  3978                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e =
      +                           0;
  3979  000C08  0E00               	movlw	0
  3980  000C0A  6FA7               	movwf	(efgtoa@e+1)& (0+255),b
  3981  000C0C  0E00               	movlw	0
  3982  000C0E  6FA6               	movwf	efgtoa@e& (0+255),b
  3983  000C10                     l3813:
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(m
      +                          ode == 'g')) {
  3987  000C10  0E67               	movlw	103
  3988  000C12  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3989  000C14  B4D8               	btfsc	status,2,c
  3990  000C16  D004               	goto	l3817
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m +
      +                          = e;
  3994  000C18  51A6               	movf	efgtoa@e& (0+255),w,b
  3995  000C1A  278A               	addwf	efgtoa@m& (0+255),f,b
  3996  000C1C  51A7               	movf	(efgtoa@e+1)& (0+255),w,b
  3997  000C1E  238B               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3998  000C20                     l3817:
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  4002  000C20  0E00               	movlw	0
  4003  000C22  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  4004  000C24  0E00               	movlw	0
  4005  000C26  6FA0               	movwf	efgtoa@i& (0+255),b
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  4009  000C28  C0A2  F098         	movff	efgtoa@g,efgtoa@h
  4010  000C2C  C0A3  F099         	movff	efgtoa@g+1,efgtoa@h+1
  4011  000C30  C0A4  F09A         	movff	efgtoa@g+2,efgtoa@h+2
  4012  000C34  C0A5  F09B         	movff	efgtoa@g+3,efgtoa@h+3
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  4016  000C38  C0AA  F076         	movff	efgtoa@u,efgtoa@ou
  4017  000C3C  C0AB  F077         	movff	efgtoa@u+1,efgtoa@ou+1
  4018  000C40  C0AC  F078         	movff	efgtoa@u+2,efgtoa@ou+2
  4019  000C44  C0AD  F079         	movff	efgtoa@u+3,efgtoa@ou+3
  4020                           
  4021                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < 
      +                          m) {
  4022  000C48  D07B               	goto	l3831
  4023  000C4A                     l3823:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = flo
      +                          orf(h/u);
  4027  000C4A  C098  F034         	movff	efgtoa@h,___fldiv@b
  4028  000C4E  C099  F035         	movff	efgtoa@h+1,___fldiv@b+1
  4029  000C52  C09A  F036         	movff	efgtoa@h+2,___fldiv@b+2
  4030  000C56  C09B  F037         	movff	efgtoa@h+3,___fldiv@b+3
  4031  000C5A  C0AA  F038         	movff	efgtoa@u,___fldiv@a
  4032  000C5E  C0AB  F039         	movff	efgtoa@u+1,___fldiv@a+1
  4033  000C62  C0AC  F03A         	movff	efgtoa@u+2,___fldiv@a+2
  4034  000C66  C0AD  F03B         	movff	efgtoa@u+3,___fldiv@a+3
  4035  000C6A  ECE8  F012         	call	___fldiv	;wreg free
  4036  000C6E  C034  F04D         	movff	?___fldiv,floorf@x
  4037  000C72  C035  F04E         	movff	?___fldiv+1,floorf@x+1
  4038  000C76  C036  F04F         	movff	?___fldiv+2,floorf@x+2
  4039  000C7A  C037  F050         	movff	?___fldiv+3,floorf@x+3
  4040  000C7E  EC2C  F014         	call	_floorf	;wreg free
  4041  000C82  C04D  F09C         	movff	?_floorf,efgtoa@l
  4042  000C86  C04E  F09D         	movff	?_floorf+1,efgtoa@l+1
  4043  000C8A  C04F  F09E         	movff	?_floorf+2,efgtoa@l+2
  4044  000C8E  C050  F09F         	movff	?_floorf+3,efgtoa@l+3
  4045                           
  4046                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (in
      +                          t)l;
  4047  000C92  C09C  F060         	movff	efgtoa@l,___fltol@f1
  4048  000C96  C09D  F061         	movff	efgtoa@l+1,___fltol@f1+1
  4049  000C9A  C09E  F062         	movff	efgtoa@l+2,___fltol@f1+2
  4050  000C9E  C09F  F063         	movff	efgtoa@l+3,___fltol@f1+3
  4051  000CA2  EC17  F017         	call	___fltol	;wreg free
  4052  000CA6  C060  F08E         	movff	?___fltol,efgtoa@d
  4053  000CAA  C061  F08F         	movff	?___fltol+1,efgtoa@d+1
  4054                           
  4055                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*
      +                          u;
  4056  000CAE  C098  F060         	movff	efgtoa@h,___flsub@b
  4057  000CB2  C099  F061         	movff	efgtoa@h+1,___flsub@b+1
  4058  000CB6  C09A  F062         	movff	efgtoa@h+2,___flsub@b+2
  4059  000CBA  C09B  F063         	movff	efgtoa@h+3,___flsub@b+3
  4060  000CBE  C0AA  F013         	movff	efgtoa@u,___flmul@a
  4061  000CC2  C0AB  F014         	movff	efgtoa@u+1,___flmul@a+1
  4062  000CC6  C0AC  F015         	movff	efgtoa@u+2,___flmul@a+2
  4063  000CCA  C0AD  F016         	movff	efgtoa@u+3,___flmul@a+3
  4064  000CCE  C09C  F00F         	movff	efgtoa@l,___flmul@b
  4065  000CD2  C09D  F010         	movff	efgtoa@l+1,___flmul@b+1
  4066  000CD6  C09E  F011         	movff	efgtoa@l+2,___flmul@b+2
  4067  000CDA  C09F  F012         	movff	efgtoa@l+3,___flmul@b+3
  4068  000CDE  ECB9  F00F         	call	___flmul	;wreg free
  4069  000CE2  C00F  F064         	movff	?___flmul,___flsub@a
  4070  000CE6  C010  F065         	movff	?___flmul+1,___flsub@a+1
  4071  000CEA  C011  F066         	movff	?___flmul+2,___flsub@a+2
  4072  000CEE  C012  F067         	movff	?___flmul+3,___flsub@a+3
  4073  000CF2  EC52  F01A         	call	___flsub	;wreg free
  4074  000CF6  C060  F098         	movff	?___flsub,efgtoa@h
  4075  000CFA  C061  F099         	movff	?___flsub+1,efgtoa@h+1
  4076  000CFE  C062  F09A         	movff	?___flsub+2,efgtoa@h+2
  4077  000D02  C063  F09B         	movff	?___flsub+3,efgtoa@h+3
  4078                           
  4079                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/1
      +                          0.0;
  4080  000D06  C0AA  F034         	movff	efgtoa@u,___fldiv@b
  4081  000D0A  C0AB  F035         	movff	efgtoa@u+1,___fldiv@b+1
  4082  000D0E  C0AC  F036         	movff	efgtoa@u+2,___fldiv@b+2
  4083  000D12  C0AD  F037         	movff	efgtoa@u+3,___fldiv@b+3
  4084  000D16  0E00               	movlw	0
  4085  000D18  6E38               	movwf	___fldiv@a,c
  4086  000D1A  0E00               	movlw	0
  4087  000D1C  6E39               	movwf	___fldiv@a+1,c
  4088  000D1E  0E20               	movlw	32
  4089  000D20  6E3A               	movwf	___fldiv@a+2,c
  4090  000D22  0E41               	movlw	65
  4091  000D24  6E3B               	movwf	___fldiv@a+3,c
  4092  000D26  ECE8  F012         	call	___fldiv	;wreg free
  4093  000D2A  C034  F0AA         	movff	?___fldiv,efgtoa@u
  4094  000D2E  C035  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  4095  000D32  C036  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  4096  000D36  C037  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  4097                           
  4098                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  4099  000D3A  0100               	movlb	0	; () banked
  4100  000D3C  4BA0               	infsnz	efgtoa@i& (0+255),f,b
  4101  000D3E  2BA1               	incf	(efgtoa@i+1)& (0+255),f,b
  4102  000D40                     l3831:
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < 
      +                          m) {
  4106  000D40  518A               	movf	efgtoa@m& (0+255),w,b
  4107  000D42  5DA0               	subwf	efgtoa@i& (0+255),w,b
  4108  000D44  51A1               	movf	(efgtoa@i+1)& (0+255),w,b
  4109  000D46  0A80               	xorlw	128
  4110  000D48  6F71               	movwf	??_efgtoa& (0+255),b
  4111  000D4A  518B               	movf	(efgtoa@m+1)& (0+255),w,b
  4112  000D4C  0A80               	xorlw	128
  4113  000D4E  5971               	subwfb	??_efgtoa& (0+255),w,b
  4114  000D50  A0D8               	btfss	status,0,c
  4115  000D52  D77B               	goto	l3823
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  4119  000D54  C0AA  F00F         	movff	efgtoa@u,___flmul@b
  4120  000D58  C0AB  F010         	movff	efgtoa@u+1,___flmul@b+1
  4121  000D5C  C0AC  F011         	movff	efgtoa@u+2,___flmul@b+2
  4122  000D60  C0AD  F012         	movff	efgtoa@u+3,___flmul@b+3
  4123  000D64  0E00               	movlw	0
  4124  000D66  6E13               	movwf	___flmul@a,c
  4125  000D68  0E00               	movlw	0
  4126  000D6A  6E14               	movwf	___flmul@a+1,c
  4127  000D6C  0EA0               	movlw	160
  4128  000D6E  6E15               	movwf	___flmul@a+2,c
  4129  000D70  0E40               	movlw	64
  4130  000D72  6E16               	movwf	___flmul@a+3,c
  4131  000D74  ECB9  F00F         	call	___flmul	;wreg free
  4132  000D78  C00F  F09C         	movff	?___flmul,efgtoa@l
  4133  000D7C  C010  F09D         	movff	?___flmul+1,efgtoa@l+1
  4134  000D80  C011  F09E         	movff	?___flmul+2,efgtoa@l+2
  4135  000D84  C012  F09F         	movff	?___flmul+3,efgtoa@l+3
  4136                           
  4137                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) 
      +                          {
  4138  000D88  C098  F028         	movff	efgtoa@h,___flge@ff1
  4139  000D8C  C099  F029         	movff	efgtoa@h+1,___flge@ff1+1
  4140  000D90  C09A  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  4141  000D94  C09B  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  4142  000D98  C09C  F02C         	movff	efgtoa@l,___flge@ff2
  4143  000D9C  C09D  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  4144  000DA0  C09E  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  4145  000DA4  C09F  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  4146  000DA8  EC49  F016         	call	___flge	;wreg free
  4147  000DAC  B0D8               	btfsc	status,0,c
  4148  000DAE  D003               	goto	l3839
  4149                           
  4150                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0
      +                          ;
  4151  000DB0  0E00               	movlw	0
  4152  000DB2  0100               	movlb	0	; () banked
  4153  000DB4  D018               	goto	L5
  4154  000DB6                     l3839:
  4155                           
  4156                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h 
      +                          == l) && !(d % 2)) {
  4157  000DB6  C098  F001         	movff	efgtoa@h,___fleq@ff1
  4158  000DBA  C099  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4159  000DBE  C09A  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4160  000DC2  C09B  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4161  000DC6  C09C  F005         	movff	efgtoa@l,___fleq@ff2
  4162  000DCA  C09D  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4163  000DCE  C09E  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4164  000DD2  C09F  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4165  000DD6  EC63  F018         	call	___fleq	;wreg free
  4166  000DDA  A0D8               	btfss	status,0,c
  4167  000DDC  D00B               	goto	l3845
  4168  000DDE  0100               	movlb	0	; () banked
  4169  000DE0  B18E               	btfsc	efgtoa@d& (0+255),0,b
  4170  000DE2  D008               	goto	l3845
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l =
      +                           0.0;
  4174  000DE4  0E00               	movlw	0
  4175  000DE6                     L5:
  4176  000DE6  6F9C               	movwf	efgtoa@l& (0+255),b
  4177  000DE8  0E00               	movlw	0
  4178  000DEA  6F9D               	movwf	(efgtoa@l+1)& (0+255),b
  4179  000DEC  0E00               	movlw	0
  4180  000DEE  6F9E               	movwf	(efgtoa@l+2)& (0+255),b
  4181  000DF0  0E00               	movlw	0
  4182  000DF2  6F9F               	movwf	(efgtoa@l+3)& (0+255),b
  4183  000DF4                     l3845:
  4184                           
  4185                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  4186  000DF4  C0A2  F04D         	movff	efgtoa@g,___fladd@b
  4187  000DF8  C0A3  F04E         	movff	efgtoa@g+1,___fladd@b+1
  4188  000DFC  C0A4  F04F         	movff	efgtoa@g+2,___fladd@b+2
  4189  000E00  C0A5  F050         	movff	efgtoa@g+3,___fladd@b+3
  4190  000E04  C09C  F051         	movff	efgtoa@l,___fladd@a
  4191  000E08  C09D  F052         	movff	efgtoa@l+1,___fladd@a+1
  4192  000E0C  C09E  F053         	movff	efgtoa@l+2,___fladd@a+2
  4193  000E10  C09F  F054         	movff	efgtoa@l+3,___fladd@a+3
  4194  000E14  EC62  F011         	call	___fladd	;wreg free
  4195  000E18  C04D  F098         	movff	?___fladd,efgtoa@h
  4196  000E1C  C04E  F099         	movff	?___fladd+1,efgtoa@h+1
  4197  000E20  C04F  F09A         	movff	?___fladd+2,efgtoa@h+2
  4198  000E24  C050  F09B         	movff	?___fladd+3,efgtoa@h+3
  4199                           
  4200                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  4201  000E28  C076  F0AA         	movff	efgtoa@ou,efgtoa@u
  4202  000E2C  C077  F0AB         	movff	efgtoa@ou+1,efgtoa@u+1
  4203  000E30  C078  F0AC         	movff	efgtoa@ou+2,efgtoa@u+2
  4204  000E34  C079  F0AD         	movff	efgtoa@ou+3,efgtoa@u+3
  4205                           
  4206                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode
      +                           == 'e') ? 0 : e;
  4207  000E38  0E65               	movlw	101
  4208  000E3A  0100               	movlb	0	; () banked
  4209  000E3C  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  4210  000E3E  B4D8               	btfsc	status,2,c
  4211  000E40  D005               	goto	l3853
  4212                           
  4213                           ; BSR set to: 0
  4214  000E42  C0A6  F08C         	movff	efgtoa@e,efgtoa@ne
  4215  000E46  C0A7  F08D         	movff	efgtoa@e+1,efgtoa@ne+1
  4216  000E4A  D004               	goto	l277
  4217  000E4C                     l3853:
  4218                           
  4219                           ; BSR set to: 0
  4220  000E4C  0E00               	movlw	0
  4221  000E4E  6F8D               	movwf	(efgtoa@ne+1)& (0+255),b
  4222  000E50  0E00               	movlw	0
  4223  000E52  6F8C               	movwf	efgtoa@ne& (0+255),b
  4224  000E54                     l277:
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  4228  000E54  0E00               	movlw	0
  4229  000E56  6F89               	movwf	(efgtoa@pp+1)& (0+255),b
  4230  000E58  0E00               	movlw	0
  4231  000E5A  6F88               	movwf	efgtoa@pp& (0+255),b
  4232                           
  4233                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  4234  000E5C  0E00               	movlw	0
  4235  000E5E  6F87               	movwf	(efgtoa@t+1)& (0+255),b
  4236  000E60  0E00               	movlw	0
  4237  000E62  6F86               	movwf	efgtoa@t& (0+255),b
  4238                           
  4239                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  4240  000E64  0E00               	movlw	0
  4241  000E66  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  4242  000E68  0E00               	movlw	0
  4243  000E6A  6FA0               	movwf	efgtoa@i& (0+255),b
  4244                           
  4245                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i <
      +                           m) && (n < (80 - 5))) {
  4246  000E6C  D0C6               	goto	l3903
  4247  000E6E                     l3855:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = flo
      +                          orf(h/u);
  4251  000E6E  C098  F034         	movff	efgtoa@h,___fldiv@b
  4252  000E72  C099  F035         	movff	efgtoa@h+1,___fldiv@b+1
  4253  000E76  C09A  F036         	movff	efgtoa@h+2,___fldiv@b+2
  4254  000E7A  C09B  F037         	movff	efgtoa@h+3,___fldiv@b+3
  4255  000E7E  C0AA  F038         	movff	efgtoa@u,___fldiv@a
  4256  000E82  C0AB  F039         	movff	efgtoa@u+1,___fldiv@a+1
  4257  000E86  C0AC  F03A         	movff	efgtoa@u+2,___fldiv@a+2
  4258  000E8A  C0AD  F03B         	movff	efgtoa@u+3,___fldiv@a+3
  4259  000E8E  ECE8  F012         	call	___fldiv	;wreg free
  4260  000E92  C034  F04D         	movff	?___fldiv,floorf@x
  4261  000E96  C035  F04E         	movff	?___fldiv+1,floorf@x+1
  4262  000E9A  C036  F04F         	movff	?___fldiv+2,floorf@x+2
  4263  000E9E  C037  F050         	movff	?___fldiv+3,floorf@x+3
  4264  000EA2  EC2C  F014         	call	_floorf	;wreg free
  4265  000EA6  C04D  F09C         	movff	?_floorf,efgtoa@l
  4266  000EAA  C04E  F09D         	movff	?_floorf+1,efgtoa@l+1
  4267  000EAE  C04F  F09E         	movff	?_floorf+2,efgtoa@l+2
  4268  000EB2  C050  F09F         	movff	?_floorf+3,efgtoa@l+3
  4269                           
  4270                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (in
      +                          t)l;
  4271  000EB6  C09C  F060         	movff	efgtoa@l,___fltol@f1
  4272  000EBA  C09D  F061         	movff	efgtoa@l+1,___fltol@f1+1
  4273  000EBE  C09E  F062         	movff	efgtoa@l+2,___fltol@f1+2
  4274  000EC2  C09F  F063         	movff	efgtoa@l+3,___fltol@f1+3
  4275  000EC6  EC17  F017         	call	___fltol	;wreg free
  4276  000ECA  C060  F08E         	movff	?___fltol,efgtoa@d
  4277  000ECE  C061  F08F         	movff	?___fltol+1,efgtoa@d+1
  4278                           
  4279                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(f
      +                          lags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4280  000ED2  0100               	movlb	0	; () banked
  4281  000ED4  B9EF               	btfsc	_flags& (0+255),4,b
  4282  000ED6  D00C               	goto	l3867
  4283                           
  4284                           ; BSR set to: 0
  4285  000ED8  518E               	movf	efgtoa@d& (0+255),w,b
  4286  000EDA  118F               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4287  000EDC  A4D8               	btfss	status,2,c
  4288  000EDE  D008               	goto	l3867
  4289                           
  4290                           ; BSR set to: 0
  4291  000EE0  0E67               	movlw	103
  4292  000EE2  1997               	xorwf	efgtoa@mode& (0+255),w,b
  4293  000EE4  B4D8               	btfsc	status,2,c
  4294                           
  4295                           ; BSR set to: 0
  4296  000EE6  AF8D               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4297  000EE8  D003               	goto	l3867
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t
      +                          ;
  4301  000EEA  4B86               	infsnz	efgtoa@t& (0+255),f,b
  4302  000EEC  2B87               	incf	(efgtoa@t+1)& (0+255),f,b
  4303                           
  4304                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else 
      +                          {
  4305  000EEE  D039               	goto	l3895
  4306  000EF0                     l3867:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if 
      +                          (!pp && (ne < 0)) {
  4310  000EF0  5188               	movf	efgtoa@pp& (0+255),w,b
  4311  000EF2  1189               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4312  000EF4  B4D8               	btfsc	status,2,c
  4313                           
  4314                           ; BSR set to: 0
  4315  000EF6  AF8D               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4316  000EF8  D022               	goto	l3887
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                
      +                           dbuf[n++] = '.';
  4320  000EFA  0E2D               	movlw	low _dbuf
  4321  000EFC  25A8               	addwf	efgtoa@n& (0+255),w,b
  4322  000EFE  6ED9               	movwf	fsr2l,c
  4323  000F00  0E01               	movlw	high _dbuf
  4324  000F02  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4325  000F04  6EDA               	movwf	fsr2h,c
  4326  000F06  0E2E               	movlw	46
  4327  000F08  6EDF               	movwf	indf2,c
  4328                           
  4329                           ; BSR set to: 0
  4330  000F0A  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  4331  000F0C  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                
      +                           --w;
  4335  000F0E  0795               	decf	efgtoa@w& (0+255),f,b
  4336  000F10  A0D8               	btfss	status,0,c
  4337  000F12  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                
      +                           pp = 1;
  4341  000F14  0E00               	movlw	0
  4342  000F16  6F89               	movwf	(efgtoa@pp+1)& (0+255),b
  4343  000F18  0E01               	movlw	1
  4344  000F1A  6F88               	movwf	efgtoa@pp& (0+255),b
  4345  000F1C  D010               	goto	l3887
  4346  000F1E                     l3879:
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                
      +                           dbuf[n++] = '0';
  4350  000F1E  0E2D               	movlw	low _dbuf
  4351  000F20  25A8               	addwf	efgtoa@n& (0+255),w,b
  4352  000F22  6ED9               	movwf	fsr2l,c
  4353  000F24  0E01               	movlw	high _dbuf
  4354  000F26  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4355  000F28  6EDA               	movwf	fsr2h,c
  4356  000F2A  0E30               	movlw	48
  4357  000F2C  6EDF               	movwf	indf2,c
  4358                           
  4359                           ; BSR set to: 0
  4360  000F2E  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  4361  000F30  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                
      +                           --w;
  4365  000F32  0795               	decf	efgtoa@w& (0+255),f,b
  4366  000F34  A0D8               	btfss	status,0,c
  4367  000F36  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                
      +                           --t;
  4371  000F38  0786               	decf	efgtoa@t& (0+255),f,b
  4372  000F3A  A0D8               	btfss	status,0,c
  4373  000F3C  0787               	decf	(efgtoa@t+1)& (0+255),f,b
  4374  000F3E                     l3887:
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             whi
      +                          le (t) {
  4378  000F3E  5186               	movf	efgtoa@t& (0+255),w,b
  4379  000F40  1187               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4380  000F42  A4D8               	btfss	status,2,c
  4381  000F44  D7EC               	goto	l3879
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbu
      +                          f[n++] = '0' + d;
  4385  000F46  0E2D               	movlw	low _dbuf
  4386  000F48  25A8               	addwf	efgtoa@n& (0+255),w,b
  4387  000F4A  6ED9               	movwf	fsr2l,c
  4388  000F4C  0E01               	movlw	high _dbuf
  4389  000F4E  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4390  000F50  6EDA               	movwf	fsr2h,c
  4391  000F52  518E               	movf	efgtoa@d& (0+255),w,b
  4392  000F54  0F30               	addlw	48
  4393  000F56  6EDF               	movwf	indf2,c
  4394                           
  4395                           ; BSR set to: 0
  4396  000F58  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  4397  000F5A  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w
      +                          ;
  4401  000F5C  0795               	decf	efgtoa@w& (0+255),f,b
  4402  000F5E  A0D8               	btfss	status,0,c
  4403  000F60  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  4404  000F62                     l3895:
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*
      +                          u;
  4408  000F62  C098  F060         	movff	efgtoa@h,___flsub@b
  4409  000F66  C099  F061         	movff	efgtoa@h+1,___flsub@b+1
  4410  000F6A  C09A  F062         	movff	efgtoa@h+2,___flsub@b+2
  4411  000F6E  C09B  F063         	movff	efgtoa@h+3,___flsub@b+3
  4412  000F72  C0AA  F013         	movff	efgtoa@u,___flmul@a
  4413  000F76  C0AB  F014         	movff	efgtoa@u+1,___flmul@a+1
  4414  000F7A  C0AC  F015         	movff	efgtoa@u+2,___flmul@a+2
  4415  000F7E  C0AD  F016         	movff	efgtoa@u+3,___flmul@a+3
  4416  000F82  C09C  F00F         	movff	efgtoa@l,___flmul@b
  4417  000F86  C09D  F010         	movff	efgtoa@l+1,___flmul@b+1
  4418  000F8A  C09E  F011         	movff	efgtoa@l+2,___flmul@b+2
  4419  000F8E  C09F  F012         	movff	efgtoa@l+3,___flmul@b+3
  4420  000F92  ECB9  F00F         	call	___flmul	;wreg free
  4421  000F96  C00F  F064         	movff	?___flmul,___flsub@a
  4422  000F9A  C010  F065         	movff	?___flmul+1,___flsub@a+1
  4423  000F9E  C011  F066         	movff	?___flmul+2,___flsub@a+2
  4424  000FA2  C012  F067         	movff	?___flmul+3,___flsub@a+3
  4425  000FA6  EC52  F01A         	call	___flsub	;wreg free
  4426  000FAA  C060  F098         	movff	?___flsub,efgtoa@h
  4427  000FAE  C061  F099         	movff	?___flsub+1,efgtoa@h+1
  4428  000FB2  C062  F09A         	movff	?___flsub+2,efgtoa@h+2
  4429  000FB6  C063  F09B         	movff	?___flsub+3,efgtoa@h+3
  4430                           
  4431                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/1
      +                          0.0;
  4432  000FBA  C0AA  F034         	movff	efgtoa@u,___fldiv@b
  4433  000FBE  C0AB  F035         	movff	efgtoa@u+1,___fldiv@b+1
  4434  000FC2  C0AC  F036         	movff	efgtoa@u+2,___fldiv@b+2
  4435  000FC6  C0AD  F037         	movff	efgtoa@u+3,___fldiv@b+3
  4436  000FCA  0E00               	movlw	0
  4437  000FCC  6E38               	movwf	___fldiv@a,c
  4438  000FCE  0E00               	movlw	0
  4439  000FD0  6E39               	movwf	___fldiv@a+1,c
  4440  000FD2  0E20               	movlw	32
  4441  000FD4  6E3A               	movwf	___fldiv@a+2,c
  4442  000FD6  0E41               	movlw	65
  4443  000FD8  6E3B               	movwf	___fldiv@a+3,c
  4444  000FDA  ECE8  F012         	call	___fldiv	;wreg free
  4445  000FDE  C034  F0AA         	movff	?___fldiv,efgtoa@u
  4446  000FE2  C035  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  4447  000FE6  C036  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  4448  000FEA  C037  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  4449                           
  4450                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  4451  000FEE  0100               	movlb	0	; () banked
  4452  000FF0  078C               	decf	efgtoa@ne& (0+255),f,b
  4453  000FF2  A0D8               	btfss	status,0,c
  4454  000FF4  078D               	decf	(efgtoa@ne+1)& (0+255),f,b
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  4458  000FF6  4BA0               	infsnz	efgtoa@i& (0+255),f,b
  4459  000FF8  2BA1               	incf	(efgtoa@i+1)& (0+255),f,b
  4460  000FFA                     l3903:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i <
      +                           m) && (n < (80 - 5))) {
  4464  000FFA  518A               	movf	efgtoa@m& (0+255),w,b
  4465  000FFC  5DA0               	subwf	efgtoa@i& (0+255),w,b
  4466  000FFE  51A1               	movf	(efgtoa@i+1)& (0+255),w,b
  4467  001000  0A80               	xorlw	128
  4468  001002  6F71               	movwf	??_efgtoa& (0+255),b
  4469  001004  518B               	movf	(efgtoa@m+1)& (0+255),w,b
  4470  001006  0A80               	xorlw	128
  4471  001008  5971               	subwfb	??_efgtoa& (0+255),w,b
  4472  00100A  B0D8               	btfsc	status,0,c
  4473  00100C  D008               	goto	u4590
  4474                           
  4475                           ; BSR set to: 0
  4476  00100E  BFA9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4477  001010  D72E               	goto	l3855
  4478  001012  51A9               	movf	(efgtoa@n+1)& (0+255),w,b
  4479  001014  E104               	bnz	u4590
  4480  001016  0E4B               	movlw	75
  4481  001018  5DA8               	subwf	efgtoa@n& (0+255),w,b
  4482  00101A  A0D8               	btfss	status,0,c
  4483  00101C  D728               	goto	l3855
  4484  00101E                     u4590:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && 
      +                          (flags & (1 << 4))) {
  4488  00101E  5188               	movf	efgtoa@pp& (0+255),w,b
  4489  001020  1189               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4490  001022  B4D8               	btfsc	status,2,c
  4491                           
  4492                           ; BSR set to: 0
  4493  001024  A9EF               	btfss	_flags& (0+255),4,b
  4494  001026  D00A               	goto	l3915
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n+
      +                          +] = '.';
  4498  001028  0E2D               	movlw	low _dbuf
  4499  00102A  25A8               	addwf	efgtoa@n& (0+255),w,b
  4500  00102C  6ED9               	movwf	fsr2l,c
  4501  00102E  0E01               	movlw	high _dbuf
  4502  001030  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4503  001032  6EDA               	movwf	fsr2h,c
  4504  001034  0E2E               	movlw	46
  4505  001036  6EDF               	movwf	indf2,c
  4506                           
  4507                           ; BSR set to: 0
  4508  001038  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  4509  00103A  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  4510  00103C                     l3915:
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '
      +                          \0';
  4514  00103C  0E2D               	movlw	low _dbuf
  4515  00103E  25A8               	addwf	efgtoa@n& (0+255),w,b
  4516  001040  6ED9               	movwf	fsr2l,c
  4517  001042  0E01               	movlw	high _dbuf
  4518  001044  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4519  001046  6EDA               	movwf	fsr2h,c
  4520  001048  0E00               	movlw	0
  4521  00104A  6EDF               	movwf	indf2,c
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode =
      +                          = 'e') {
  4525  00104C  0E65               	movlw	101
  4526  00104E  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  4527  001050  A4D8               	btfss	status,2,c
  4528  001052  D47F               	goto	l3727
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = siz
      +                          eof(dbuf) - 1;
  4532  001054  0E00               	movlw	0
  4533  001056  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  4534  001058  0E4F               	movlw	79
  4535  00105A  6FA0               	movwf	efgtoa@i& (0+255),b
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i]
      +                           = '\0';
  4539  00105C  0E2D               	movlw	low _dbuf
  4540  00105E  25A0               	addwf	efgtoa@i& (0+255),w,b
  4541  001060  6ED9               	movwf	fsr2l,c
  4542  001062  0E01               	movlw	high _dbuf
  4543  001064  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4544  001066  6EDA               	movwf	fsr2h,c
  4545  001068  0E00               	movlw	0
  4546  00106A  6EDF               	movwf	indf2,c
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 
      +                          0;
  4550  00106C  0E00               	movlw	0
  4551  00106E  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  4552  001070  0E00               	movlw	0
  4553  001072  6F90               	movwf	efgtoa@sign& (0+255),b
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e <
      +                           0) {
  4557  001074  AFA7               	btfss	(efgtoa@e+1)& (0+255),7,b
  4558  001076  D008               	goto	l3931
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sig
      +                          n = 1;
  4562  001078  0E00               	movlw	0
  4563  00107A  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  4564  00107C  0E01               	movlw	1
  4565  00107E  6F90               	movwf	efgtoa@sign& (0+255),b
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e =
      +                           -e;
  4569  001080  6DA6               	negf	efgtoa@e& (0+255),b
  4570  001082  1FA7               	comf	(efgtoa@e+1)& (0+255),f,b
  4571  001084  B0D8               	btfsc	status,0,c
  4572  001086  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  4573  001088                     l3931:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  4577  001088  0E00               	movlw	0
  4578  00108A  6F93               	movwf	(efgtoa@p+1)& (0+255),b
  4579  00108C  0E02               	movlw	2
  4580  00108E  6F92               	movwf	efgtoa@p& (0+255),b
  4581                           
  4582                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (
      +                          e || (0 < p)) {
  4583  001090  D02B               	goto	l3943
  4584  001092                     l3933:
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i
      +                          ;
  4588  001092  07A0               	decf	efgtoa@i& (0+255),f,b
  4589  001094  A0D8               	btfss	status,0,c
  4590  001096  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbu
      +                          f[i] = '0' + (e % 10);
  4594  001098  0E2D               	movlw	low _dbuf
  4595  00109A  25A0               	addwf	efgtoa@i& (0+255),w,b
  4596  00109C  6ED9               	movwf	fsr2l,c
  4597  00109E  0E01               	movlw	high _dbuf
  4598  0010A0  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4599  0010A2  6EDA               	movwf	fsr2h,c
  4600  0010A4  C0A6  F001         	movff	efgtoa@e,___awmod@dividend
  4601  0010A8  C0A7  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4602  0010AC  0E00               	movlw	0
  4603  0010AE  6E04               	movwf	___awmod@divisor+1,c
  4604  0010B0  0E0A               	movlw	10
  4605  0010B2  6E03               	movwf	___awmod@divisor,c
  4606  0010B4  EC27  F019         	call	___awmod	;wreg free
  4607  0010B8  5001               	movf	?___awmod,w,c
  4608  0010BA  0F30               	addlw	48
  4609  0010BC  6EDF               	movwf	indf2,c
  4610                           
  4611                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e =
      +                           e / 10;
  4612  0010BE  C0A6  F001         	movff	efgtoa@e,___awdiv@dividend
  4613  0010C2  C0A7  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4614  0010C6  0E00               	movlw	0
  4615  0010C8  6E04               	movwf	___awdiv@divisor+1,c
  4616  0010CA  0E0A               	movlw	10
  4617  0010CC  6E03               	movwf	___awdiv@divisor,c
  4618  0010CE  ECA8  F018         	call	___awdiv	;wreg free
  4619  0010D2  C001  F0A6         	movff	?___awdiv,efgtoa@e
  4620  0010D6  C002  F0A7         	movff	?___awdiv+1,efgtoa@e+1
  4621                           
  4622                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p
      +                          ;
  4623  0010DA  0100               	movlb	0	; () banked
  4624  0010DC  0792               	decf	efgtoa@p& (0+255),f,b
  4625  0010DE  A0D8               	btfss	status,0,c
  4626  0010E0  0793               	decf	(efgtoa@p+1)& (0+255),f,b
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w
      +                          ;
  4630  0010E2  0795               	decf	efgtoa@w& (0+255),f,b
  4631  0010E4  A0D8               	btfss	status,0,c
  4632  0010E6  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  4633  0010E8                     l3943:
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (
      +                          e || (0 < p)) {
  4637  0010E8  51A6               	movf	efgtoa@e& (0+255),w,b
  4638  0010EA  11A7               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4639  0010EC  A4D8               	btfss	status,2,c
  4640  0010EE  D7D1               	goto	l3933
  4641                           
  4642                           ; BSR set to: 0
  4643  0010F0  BF93               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4644  0010F2  D005               	goto	u4650
  4645  0010F4  5193               	movf	(efgtoa@p+1)& (0+255),w,b
  4646  0010F6  E1CD               	bnz	l3933
  4647  0010F8  0592               	decf	efgtoa@p& (0+255),w,b
  4648  0010FA  B0D8               	btfsc	status,0,c
  4649  0010FC  D7CA               	goto	l3933
  4650  0010FE                     u4650:
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  4654  0010FE  07A0               	decf	efgtoa@i& (0+255),f,b
  4655  001100  A0D8               	btfss	status,0,c
  4656  001102  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i]
      +                           = sign ? '-' : '+';
  4660  001104  5190               	movf	efgtoa@sign& (0+255),w,b
  4661  001106  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4662  001108  A4D8               	btfss	status,2,c
  4663  00110A  D004               	goto	l3953
  4664                           
  4665                           ; BSR set to: 0
  4666  00110C  0E00               	movlw	0
  4667  00110E  6F81               	movwf	(_efgtoa$377+1)& (0+255),b
  4668  001110  0E2B               	movlw	43
  4669  001112  D003               	goto	L6
  4670  001114                     l3953:
  4671                           
  4672                           ; BSR set to: 0
  4673  001114  0E00               	movlw	0
  4674  001116  6F81               	movwf	(_efgtoa$377+1)& (0+255),b
  4675  001118  0E2D               	movlw	45
  4676  00111A                     L6:
  4677  00111A  6F80               	movwf	_efgtoa$377& (0+255),b
  4678                           
  4679                           ; BSR set to: 0
  4680  00111C  0E2D               	movlw	low _dbuf
  4681  00111E  25A0               	addwf	efgtoa@i& (0+255),w,b
  4682  001120  6ED9               	movwf	fsr2l,c
  4683  001122  0E01               	movlw	high _dbuf
  4684  001124  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4685  001126  6EDA               	movwf	fsr2h,c
  4686  001128  C080  FFDF         	movff	_efgtoa$377,indf2
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  4690  00112C  0795               	decf	efgtoa@w& (0+255),f,b
  4691  00112E  A0D8               	btfss	status,0,c
  4692  001130  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i]
      +                           = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4696  001132  07A0               	decf	efgtoa@i& (0+255),f,b
  4697  001134  A0D8               	btfss	status,0,c
  4698  001136  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  4699                           
  4700                           ; BSR set to: 0
  4701  001138  0EBF               	movlw	191
  4702  00113A  6F71               	movwf	??_efgtoa& (0+255),b
  4703  00113C  0EFF               	movlw	255
  4704  00113E  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  4705  001140  5170               	movf	efgtoa@c& (0+255),w,b
  4706  001142  6F73               	movwf	(??_efgtoa+2)& (0+255),b
  4707  001144  6B74               	clrf	(??_efgtoa+3)& (0+255),b
  4708  001146  5171               	movf	??_efgtoa& (0+255),w,b
  4709  001148  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  4710  00114A  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  4711  00114C  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4712  00114E  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  4713  001150  E106               	bnz	u4670
  4714  001152  0E1A               	movlw	26
  4715  001154  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  4716  001156  B0D8               	btfsc	status,0,c
  4717  001158  D002               	goto	u4670
  4718  00115A  0E01               	movlw	1
  4719  00115C  D001               	goto	u4680
  4720  00115E                     u4670:
  4721  00115E  0E00               	movlw	0
  4722  001160                     u4680:
  4723  001160  6F84               	movwf	_efgtoa$379& (0+255),b
  4724  001162  6B85               	clrf	(_efgtoa$379+1)& (0+255),b
  4725                           
  4726                           ; BSR set to: 0
  4727  001164  5184               	movf	_efgtoa$379& (0+255),w,b
  4728  001166  1185               	iorwf	(_efgtoa$379+1)& (0+255),w,b
  4729  001168  A4D8               	btfss	status,2,c
  4730  00116A  D004               	goto	l3969
  4731                           
  4732                           ; BSR set to: 0
  4733  00116C  0E00               	movlw	0
  4734  00116E  6F83               	movwf	(_efgtoa$378+1)& (0+255),b
  4735  001170  0E65               	movlw	101
  4736  001172  D003               	goto	L7
  4737  001174                     l3969:
  4738                           
  4739                           ; BSR set to: 0
  4740  001174  0E00               	movlw	0
  4741  001176  6F83               	movwf	(_efgtoa$378+1)& (0+255),b
  4742  001178  0E45               	movlw	69
  4743  00117A                     L7:
  4744  00117A  6F82               	movwf	_efgtoa$378& (0+255),b
  4745                           
  4746                           ; BSR set to: 0
  4747  00117C  0E2D               	movlw	low _dbuf
  4748  00117E  25A0               	addwf	efgtoa@i& (0+255),w,b
  4749  001180  6ED9               	movwf	fsr2l,c
  4750  001182  0E01               	movlw	high _dbuf
  4751  001184  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4752  001186  6EDA               	movwf	fsr2h,c
  4753  001188  C082  FFDF         	movff	_efgtoa$378,indf2
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  4757  00118C  0795               	decf	efgtoa@w& (0+255),f,b
  4758  00118E  A0D8               	btfss	status,0,c
  4759  001190  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(
      +                          &dbuf[n], &dbuf[i]);
  4763  001192  0E2D               	movlw	low _dbuf
  4764  001194  25A8               	addwf	efgtoa@n& (0+255),w,b
  4765  001196  6E01               	movwf	strcpy@dest,c
  4766  001198  0E01               	movlw	high _dbuf
  4767  00119A  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4768  00119C  6E02               	movwf	strcpy@dest+1,c
  4769  00119E  0E2D               	movlw	low _dbuf
  4770  0011A0  25A0               	addwf	efgtoa@i& (0+255),w,b
  4771  0011A2  6E03               	movwf	strcpy@src,c
  4772  0011A4  0E01               	movlw	high _dbuf
  4773  0011A6  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4774  0011A8  6E04               	movwf	strcpy@src+1,c
  4775  0011AA  ECB7  F019         	call	_strcpy	;wreg free
  4776  0011AE  EFA9  F004         	goto	l3727
  4777  0011B2                     __end_of_efgtoa:
  4778                           	opt callstack 0
  4779                           
  4780 ;; *************** function _tolower *****************
  4781 ;; Defined at:
  4782 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  c               2    6[COMRAM] int 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  2    6[COMRAM] int 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4796 ;;      Params:         2       0       0       0       0       0       0       0       0
  4797 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4798 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4799 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4800 ;;Total ram usage:        8 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; Hardware stack levels required when called:    2
  4803 ;; This function calls:
  4804 ;;		_isupper
  4805 ;; This function is called by:
  4806 ;;		_efgtoa
  4807 ;;		_vfpfcnvrt
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text8
  4812  0033C0                     __ptext8:
  4813                           	opt callstack 0
  4814  0033C0                     _tolower:
  4815                           	opt callstack 25
  4816                           
  4817                           ;incstack = 0
  4818  0033C0  0EBF               	movlw	191
  4819  0033C2  6E09               	movwf	??_tolower& (0+255),c
  4820  0033C4  0EFF               	movlw	255
  4821  0033C6  6E0A               	movwf	(??_tolower+1)& (0+255),c
  4822  0033C8  C007  F00B         	movff	tolower@c,??_tolower+2
  4823  0033CC  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4824  0033D0  5009               	movf	??_tolower,w,c
  4825  0033D2  260B               	addwf	??_tolower+2,f,c
  4826  0033D4  500A               	movf	??_tolower+1,w,c
  4827  0033D6  220C               	addwfc	??_tolower+3,f,c
  4828  0033D8  500C               	movf	??_tolower+3,w,c
  4829  0033DA  E106               	bnz	u3290
  4830  0033DC  0E1A               	movlw	26
  4831  0033DE  5C0B               	subwf	??_tolower+2,w,c
  4832  0033E0  B0D8               	btfsc	status,0,c
  4833  0033E2  D002               	goto	u3290
  4834  0033E4  0E01               	movlw	1
  4835  0033E6  D001               	goto	u3300
  4836  0033E8                     u3290:
  4837  0033E8  0E00               	movlw	0
  4838  0033EA                     u3300:
  4839  0033EA  6E0D               	movwf	_tolower$1009,c
  4840  0033EC  6A0E               	clrf	_tolower$1009+1,c
  4841  0033EE  500D               	movf	_tolower$1009,w,c
  4842  0033F0  100E               	iorwf	_tolower$1009+1,w,c
  4843  0033F2  B4D8               	btfsc	status,2,c
  4844  0033F4  D006               	goto	l1184
  4845  0033F6  0E20               	movlw	32
  4846  0033F8  1007               	iorwf	tolower@c,w,c
  4847  0033FA  6E07               	movwf	?_tolower,c
  4848  0033FC  5008               	movf	tolower@c+1,w,c
  4849  0033FE  6E08               	movwf	?_tolower+1,c
  4850  003400  0012               	return	
  4851  003402                     l1184:
  4852  003402  C007  F007         	movff	tolower@c,?_tolower
  4853  003406  C008  F008         	movff	tolower@c+1,?_tolower+1
  4854  00340A  0012               	return		;funcret
  4855  00340C                     __end_of_tolower:
  4856                           	opt callstack 0
  4857                           
  4858 ;; *************** function _isupper *****************
  4859 ;; Defined at:
  4860 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  c               2    0[COMRAM] int 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  2    0[COMRAM] int 
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4874 ;;      Params:         2       0       0       0       0       0       0       0       0
  4875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4876 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4877 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4878 ;;Total ram usage:        6 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    1
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_efgtoa
  4885 ;;		_vfpfcnvrt
  4886 ;;		_tolower
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text9
  4891  0035CA                     __ptext9:
  4892                           	opt callstack 0
  4893  0035CA                     _isupper:
  4894                           	opt callstack 25
  4895                           
  4896                           ;incstack = 0
  4897  0035CA  0EBF               	movlw	191
  4898  0035CC  6E03               	movwf	??_isupper& (0+255),c
  4899  0035CE  0EFF               	movlw	255
  4900  0035D0  6E04               	movwf	(??_isupper+1)& (0+255),c
  4901  0035D2  C001  F005         	movff	isupper@c,??_isupper+2
  4902  0035D6  C002  F006         	movff	isupper@c+1,??_isupper+3
  4903  0035DA  5003               	movf	??_isupper,w,c
  4904  0035DC  2605               	addwf	??_isupper+2,f,c
  4905  0035DE  5004               	movf	??_isupper+1,w,c
  4906  0035E0  2206               	addwfc	??_isupper+3,f,c
  4907  0035E2  5006               	movf	??_isupper+3,w,c
  4908  0035E4  E106               	bnz	u2750
  4909  0035E6  0E1A               	movlw	26
  4910  0035E8  5C05               	subwf	??_isupper+2,w,c
  4911  0035EA  B0D8               	btfsc	status,0,c
  4912  0035EC  D002               	goto	u2750
  4913  0035EE  0E01               	movlw	1
  4914  0035F0  D001               	goto	u2760
  4915  0035F2                     u2750:
  4916  0035F2  0E00               	movlw	0
  4917  0035F4                     u2760:
  4918  0035F4  6E01               	movwf	?_isupper,c
  4919  0035F6  6A02               	clrf	?_isupper+1,c
  4920  0035F8  0012               	return		;funcret
  4921  0035FA                     __end_of_isupper:
  4922                           	opt callstack 0
  4923                           
  4924 ;; *************** function _strcpy *****************
  4925 ;; Defined at:
  4926 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4929 ;;		 -> dbuf(80), 
  4930 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4931 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4932 ;;		 -> dbuf(80), 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  d               2    8[COMRAM] PTR unsigned char 
  4935 ;;		 -> dbuf(80), 
  4936 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4937 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4938 ;;		 -> dbuf(80), 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  2    0[COMRAM] PTR unsigned char 
  4941 ;; Registers used:
  4942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4948 ;;      Params:         4       0       0       0       0       0       0       0       0
  4949 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4950 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4951 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4952 ;;Total ram usage:       10 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    1
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_efgtoa
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text10
  4963  00336E                     __ptext10:
  4964                           	opt callstack 0
  4965  00336E                     _strcpy:
  4966                           	opt callstack 25
  4967                           
  4968                           ;incstack = 0
  4969  00336E  C003  F007         	movff	strcpy@src,strcpy@s
  4970  003372  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4971  003376  C001  F009         	movff	strcpy@dest,strcpy@d
  4972  00337A  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4973  00337E                     l3161:
  4974  00337E  5007               	movf	strcpy@s,w,c
  4975  003380  6E05               	movwf	??_strcpy& (0+255),c
  4976  003382  5008               	movf	strcpy@s+1,w,c
  4977  003384  6E06               	movwf	(??_strcpy+1)& (0+255),c
  4978  003386  4A07               	infsnz	strcpy@s,f,c
  4979  003388  2A08               	incf	strcpy@s+1,f,c
  4980  00338A  C005  FFF6         	movff	??_strcpy,tblptrl
  4981  00338E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4982  003392  6AF8               	clrf	tblptru,c
  4983  003394  C009  FFD9         	movff	strcpy@d,fsr2l
  4984  003398  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4985  00339C  4A09               	infsnz	strcpy@d,f,c
  4986  00339E  2A0A               	incf	strcpy@d+1,f,c
  4987  0033A0  0E07               	movlw	(high __ramtop+-1)
  4988  0033A2  64F7               	cpfsgt	tblptrh,c
  4989  0033A4  D003               	bra	u3277
  4990  0033A6  0008               	tblrd		*
  4991  0033A8  50F5               	movf	tablat,w,c
  4992  0033AA  D005               	bra	u3270
  4993  0033AC                     u3277:
  4994  0033AC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4995  0033B0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4996  0033B4  50E7               	movf	indf1,w,c
  4997  0033B6                     u3270:
  4998  0033B6  6EDF               	movwf	indf2,c
  4999  0033B8  50DF               	movf	indf2,w,c
  5000  0033BA  B4D8               	btfsc	status,2,c
  5001  0033BC  0012               	return	
  5002  0033BE  D7DF               	goto	l3161
  5003  0033C0                     __end_of_strcpy:
  5004                           	opt callstack 0
  5005                           
  5006 ;; *************** function _pad *****************
  5007 ;; Defined at:
  5008 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5011 ;;		 -> sprintf@f(6), 
  5012 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5013 ;;		 -> dbuf(80), 
  5014 ;;  p               2   20[COMRAM] int 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  w               2   25[COMRAM] int 
  5017 ;;  i               2   23[COMRAM] int 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  2   16[COMRAM] int 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5027 ;;      Params:         6       0       0       0       0       0       0       0       0
  5028 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5029 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5030 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5031 ;;Total ram usage:       11 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    4
  5034 ;; This function calls:
  5035 ;;		_fputc
  5036 ;;		_fputs
  5037 ;;		_strlen
  5038 ;; This function is called by:
  5039 ;;		_efgtoa
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text11
  5044  00302C                     __ptext11:
  5045                           	opt callstack 0
  5046  00302C                     _pad:
  5047                           	opt callstack 22
  5048                           
  5049                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  5050                           
  5051                           ;incstack = 0
  5052  00302C  0100               	movlb	0	; () banked
  5053  00302E  A1EF               	btfss	_flags& (0+255),0,b
  5054  003030  D00A               	goto	l3119
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  5058  003032  C013  F00A         	movff	pad@buf,fputs@s
  5059  003036  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5060  00303A  C011  F00C         	movff	pad@fp,fputs@fp
  5061  00303E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5062  003042  EC95  F01A         	call	_fputs	;wreg free
  5063  003046                     l3119:
  5064                           
  5065                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  5066  003046  BE16               	btfsc	pad@p+1,7,c
  5067  003048  D005               	goto	l3123
  5068  00304A  C015  F01A         	movff	pad@p,pad@w
  5069  00304E  C016  F01B         	movff	pad@p+1,pad@w+1
  5070  003052  D004               	goto	l210
  5071  003054                     l3123:
  5072  003054  0E00               	movlw	0
  5073  003056  6E1B               	movwf	pad@w+1,c
  5074  003058  0E00               	movlw	0
  5075  00305A  6E1A               	movwf	pad@w,c
  5076  00305C                     l210:
  5077                           
  5078                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  5079  00305C  0E00               	movlw	0
  5080  00305E  6E19               	movwf	pad@i+1,c
  5081  003060  0E00               	movlw	0
  5082  003062  6E18               	movwf	pad@i,c
  5083                           
  5084                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  5085  003064  D00C               	goto	l3129
  5086  003066                     l3125:
  5087                           
  5088                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  5089  003066  0E00               	movlw	0
  5090  003068  6E02               	movwf	fputc@c+1,c
  5091  00306A  0E20               	movlw	32
  5092  00306C  6E01               	movwf	fputc@c,c
  5093  00306E  C011  F003         	movff	pad@fp,fputc@fp
  5094  003072  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5095  003076  ECC6  F017         	call	_fputc	;wreg free
  5096                           
  5097                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  5098  00307A  4A18               	infsnz	pad@i,f,c
  5099  00307C  2A19               	incf	pad@i+1,f,c
  5100  00307E                     l3129:
  5101                           
  5102                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  5103  00307E  501A               	movf	pad@w,w,c
  5104  003080  5C18               	subwf	pad@i,w,c
  5105  003082  5019               	movf	pad@i+1,w,c
  5106  003084  0A80               	xorlw	128
  5107  003086  6E17               	movwf	??_pad& (0+255),c
  5108  003088  501B               	movf	pad@w+1,w,c
  5109  00308A  0A80               	xorlw	128
  5110  00308C  5817               	subwfb	??_pad& (0+255),w,c
  5111  00308E  A0D8               	btfss	status,0,c
  5112  003090  D7EA               	goto	l3125
  5113                           
  5114                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  5115  003092  0100               	movlb	0	; () banked
  5116  003094  B1EF               	btfsc	_flags& (0+255),0,b
  5117  003096  D00A               	goto	l3133
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  5121  003098  C013  F00A         	movff	pad@buf,fputs@s
  5122  00309C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5123  0030A0  C011  F00C         	movff	pad@fp,fputs@fp
  5124  0030A4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5125  0030A8  EC95  F01A         	call	_fputs	;wreg free
  5126  0030AC                     l3133:
  5127                           
  5128                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  5129  0030AC  C013  F001         	movff	pad@buf,strlen@s
  5130  0030B0  C014  F002         	movff	pad@buf+1,strlen@s+1
  5131  0030B4  EC44  F01B         	call	_strlen	;wreg free
  5132  0030B8  501A               	movf	pad@w,w,c
  5133  0030BA  2401               	addwf	?_strlen,w,c
  5134  0030BC  6E11               	movwf	?_pad,c
  5135  0030BE  501B               	movf	pad@w+1,w,c
  5136  0030C0  2002               	addwfc	?_strlen+1,w,c
  5137  0030C2  6E12               	movwf	?_pad+1,c
  5138  0030C4  0012               	return		;funcret
  5139  0030C6                     __end_of_pad:
  5140                           	opt callstack 0
  5141                           
  5142 ;; *************** function _strlen *****************
  5143 ;; Defined at:
  5144 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5147 ;;		 -> dbuf(80), 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5150 ;;		 -> dbuf(80), 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  2    0[COMRAM] unsigned int 
  5153 ;; Registers used:
  5154 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5160 ;;      Params:         2       0       0       0       0       0       0       0       0
  5161 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5163 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5164 ;;Total ram usage:        4 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_pad
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text12
  5175  003688                     __ptext12:
  5176                           	opt callstack 0
  5177  003688                     _strlen:
  5178                           	opt callstack 24
  5179                           
  5180                           ;incstack = 0
  5181  003688  C001  F003         	movff	strlen@s,strlen@a
  5182  00368C  C002  F004         	movff	strlen@s+1,strlen@a+1
  5183  003690  D002               	goto	l2903
  5184  003692                     l2901:
  5185  003692  4A01               	infsnz	strlen@s,f,c
  5186  003694  2A02               	incf	strlen@s+1,f,c
  5187  003696                     l2903:
  5188  003696  C001  FFD9         	movff	strlen@s,fsr2l
  5189  00369A  C002  FFDA         	movff	strlen@s+1,fsr2h
  5190  00369E  50DF               	movf	indf2,w,c
  5191  0036A0  A4D8               	btfss	status,2,c
  5192  0036A2  D7F7               	goto	l2901
  5193  0036A4  5003               	movf	strlen@a,w,c
  5194  0036A6  5C01               	subwf	strlen@s,w,c
  5195  0036A8  6E01               	movwf	?_strlen,c
  5196  0036AA  5004               	movf	strlen@a+1,w,c
  5197  0036AC  5802               	subwfb	strlen@s+1,w,c
  5198  0036AE  6E02               	movwf	?_strlen+1,c
  5199  0036B0  0012               	return		;funcret
  5200  0036B2                     __end_of_strlen:
  5201                           	opt callstack 0
  5202                           
  5203 ;; *************** function _fputs *****************
  5204 ;; Defined at:
  5205 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5208 ;;		 -> dbuf(80), 
  5209 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5210 ;;		 -> sprintf@f(6), 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  i               2   14[COMRAM] int 
  5213 ;;  c               1   13[COMRAM] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  2    9[COMRAM] int 
  5216 ;; Registers used:
  5217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5223 ;;      Params:         4       0       0       0       0       0       0       0       0
  5224 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5226 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5227 ;;Total ram usage:        7 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    3
  5230 ;; This function calls:
  5231 ;;		_fputc
  5232 ;; This function is called by:
  5233 ;;		_pad
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text13
  5238  00352A                     __ptext13:
  5239                           	opt callstack 0
  5240  00352A                     _fputs:
  5241                           	opt callstack 22
  5242                           
  5243                           ;incstack = 0
  5244  00352A  0E00               	movlw	0
  5245  00352C  6E10               	movwf	fputs@i+1,c
  5246  00352E  0E00               	movlw	0
  5247  003530  6E0F               	movwf	fputs@i,c
  5248  003532  D00B               	goto	l2897
  5249  003534                     l2893:
  5250  003534  C00E  F001         	movff	fputs@c,fputc@c
  5251  003538  6A02               	clrf	fputc@c+1,c
  5252  00353A  C00C  F003         	movff	fputs@fp,fputc@fp
  5253  00353E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5254  003542  ECC6  F017         	call	_fputc	;wreg free
  5255  003546  4A0F               	infsnz	fputs@i,f,c
  5256  003548  2A10               	incf	fputs@i+1,f,c
  5257  00354A                     l2897:
  5258  00354A  500F               	movf	fputs@i,w,c
  5259  00354C  240A               	addwf	fputs@s,w,c
  5260  00354E  6ED9               	movwf	fsr2l,c
  5261  003550  5010               	movf	fputs@i+1,w,c
  5262  003552  200B               	addwfc	fputs@s+1,w,c
  5263  003554  6EDA               	movwf	fsr2h,c
  5264  003556  50DF               	movf	indf2,w,c
  5265  003558  6E0E               	movwf	fputs@c,c
  5266  00355A  500E               	movf	fputs@c,w,c
  5267  00355C  B4D8               	btfsc	status,2,c
  5268  00355E  0012               	return	
  5269  003560  D7E9               	goto	l2893
  5270  003562                     __end_of_fputs:
  5271                           	opt callstack 0
  5272                           
  5273 ;; *************** function _fputc *****************
  5274 ;; Defined at:
  5275 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;  c               2    0[COMRAM] int 
  5278 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5279 ;;		 -> sprintf@f(6), 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  2    0[COMRAM] int 
  5284 ;; Registers used:
  5285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5291 ;;      Params:         4       0       0       0       0       0       0       0       0
  5292 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5293 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5294 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5295 ;;Total ram usage:        9 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    2
  5298 ;; This function calls:
  5299 ;;		_putch
  5300 ;; This function is called by:
  5301 ;;		_pad
  5302 ;;		_vfpfcnvrt
  5303 ;;		_fputs
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           	psect	text14
  5308  002F8C                     __ptext14:
  5309                           	opt callstack 0
  5310  002F8C                     _fputc:
  5311                           	opt callstack 25
  5312                           
  5313                           ;incstack = 0
  5314  002F8C  5003               	movf	fputc@fp,w,c
  5315  002F8E  1004               	iorwf	fputc@fp+1,w,c
  5316  002F90  B4D8               	btfsc	status,2,c
  5317  002F92  D004               	goto	u2700
  5318  002F94  5003               	movf	fputc@fp,w,c
  5319  002F96  1004               	iorwf	fputc@fp+1,w,c
  5320  002F98  A4D8               	btfss	status,2,c
  5321  002F9A  D004               	goto	l2883
  5322  002F9C                     u2700:
  5323  002F9C  5001               	movf	fputc@c,w,c
  5324  002F9E  ECD4  F01B         	call	_putch
  5325  002FA2  0012               	return	
  5326  002FA4                     l2883:
  5327  002FA4  EE20 F004          	lfsr	2,4
  5328  002FA8  5003               	movf	fputc@fp,w,c
  5329  002FAA  26D9               	addwf	fsr2l,f,c
  5330  002FAC  5004               	movf	fputc@fp+1,w,c
  5331  002FAE  22DA               	addwfc	fsr2h,f,c
  5332  002FB0  50DE               	movf	postinc2,w,c
  5333  002FB2  10DE               	iorwf	postinc2,w,c
  5334  002FB4  B4D8               	btfsc	status,2,c
  5335  002FB6  D016               	goto	u2720
  5336  002FB8  EE20 F004          	lfsr	2,4
  5337  002FBC  5003               	movf	fputc@fp,w,c
  5338  002FBE  26D9               	addwf	fsr2l,f,c
  5339  002FC0  5004               	movf	fputc@fp+1,w,c
  5340  002FC2  22DA               	addwfc	fsr2h,f,c
  5341  002FC4  EE10 F002          	lfsr	1,2
  5342  002FC8  5003               	movf	fputc@fp,w,c
  5343  002FCA  26E1               	addwf	fsr1l,f,c
  5344  002FCC  5004               	movf	fputc@fp+1,w,c
  5345  002FCE  22E2               	addwfc	fsr1h,f,c
  5346  002FD0  50DE               	movf	postinc2,w,c
  5347  002FD2  5CE6               	subwf	postinc1,w,c
  5348  002FD4  50E6               	movf	postinc1,w,c
  5349  002FD6  0A80               	xorlw	128
  5350  002FD8  6E09               	movwf	(??_fputc+4)& (0+255),c
  5351  002FDA  50DE               	movf	postinc2,w,c
  5352  002FDC  0A80               	xorlw	128
  5353  002FDE  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  5354  002FE0  B0D8               	btfsc	status,0,c
  5355  002FE2  0012               	return	
  5356  002FE4                     u2720:
  5357  002FE4  EE20 F002          	lfsr	2,2
  5358  002FE8  5003               	movf	fputc@fp,w,c
  5359  002FEA  26D9               	addwf	fsr2l,f,c
  5360  002FEC  5004               	movf	fputc@fp+1,w,c
  5361  002FEE  22DA               	addwfc	fsr2h,f,c
  5362  002FF0  CFDE F005          	movff	postinc2,??_fputc
  5363  002FF4  CFDD F006          	movff	postdec2,??_fputc+1
  5364  002FF8  C003  FFD9         	movff	fputc@fp,fsr2l
  5365  002FFC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5366  003000  CFDE F007          	movff	postinc2,??_fputc+2
  5367  003004  CFDD F008          	movff	postdec2,??_fputc+3
  5368  003008  5005               	movf	??_fputc,w,c
  5369  00300A  2407               	addwf	??_fputc+2,w,c
  5370  00300C  6ED9               	movwf	fsr2l,c
  5371  00300E  5006               	movf	??_fputc+1,w,c
  5372  003010  2008               	addwfc	??_fputc+3,w,c
  5373  003012  6EDA               	movwf	fsr2h,c
  5374  003014  C001  FFDF         	movff	fputc@c,indf2
  5375  003018  EE20 F002          	lfsr	2,2
  5376  00301C  5003               	movf	fputc@fp,w,c
  5377  00301E  26D9               	addwf	fsr2l,f,c
  5378  003020  5004               	movf	fputc@fp+1,w,c
  5379  003022  22DA               	addwfc	fsr2h,f,c
  5380  003024  2ADE               	incf	postinc2,f,c
  5381  003026  0E00               	movlw	0
  5382  003028  22DD               	addwfc	postdec2,f,c
  5383  00302A  0012               	return		;funcret
  5384  00302C                     __end_of_fputc:
  5385                           	opt callstack 0
  5386                           
  5387 ;; *************** function _putch *****************
  5388 ;; Defined at:
  5389 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  c               1    wreg     unsigned char 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  c               1    0[COMRAM] unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0
  5404 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5406 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5407 ;;Total ram usage:        0 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_fputc
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text15
  5418  0037A8                     __ptext15:
  5419                           	opt callstack 0
  5420  0037A8                     _putch:
  5421                           	opt callstack 25
  5422                           
  5423                           ;incstack = 0
  5424  0037A8  0012               	return		;funcret
  5425  0037AA                     __end_of_putch:
  5426                           	opt callstack 0
  5427                           
  5428 ;; *************** function _floorf *****************
  5429 ;; Defined at:
  5430 ;;		line 3 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  x               4   76[COMRAM] float 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;  u               4    6[BANK0 ] struct .
  5435 ;;  m               4    0[BANK0 ] unsigned long 
  5436 ;;  e               2    4[BANK0 ] int 
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  4   76[COMRAM] float 
  5439 ;; Registers used:
  5440 ;;		wreg, status,2, status,0
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5446 ;;      Params:         4       0       0       0       0       0       0       0       0
  5447 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5448 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5449 ;;      Totals:        10      10       0       0       0       0       0       0       0
  5450 ;;Total ram usage:       20 bytes
  5451 ;; Hardware stack levels used:    1
  5452 ;; Hardware stack levels required when called:    1
  5453 ;; This function calls:
  5454 ;;		Nothing
  5455 ;; This function is called by:
  5456 ;;		_efgtoa
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text16
  5461  002858                     __ptext16:
  5462                           	opt callstack 0
  5463  002858                     _floorf:
  5464                           	opt callstack 25
  5465                           
  5466                           ;incstack = 0
  5467  002858  C107  F066         	movff	floorf@F524,floorf@u
  5468  00285C  C108  F067         	movff	floorf@F524+1,floorf@u+1
  5469  002860  C109  F068         	movff	floorf@F524+2,floorf@u+2
  5470  002864  C10A  F069         	movff	floorf@F524+3,floorf@u+3
  5471  002868  C04D  F066         	movff	floorf@x,floorf@u
  5472  00286C  C04E  F067         	movff	floorf@x+1,floorf@u+1
  5473  002870  C04F  F068         	movff	floorf@x+2,floorf@u+2
  5474  002874  C050  F069         	movff	floorf@x+3,floorf@u+3
  5475  002878  0E81               	movlw	129
  5476  00287A  6E51               	movwf	??_floorf& (0+255),c
  5477  00287C  0EFF               	movlw	255
  5478  00287E  6E52               	movwf	(??_floorf+1)& (0+255),c
  5479  002880  C066  F053         	movff	floorf@u,??_floorf+2
  5480  002884  C067  F054         	movff	floorf@u+1,??_floorf+3
  5481  002888  C068  F055         	movff	floorf@u+2,??_floorf+4
  5482  00288C  C069  F056         	movff	floorf@u+3,??_floorf+5
  5483  002890  0E18               	movlw	24
  5484  002892  D005               	goto	u3320
  5485  002894                     u3325:
  5486  002894  90D8               	bcf	status,0,c
  5487  002896  3256               	rrcf	??_floorf+5,f,c
  5488  002898  3255               	rrcf	??_floorf+4,f,c
  5489  00289A  3254               	rrcf	??_floorf+3,f,c
  5490  00289C  3253               	rrcf	??_floorf+2,f,c
  5491  00289E                     u3320:
  5492  00289E  2EE8               	decfsz	wreg,f,c
  5493  0028A0  D7F9               	goto	u3325
  5494  0028A2  5053               	movf	??_floorf+2,w,c
  5495  0028A4  2451               	addwf	??_floorf,w,c
  5496  0028A6  0100               	movlb	0	; () banked
  5497  0028A8  6F64               	movwf	floorf@e& (0+255),b
  5498  0028AA  0E00               	movlw	0
  5499  0028AC  2052               	addwfc	??_floorf+1,w,c
  5500  0028AE  6F65               	movwf	(floorf@e+1)& (0+255),b
  5501  0028B0  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  5502  0028B2  D00F               	goto	l3179
  5503  0028B4  5165               	movf	(floorf@e+1)& (0+255),w,b
  5504  0028B6  E104               	bnz	u3330
  5505  0028B8  0E17               	movlw	23
  5506  0028BA  5D64               	subwf	floorf@e& (0+255),w,b
  5507  0028BC  A0D8               	btfss	status,0,c
  5508  0028BE  D009               	goto	l3179
  5509  0028C0                     u3330:
  5510                           
  5511                           ; BSR set to: 0
  5512  0028C0  C04D  F04D         	movff	floorf@x,?_floorf
  5513  0028C4  C04E  F04E         	movff	floorf@x+1,?_floorf+1
  5514  0028C8  C04F  F04F         	movff	floorf@x+2,?_floorf+2
  5515  0028CC  C050  F050         	movff	floorf@x+3,?_floorf+3
  5516  0028D0  0012               	return	
  5517  0028D2                     l3179:
  5518                           
  5519                           ; BSR set to: 0
  5520  0028D2  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  5521  0028D4  D05F               	goto	l3189
  5522                           
  5523                           ; BSR set to: 0
  5524  0028D6  C064  F051         	movff	floorf@e,??_floorf
  5525  0028DA  0EFF               	movlw	255
  5526  0028DC  6E52               	movwf	(??_floorf+1)& (0+255),c
  5527  0028DE  0EFF               	movlw	255
  5528  0028E0  6E53               	movwf	(??_floorf+2)& (0+255),c
  5529  0028E2  0E7F               	movlw	127
  5530  0028E4  6E54               	movwf	(??_floorf+3)& (0+255),c
  5531  0028E6  0E00               	movlw	0
  5532  0028E8  6E55               	movwf	(??_floorf+4)& (0+255),c
  5533  0028EA                     u3355:
  5534  0028EA  6651               	tstfsz	??_floorf,c
  5535  0028EC  D001               	goto	u3356
  5536  0028EE  D007               	goto	u3357
  5537  0028F0                     u3356:
  5538  0028F0  3455               	rlcf	??_floorf+4,w,c
  5539  0028F2  3255               	rrcf	??_floorf+4,f,c
  5540  0028F4  3254               	rrcf	??_floorf+3,f,c
  5541  0028F6  3253               	rrcf	??_floorf+2,f,c
  5542  0028F8  3252               	rrcf	??_floorf+1,f,c
  5543  0028FA  2E51               	decfsz	??_floorf,f,c
  5544  0028FC  D7F6               	goto	u3355
  5545  0028FE                     u3357:
  5546  0028FE  C052  F060         	movff	??_floorf+1,floorf@m
  5547  002902  C053  F061         	movff	??_floorf+2,floorf@m+1
  5548  002906  C054  F062         	movff	??_floorf+3,floorf@m+2
  5549  00290A  C055  F063         	movff	??_floorf+4,floorf@m+3
  5550  00290E  0100               	movlb	0	; () banked
  5551  002910  5160               	movf	floorf@m& (0+255),w,b
  5552  002912  1566               	andwf	floorf@u& (0+255),w,b
  5553  002914  6E51               	movwf	??_floorf& (0+255),c
  5554  002916  5161               	movf	(floorf@m+1)& (0+255),w,b
  5555  002918  1567               	andwf	(floorf@u+1)& (0+255),w,b
  5556  00291A  6E52               	movwf	(??_floorf+1)& (0+255),c
  5557  00291C  5162               	movf	(floorf@m+2)& (0+255),w,b
  5558  00291E  1568               	andwf	(floorf@u+2)& (0+255),w,b
  5559  002920  6E53               	movwf	(??_floorf+2)& (0+255),c
  5560  002922  5163               	movf	(floorf@m+3)& (0+255),w,b
  5561  002924  1569               	andwf	(floorf@u+3)& (0+255),w,b
  5562  002926  6E54               	movwf	(??_floorf+3)& (0+255),c
  5563  002928  5051               	movf	??_floorf,w,c
  5564  00292A  1052               	iorwf	??_floorf+1,w,c
  5565  00292C  1053               	iorwf	??_floorf+2,w,c
  5566  00292E  1054               	iorwf	??_floorf+3,w,c
  5567  002930  B4D8               	btfsc	status,2,c
  5568  002932  D7C6               	goto	u3330
  5569                           
  5570                           ; BSR set to: 0
  5571  002934  C066  F051         	movff	floorf@u,??_floorf
  5572  002938  C067  F052         	movff	floorf@u+1,??_floorf+1
  5573  00293C  C068  F053         	movff	floorf@u+2,??_floorf+2
  5574  002940  C069  F054         	movff	floorf@u+3,??_floorf+3
  5575  002944  0E20               	movlw	32
  5576  002946  D005               	goto	u3370
  5577  002948                     u3375:
  5578  002948  90D8               	bcf	status,0,c
  5579  00294A  3254               	rrcf	??_floorf+3,f,c
  5580  00294C  3253               	rrcf	??_floorf+2,f,c
  5581  00294E  3252               	rrcf	??_floorf+1,f,c
  5582  002950  3251               	rrcf	??_floorf,f,c
  5583  002952                     u3370:
  5584  002952  2EE8               	decfsz	wreg,f,c
  5585  002954  D7F9               	goto	u3375
  5586  002956  5051               	movf	??_floorf,w,c
  5587  002958  1052               	iorwf	??_floorf+1,w,c
  5588  00295A  1053               	iorwf	??_floorf+2,w,c
  5589  00295C  1054               	iorwf	??_floorf+3,w,c
  5590  00295E  B4D8               	btfsc	status,2,c
  5591  002960  D008               	goto	l1074
  5592                           
  5593                           ; BSR set to: 0
  5594  002962  5160               	movf	floorf@m& (0+255),w,b
  5595  002964  2766               	addwf	floorf@u& (0+255),f,b
  5596  002966  5161               	movf	(floorf@m+1)& (0+255),w,b
  5597  002968  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  5598  00296A  5162               	movf	(floorf@m+2)& (0+255),w,b
  5599  00296C  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  5600  00296E  5163               	movf	(floorf@m+3)& (0+255),w,b
  5601  002970  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  5602  002972                     l1074:
  5603                           
  5604                           ; BSR set to: 0
  5605  002972  1D60               	comf	floorf@m& (0+255),w,b
  5606  002974  6E51               	movwf	??_floorf& (0+255),c
  5607  002976  1D61               	comf	(floorf@m+1)& (0+255),w,b
  5608  002978  6E52               	movwf	(??_floorf+1)& (0+255),c
  5609  00297A  1D62               	comf	(floorf@m+2)& (0+255),w,b
  5610  00297C  6E53               	movwf	(??_floorf+2)& (0+255),c
  5611  00297E  1D63               	comf	(floorf@m+3)& (0+255),w,b
  5612  002980  6E54               	movwf	(??_floorf+3)& (0+255),c
  5613  002982  5051               	movf	??_floorf,w,c
  5614  002984  1766               	andwf	floorf@u& (0+255),f,b
  5615  002986  5052               	movf	??_floorf+1,w,c
  5616  002988  1767               	andwf	(floorf@u+1)& (0+255),f,b
  5617  00298A  5053               	movf	??_floorf+2,w,c
  5618  00298C  1768               	andwf	(floorf@u+2)& (0+255),f,b
  5619  00298E  5054               	movf	??_floorf+3,w,c
  5620  002990  1769               	andwf	(floorf@u+3)& (0+255),f,b
  5621  002992  D036               	goto	l3197
  5622  002994                     l3189:
  5623                           
  5624                           ; BSR set to: 0
  5625  002994  C066  F051         	movff	floorf@u,??_floorf
  5626  002998  C067  F052         	movff	floorf@u+1,??_floorf+1
  5627  00299C  C068  F053         	movff	floorf@u+2,??_floorf+2
  5628  0029A0  C069  F054         	movff	floorf@u+3,??_floorf+3
  5629  0029A4  0E20               	movlw	32
  5630  0029A6  D005               	goto	u3390
  5631  0029A8                     u3395:
  5632  0029A8  90D8               	bcf	status,0,c
  5633  0029AA  3254               	rrcf	??_floorf+3,f,c
  5634  0029AC  3253               	rrcf	??_floorf+2,f,c
  5635  0029AE  3252               	rrcf	??_floorf+1,f,c
  5636  0029B0  3251               	rrcf	??_floorf,f,c
  5637  0029B2                     u3390:
  5638  0029B2  2EE8               	decfsz	wreg,f,c
  5639  0029B4  D7F9               	goto	u3395
  5640  0029B6  5051               	movf	??_floorf,w,c
  5641  0029B8  1052               	iorwf	??_floorf+1,w,c
  5642  0029BA  1053               	iorwf	??_floorf+2,w,c
  5643  0029BC  1054               	iorwf	??_floorf+3,w,c
  5644  0029BE  A4D8               	btfss	status,2,c
  5645  0029C0  D008               	goto	l3193
  5646                           
  5647                           ; BSR set to: 0
  5648  0029C2  0E00               	movlw	0
  5649  0029C4  6F66               	movwf	floorf@u& (0+255),b
  5650  0029C6  0E00               	movlw	0
  5651  0029C8  6F67               	movwf	(floorf@u+1)& (0+255),b
  5652  0029CA  0E00               	movlw	0
  5653  0029CC  6F68               	movwf	(floorf@u+2)& (0+255),b
  5654  0029CE  0E00               	movlw	0
  5655  0029D0  D016               	goto	L8
  5656  0029D2                     l3193:
  5657                           
  5658                           ; BSR set to: 0
  5659  0029D2  90D8               	bcf	status,0,c
  5660  0029D4  3566               	rlcf	floorf@u& (0+255),w,b
  5661  0029D6  6E51               	movwf	??_floorf& (0+255),c
  5662  0029D8  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  5663  0029DA  6E52               	movwf	(??_floorf+1)& (0+255),c
  5664  0029DC  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  5665  0029DE  6E53               	movwf	(??_floorf+2)& (0+255),c
  5666  0029E0  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  5667  0029E2  6E54               	movwf	(??_floorf+3)& (0+255),c
  5668  0029E4  5051               	movf	??_floorf,w,c
  5669  0029E6  1052               	iorwf	??_floorf+1,w,c
  5670  0029E8  1053               	iorwf	??_floorf+2,w,c
  5671  0029EA  1054               	iorwf	??_floorf+3,w,c
  5672  0029EC  B4D8               	btfsc	status,2,c
  5673  0029EE  D008               	goto	l3197
  5674                           
  5675                           ; BSR set to: 0
  5676  0029F0  0E00               	movlw	0
  5677  0029F2  6F66               	movwf	floorf@u& (0+255),b
  5678  0029F4  0E00               	movlw	0
  5679  0029F6  6F67               	movwf	(floorf@u+1)& (0+255),b
  5680  0029F8  0E80               	movlw	128
  5681  0029FA  6F68               	movwf	(floorf@u+2)& (0+255),b
  5682  0029FC  0EBF               	movlw	191
  5683  0029FE                     L8:
  5684  0029FE  6F69               	movwf	(floorf@u+3)& (0+255),b
  5685  002A00                     l3197:
  5686                           
  5687                           ; BSR set to: 0
  5688  002A00  C066  F04D         	movff	floorf@u,?_floorf
  5689  002A04  C067  F04E         	movff	floorf@u+1,?_floorf+1
  5690  002A08  C068  F04F         	movff	floorf@u+2,?_floorf+2
  5691  002A0C  C069  F050         	movff	floorf@u+3,?_floorf+3
  5692                           
  5693                           ; BSR set to: 0
  5694  002A10  0012               	return		;funcret
  5695  002A12                     __end_of_floorf:
  5696                           	opt callstack 0
  5697                           
  5698 ;; *************** function ___fpclassifyf *****************
  5699 ;; Defined at:
  5700 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  x               4    0[COMRAM] float 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  u               4   10[COMRAM] struct .
  5705 ;;  e               2    8[COMRAM] int 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  2    0[COMRAM] int 
  5708 ;; Registers used:
  5709 ;;		wreg, status,2, status,0
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5715 ;;      Params:         4       0       0       0       0       0       0       0       0
  5716 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5717 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5718 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5719 ;;Total ram usage:       14 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    1
  5722 ;; This function calls:
  5723 ;;		Nothing
  5724 ;; This function is called by:
  5725 ;;		_efgtoa
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           	psect	text17
  5730  002D62                     __ptext17:
  5731                           	opt callstack 0
  5732  002D62                     ___fpclassifyf:
  5733                           	opt callstack 25
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;incstack = 0
  5737  002D62  C10B  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5738  002D66  C10C  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5739  002D6A  C10D  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5740  002D6E  C10E  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5741  002D72  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5742  002D76  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5743  002D7A  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5744  002D7E  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5745  002D82  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5746  002D86  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5747  002D8A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5748  002D8E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5749  002D92  0E18               	movlw	24
  5750  002D94  D005               	goto	u3200
  5751  002D96                     u3205:
  5752  002D96  90D8               	bcf	status,0,c
  5753  002D98  3208               	rrcf	??___fpclassifyf+3,f,c
  5754  002D9A  3207               	rrcf	??___fpclassifyf+2,f,c
  5755  002D9C  3206               	rrcf	??___fpclassifyf+1,f,c
  5756  002D9E  3205               	rrcf	??___fpclassifyf,f,c
  5757  002DA0                     u3200:
  5758  002DA0  2EE8               	decfsz	wreg,f,c
  5759  002DA2  D7F9               	goto	u3205
  5760  002DA4  5005               	movf	??___fpclassifyf,w,c
  5761  002DA6  6E09               	movwf	___fpclassifyf@e,c
  5762  002DA8  6A0A               	clrf	___fpclassifyf@e+1,c
  5763  002DAA  5009               	movf	___fpclassifyf@e,w,c
  5764  002DAC  100A               	iorwf	___fpclassifyf@e+1,w,c
  5765  002DAE  A4D8               	btfss	status,2,c
  5766  002DB0  D019               	goto	l3149
  5767  002DB2  90D8               	bcf	status,0,c
  5768  002DB4  340B               	rlcf	___fpclassifyf@u,w,c
  5769  002DB6  6E05               	movwf	??___fpclassifyf& (0+255),c
  5770  002DB8  340C               	rlcf	___fpclassifyf@u+1,w,c
  5771  002DBA  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
  5772  002DBC  340D               	rlcf	___fpclassifyf@u+2,w,c
  5773  002DBE  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
  5774  002DC0  340E               	rlcf	___fpclassifyf@u+3,w,c
  5775  002DC2  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
  5776  002DC4  5005               	movf	??___fpclassifyf,w,c
  5777  002DC6  1006               	iorwf	??___fpclassifyf+1,w,c
  5778  002DC8  1007               	iorwf	??___fpclassifyf+2,w,c
  5779  002DCA  1008               	iorwf	??___fpclassifyf+3,w,c
  5780  002DCC  A4D8               	btfss	status,2,c
  5781  002DCE  D005               	goto	l3145
  5782  002DD0  0E00               	movlw	0
  5783  002DD2  6E02               	movwf	?___fpclassifyf+1,c
  5784  002DD4  0E02               	movlw	2
  5785  002DD6  6E01               	movwf	?___fpclassifyf,c
  5786  002DD8  0012               	return	
  5787  002DDA                     l3145:
  5788  002DDA  0E00               	movlw	0
  5789  002DDC  6E02               	movwf	?___fpclassifyf+1,c
  5790  002DDE  0E03               	movlw	3
  5791  002DE0  6E01               	movwf	?___fpclassifyf,c
  5792  002DE2  0012               	return	
  5793  002DE4                     l3149:
  5794  002DE4  2809               	incf	___fpclassifyf@e,w,c
  5795  002DE6  100A               	iorwf	___fpclassifyf@e+1,w,c
  5796  002DE8  A4D8               	btfss	status,2,c
  5797  002DEA  D01C               	goto	l3155
  5798  002DEC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5799  002DF0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5800  002DF4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5801  002DF8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5802  002DFC  0E09               	movlw	9
  5803  002DFE                     u3245:
  5804  002DFE  90D8               	bcf	status,0,c
  5805  002E00  3605               	rlcf	??___fpclassifyf,f,c
  5806  002E02  3606               	rlcf	??___fpclassifyf+1,f,c
  5807  002E04  3607               	rlcf	??___fpclassifyf+2,f,c
  5808  002E06  3608               	rlcf	??___fpclassifyf+3,f,c
  5809  002E08  2EE8               	decfsz	wreg,f,c
  5810  002E0A  D7F9               	goto	u3245
  5811  002E0C  5005               	movf	??___fpclassifyf,w,c
  5812  002E0E  1006               	iorwf	??___fpclassifyf+1,w,c
  5813  002E10  1007               	iorwf	??___fpclassifyf+2,w,c
  5814  002E12  1008               	iorwf	??___fpclassifyf+3,w,c
  5815  002E14  A4D8               	btfss	status,2,c
  5816  002E16  D002               	goto	u3250
  5817  002E18  0E01               	movlw	1
  5818  002E1A  D001               	goto	u3260
  5819  002E1C                     u3250:
  5820  002E1C  0E00               	movlw	0
  5821  002E1E                     u3260:
  5822  002E1E  6E01               	movwf	?___fpclassifyf,c
  5823  002E20  6A02               	clrf	?___fpclassifyf+1,c
  5824  002E22  0012               	return	
  5825  002E24                     l3155:
  5826  002E24  0E00               	movlw	0
  5827  002E26  6E02               	movwf	?___fpclassifyf+1,c
  5828  002E28  0E04               	movlw	4
  5829  002E2A  6E01               	movwf	?___fpclassifyf,c
  5830  002E2C  0012               	return		;funcret
  5831  002E2E                     __end_of___fpclassifyf:
  5832                           	opt callstack 0
  5833                           
  5834 ;; *************** function ___fltol *****************
  5835 ;; Defined at:
  5836 ;;		line 43 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  f1              4    0[BANK0 ] int 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  exp1            1   93[COMRAM] unsigned char 
  5841 ;;  sign1           1   92[COMRAM] unsigned char 
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  4    0[BANK0 ] long 
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, status,0
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5851 ;;      Params:         0       4       0       0       0       0       0       0       0
  5852 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5853 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5854 ;;      Totals:         2       8       0       0       0       0       0       0       0
  5855 ;;Total ram usage:       10 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    1
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		_main
  5862 ;;		_efgtoa
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	text18
  5867  002E2E                     __ptext18:
  5868                           	opt callstack 0
  5869  002E2E                     ___fltol:
  5870                           	opt callstack 25
  5871                           
  5872                           ;incstack = 0
  5873  002E2E  0100               	movlb	0	; () banked
  5874  002E30  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5875  002E32  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5876  002E34  6E5E               	movwf	___fltol@exp1,c
  5877  002E36  505E               	movf	___fltol@exp1,w,c
  5878  002E38  A4D8               	btfss	status,2,c
  5879  002E3A  D009               	goto	l3617
  5880  002E3C                     u4070:
  5881                           
  5882                           ; BSR set to: 0
  5883  002E3C  0E00               	movlw	0
  5884  002E3E  6F60               	movwf	?___fltol& (0+255),b
  5885  002E40  0E00               	movlw	0
  5886  002E42  6F61               	movwf	(?___fltol+1)& (0+255),b
  5887  002E44  0E00               	movlw	0
  5888  002E46  6F62               	movwf	(?___fltol+2)& (0+255),b
  5889  002E48  0E00               	movlw	0
  5890  002E4A  6F63               	movwf	(?___fltol+3)& (0+255),b
  5891  002E4C  0012               	return	
  5892  002E4E                     l3617:
  5893                           
  5894                           ; BSR set to: 0
  5895  002E4E  C060  F064         	movff	___fltol@f1,??___fltol
  5896  002E52  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  5897  002E56  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  5898  002E5A  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  5899  002E5E  0E20               	movlw	32
  5900  002E60  D005               	goto	u4080
  5901  002E62                     u4085:
  5902  002E62  90D8               	bcf	status,0,c
  5903  002E64  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  5904  002E66  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  5905  002E68  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  5906  002E6A  3364               	rrcf	??___fltol& (0+255),f,b
  5907  002E6C                     u4080:
  5908  002E6C  2EE8               	decfsz	wreg,f,c
  5909  002E6E  D7F9               	goto	u4085
  5910  002E70  5164               	movf	??___fltol& (0+255),w,b
  5911  002E72  6E5D               	movwf	___fltol@sign1,c
  5912                           
  5913                           ; BSR set to: 0
  5914  002E74  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  5915                           
  5916                           ; BSR set to: 0
  5917  002E76  0EFF               	movlw	255
  5918  002E78  1760               	andwf	___fltol@f1& (0+255),f,b
  5919  002E7A  0EFF               	movlw	255
  5920  002E7C  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  5921  002E7E  0EFF               	movlw	255
  5922  002E80  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  5923  002E82  0E00               	movlw	0
  5924  002E84  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  5925                           
  5926                           ; BSR set to: 0
  5927  002E86  0E96               	movlw	150
  5928  002E88  5E5E               	subwf	___fltol@exp1,f,c
  5929                           
  5930                           ; BSR set to: 0
  5931  002E8A  AE5E               	btfss	___fltol@exp1,7,c
  5932  002E8C  D00D               	goto	l3637
  5933                           
  5934                           ; BSR set to: 0
  5935  002E8E  505E               	movf	___fltol@exp1,w,c
  5936  002E90  0A80               	xorlw	128
  5937  002E92  0F97               	addlw	151
  5938  002E94  A0D8               	btfss	status,0,c
  5939  002E96  D7D2               	goto	u4070
  5940  002E98                     l3633:
  5941                           
  5942                           ; BSR set to: 0
  5943  002E98  90D8               	bcf	status,0,c
  5944  002E9A  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5945  002E9C  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5946  002E9E  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5947  002EA0  3360               	rrcf	___fltol@f1& (0+255),f,b
  5948                           
  5949                           ; BSR set to: 0
  5950  002EA2  3E5E               	incfsz	___fltol@exp1,f,c
  5951  002EA4  D7F9               	goto	l3633
  5952  002EA6  D00D               	goto	u4120
  5953  002EA8                     l3637:
  5954                           
  5955                           ; BSR set to: 0
  5956  002EA8  0E1F               	movlw	31
  5957  002EAA  645E               	cpfsgt	___fltol@exp1,c
  5958  002EAC  D007               	goto	l3645
  5959  002EAE  D7C6               	goto	u4070
  5960  002EB0                     l3643:
  5961                           
  5962                           ; BSR set to: 0
  5963  002EB0  90D8               	bcf	status,0,c
  5964  002EB2  3760               	rlcf	___fltol@f1& (0+255),f,b
  5965  002EB4  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5966  002EB6  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5967  002EB8  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5968  002EBA  065E               	decf	___fltol@exp1,f,c
  5969  002EBC                     l3645:
  5970                           
  5971                           ; BSR set to: 0
  5972  002EBC  505E               	movf	___fltol@exp1,w,c
  5973  002EBE  A4D8               	btfss	status,2,c
  5974  002EC0  D7F7               	goto	l3643
  5975  002EC2                     u4120:
  5976                           
  5977                           ; BSR set to: 0
  5978  002EC2  505D               	movf	___fltol@sign1,w,c
  5979  002EC4  B4D8               	btfsc	status,2,c
  5980  002EC6  D008               	goto	l3651
  5981                           
  5982                           ; BSR set to: 0
  5983  002EC8  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  5984  002ECA  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  5985  002ECC  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  5986  002ECE  6D60               	negf	___fltol@f1& (0+255),b
  5987  002ED0  0E00               	movlw	0
  5988  002ED2  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5989  002ED4  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5990  002ED6  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5991  002ED8                     l3651:
  5992                           
  5993                           ; BSR set to: 0
  5994  002ED8  C060  F060         	movff	___fltol@f1,?___fltol
  5995  002EDC  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  5996  002EE0  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  5997  002EE4  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  5998                           
  5999                           ; BSR set to: 0
  6000  002EE8  0012               	return		;funcret
  6001  002EEA                     __end_of___fltol:
  6002                           	opt callstack 0
  6003                           
  6004 ;; *************** function ___flsub *****************
  6005 ;; Defined at:
  6006 ;;		line 245 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;  b               4    0[BANK0 ] long 
  6009 ;;  a               4    4[BANK0 ] long 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;		None
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  4    0[BANK0 ] long 
  6014 ;; Registers used:
  6015 ;;		wreg, status,2, status,0, cstack
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6021 ;;      Params:         0       8       0       0       0       0       0       0       0
  6022 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6024 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6025 ;;Total ram usage:        8 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    2
  6028 ;; This function calls:
  6029 ;;		___fladd
  6030 ;; This function is called by:
  6031 ;;		_efgtoa
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           	psect	text19
  6036  0034A4                     __ptext19:
  6037                           	opt callstack 0
  6038  0034A4                     ___flsub:
  6039                           	opt callstack 24
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;incstack = 0
  6043  0034A4  0E00               	movlw	0
  6044  0034A6  0100               	movlb	0	; () banked
  6045  0034A8  1B64               	xorwf	___flsub@a& (0+255),f,b
  6046  0034AA  0E00               	movlw	0
  6047  0034AC  1B65               	xorwf	(___flsub@a+1)& (0+255),f,b
  6048  0034AE  0E00               	movlw	0
  6049  0034B0  1B66               	xorwf	(___flsub@a+2)& (0+255),f,b
  6050  0034B2  0E80               	movlw	128
  6051  0034B4  1B67               	xorwf	(___flsub@a+3)& (0+255),f,b
  6052                           
  6053                           ; BSR set to: 0
  6054  0034B6  C060  F04D         	movff	___flsub@b,___fladd@b
  6055  0034BA  C061  F04E         	movff	___flsub@b+1,___fladd@b+1
  6056  0034BE  C062  F04F         	movff	___flsub@b+2,___fladd@b+2
  6057  0034C2  C063  F050         	movff	___flsub@b+3,___fladd@b+3
  6058  0034C6  C064  F051         	movff	___flsub@a,___fladd@a
  6059  0034CA  C065  F052         	movff	___flsub@a+1,___fladd@a+1
  6060  0034CE  C066  F053         	movff	___flsub@a+2,___fladd@a+2
  6061  0034D2  C067  F054         	movff	___flsub@a+3,___fladd@a+3
  6062  0034D6  EC62  F011         	call	___fladd	;wreg free
  6063  0034DA  C04D  F060         	movff	?___fladd,?___flsub
  6064  0034DE  C04E  F061         	movff	?___fladd+1,?___flsub+1
  6065  0034E2  C04F  F062         	movff	?___fladd+2,?___flsub+2
  6066  0034E6  C050  F063         	movff	?___fladd+3,?___flsub+3
  6067  0034EA  0012               	return		;funcret
  6068  0034EC                     __end_of___flsub:
  6069                           	opt callstack 0
  6070                           
  6071 ;; *************** function ___fladd *****************
  6072 ;; Defined at:
  6073 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  b               4   76[COMRAM] long 
  6076 ;;  a               4   80[COMRAM] long 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  grs             1   91[COMRAM] unsigned char 
  6079 ;;  bexp            1   90[COMRAM] unsigned char 
  6080 ;;  aexp            1   89[COMRAM] unsigned char 
  6081 ;;  signs           1   88[COMRAM] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  4   76[COMRAM] unsigned char 
  6084 ;; Registers used:
  6085 ;;		wreg, status,2, status,0
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6091 ;;      Params:         8       0       0       0       0       0       0       0       0
  6092 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6093 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6094 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6095 ;;Total ram usage:       16 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; Hardware stack levels required when called:    1
  6098 ;; This function calls:
  6099 ;;		Nothing
  6100 ;; This function is called by:
  6101 ;;		_main
  6102 ;;		_efgtoa
  6103 ;;		___flsub
  6104 ;;		_sqrtf
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text20
  6109  0022C4                     __ptext20:
  6110                           	opt callstack 0
  6111  0022C4                     ___fladd:
  6112                           	opt callstack 28
  6113                           
  6114                           ;incstack = 0
  6115  0022C4  5050               	movf	___fladd@b+3,w,c
  6116  0022C6  0B80               	andlw	128
  6117  0022C8  6E59               	movwf	___fladd@signs,c
  6118  0022CA  5050               	movf	___fladd@b+3,w,c
  6119  0022CC  2450               	addwf	___fladd@b+3,w,c
  6120  0022CE  6E5B               	movwf	___fladd@bexp,c
  6121  0022D0  BE4F               	btfsc	___fladd@b+2,7,c
  6122  0022D2  805B               	bsf	___fladd@bexp,0,c
  6123  0022D4  505B               	movf	___fladd@bexp,w,c
  6124  0022D6  B4D8               	btfsc	status,2,c
  6125  0022D8  D00D               	goto	l2929
  6126  0022DA  285B               	incf	___fladd@bexp,w,c
  6127  0022DC  A4D8               	btfss	status,2,c
  6128  0022DE  D008               	goto	l2925
  6129  0022E0  0E00               	movlw	0
  6130  0022E2  6E4D               	movwf	___fladd@b,c
  6131  0022E4  0E00               	movlw	0
  6132  0022E6  6E4E               	movwf	___fladd@b+1,c
  6133  0022E8  0E00               	movlw	0
  6134  0022EA  6E4F               	movwf	___fladd@b+2,c
  6135  0022EC  0E00               	movlw	0
  6136  0022EE  6E50               	movwf	___fladd@b+3,c
  6137  0022F0                     l2925:
  6138  0022F0  8E4F               	bsf	___fladd@b+2,7,c
  6139  0022F2  D006               	goto	L9
  6140  0022F4                     l2929:
  6141  0022F4  0E00               	movlw	0
  6142  0022F6  6E4D               	movwf	___fladd@b,c
  6143  0022F8  0E00               	movlw	0
  6144  0022FA  6E4E               	movwf	___fladd@b+1,c
  6145  0022FC  0E00               	movlw	0
  6146  0022FE  6E4F               	movwf	___fladd@b+2,c
  6147  002300                     L9:
  6148  002300  0E00               	movlw	0
  6149  002302  6E50               	movwf	___fladd@b+3,c
  6150  002304  5054               	movf	___fladd@a+3,w,c
  6151  002306  0B80               	andlw	128
  6152  002308  6E5A               	movwf	___fladd@aexp,c
  6153  00230A  5059               	movf	___fladd@signs,w,c
  6154  00230C  185A               	xorwf	___fladd@aexp,w,c
  6155  00230E  A4D8               	btfss	status,2,c
  6156  002310  8C59               	bsf	___fladd@signs,6,c
  6157  002312  5054               	movf	___fladd@a+3,w,c
  6158  002314  2454               	addwf	___fladd@a+3,w,c
  6159  002316  6E5A               	movwf	___fladd@aexp,c
  6160  002318  BE53               	btfsc	___fladd@a+2,7,c
  6161  00231A  805A               	bsf	___fladd@aexp,0,c
  6162  00231C  505A               	movf	___fladd@aexp,w,c
  6163  00231E  B4D8               	btfsc	status,2,c
  6164  002320  D00D               	goto	l2953
  6165  002322  285A               	incf	___fladd@aexp,w,c
  6166  002324  A4D8               	btfss	status,2,c
  6167  002326  D008               	goto	l2949
  6168  002328  0E00               	movlw	0
  6169  00232A  6E51               	movwf	___fladd@a,c
  6170  00232C  0E00               	movlw	0
  6171  00232E  6E52               	movwf	___fladd@a+1,c
  6172  002330  0E00               	movlw	0
  6173  002332  6E53               	movwf	___fladd@a+2,c
  6174  002334  0E00               	movlw	0
  6175  002336  6E54               	movwf	___fladd@a+3,c
  6176  002338                     l2949:
  6177  002338  8E53               	bsf	___fladd@a+2,7,c
  6178  00233A  D006               	goto	L10
  6179  00233C                     l2953:
  6180  00233C  0E00               	movlw	0
  6181  00233E  6E51               	movwf	___fladd@a,c
  6182  002340  0E00               	movlw	0
  6183  002342  6E52               	movwf	___fladd@a+1,c
  6184  002344  0E00               	movlw	0
  6185  002346  6E53               	movwf	___fladd@a+2,c
  6186  002348                     L10:
  6187  002348  0E00               	movlw	0
  6188  00234A  6E54               	movwf	___fladd@a+3,c
  6189  00234C  505B               	movf	___fladd@bexp,w,c
  6190  00234E  5C5A               	subwf	___fladd@aexp,w,c
  6191  002350  B0D8               	btfsc	status,0,c
  6192  002352  D022               	goto	l2991
  6193  002354  AC59               	btfss	___fladd@signs,6,c
  6194  002356  D002               	goto	l2961
  6195  002358  0E80               	movlw	128
  6196  00235A  1A59               	xorwf	___fladd@signs,f,c
  6197  00235C                     l2961:
  6198  00235C  C05B  F05C         	movff	___fladd@bexp,___fladd@grs
  6199  002360  C05A  F05B         	movff	___fladd@aexp,___fladd@bexp
  6200  002364  C05C  F05A         	movff	___fladd@grs,___fladd@aexp
  6201  002368  C04D  F05C         	movff	___fladd@b,___fladd@grs
  6202  00236C  C051  F04D         	movff	___fladd@a,___fladd@b
  6203  002370  C05C  F051         	movff	___fladd@grs,___fladd@a
  6204  002374  C04E  F05C         	movff	___fladd@b+1,___fladd@grs
  6205  002378  C052  F04E         	movff	___fladd@a+1,___fladd@b+1
  6206  00237C  C05C  F052         	movff	___fladd@grs,___fladd@a+1
  6207  002380  C04F  F05C         	movff	___fladd@b+2,___fladd@grs
  6208  002384  C053  F04F         	movff	___fladd@a+2,___fladd@b+2
  6209  002388  C05C  F053         	movff	___fladd@grs,___fladd@a+2
  6210  00238C  C050  F05C         	movff	___fladd@b+3,___fladd@grs
  6211  002390  C054  F050         	movff	___fladd@a+3,___fladd@b+3
  6212  002394  C05C  F054         	movff	___fladd@grs,___fladd@a+3
  6213  002398                     l2991:
  6214  002398  0E00               	movlw	0
  6215  00239A  6E5C               	movwf	___fladd@grs,c
  6216  00239C  505B               	movf	___fladd@bexp,w,c
  6217  00239E  C05A  F055         	movff	___fladd@aexp,??___fladd
  6218  0023A2  6A56               	clrf	(??___fladd+1)& (0+255),c
  6219  0023A4  5E55               	subwf	??___fladd,f,c
  6220  0023A6  0E00               	movlw	0
  6221  0023A8  5A56               	subwfb	??___fladd+1,f,c
  6222  0023AA  BE56               	btfsc	??___fladd+1,7,c
  6223  0023AC  D02C               	goto	l881
  6224  0023AE  5056               	movf	??___fladd+1,w,c
  6225  0023B0  E104               	bnz	u2860
  6226  0023B2  0E1A               	movlw	26
  6227  0023B4  5C55               	subwf	??___fladd,w,c
  6228  0023B6  A0D8               	btfss	status,0,c
  6229  0023B8  D026               	goto	l881
  6230  0023BA                     u2860:
  6231  0023BA  504D               	movf	___fladd@b,w,c
  6232  0023BC  104E               	iorwf	___fladd@b+1,w,c
  6233  0023BE  104F               	iorwf	___fladd@b+2,w,c
  6234  0023C0  1050               	iorwf	___fladd@b+3,w,c
  6235  0023C2  B4D8               	btfsc	status,2,c
  6236  0023C4  D002               	goto	u2870
  6237  0023C6  0E01               	movlw	1
  6238  0023C8  D001               	goto	u2880
  6239  0023CA                     u2870:
  6240  0023CA  0E00               	movlw	0
  6241  0023CC                     u2880:
  6242  0023CC  6E5C               	movwf	___fladd@grs,c
  6243  0023CE  0E00               	movlw	0
  6244  0023D0  6E4D               	movwf	___fladd@b,c
  6245  0023D2  0E00               	movlw	0
  6246  0023D4  6E4E               	movwf	___fladd@b+1,c
  6247  0023D6  0E00               	movlw	0
  6248  0023D8  6E4F               	movwf	___fladd@b+2,c
  6249  0023DA  0E00               	movlw	0
  6250  0023DC  6E50               	movwf	___fladd@b+3,c
  6251  0023DE  C05A  F05B         	movff	___fladd@aexp,___fladd@bexp
  6252  0023E2  D015               	goto	u2910
  6253  0023E4                     l882:
  6254  0023E4  A05C               	btfss	___fladd@grs,0,c
  6255  0023E6  D005               	goto	l3003
  6256  0023E8  90D8               	bcf	status,0,c
  6257  0023EA  305C               	rrcf	___fladd@grs,w,c
  6258  0023EC  0901               	iorlw	1
  6259  0023EE  6E5C               	movwf	___fladd@grs,c
  6260  0023F0  D002               	goto	l3005
  6261  0023F2                     l3003:
  6262  0023F2  90D8               	bcf	status,0,c
  6263  0023F4  325C               	rrcf	___fladd@grs,f,c
  6264  0023F6                     l3005:
  6265  0023F6  B04D               	btfsc	___fladd@b,0,c
  6266  0023F8  8E5C               	bsf	___fladd@grs,7,c
  6267  0023FA  3450               	rlcf	___fladd@b+3,w,c
  6268  0023FC  3250               	rrcf	___fladd@b+3,f,c
  6269  0023FE  324F               	rrcf	___fladd@b+2,f,c
  6270  002400  324E               	rrcf	___fladd@b+1,f,c
  6271  002402  324D               	rrcf	___fladd@b,f,c
  6272  002404  2A5B               	incf	___fladd@bexp,f,c
  6273  002406                     l881:
  6274  002406  505A               	movf	___fladd@aexp,w,c
  6275  002408  5C5B               	subwf	___fladd@bexp,w,c
  6276  00240A  A0D8               	btfss	status,0,c
  6277  00240C  D7EB               	goto	l882
  6278  00240E                     u2910:
  6279  00240E  BC59               	btfsc	___fladd@signs,6,c
  6280  002410  D028               	goto	l3037
  6281  002412  505B               	movf	___fladd@bexp,w,c
  6282  002414  A4D8               	btfss	status,2,c
  6283  002416  D009               	goto	l3019
  6284  002418  0E00               	movlw	0
  6285  00241A  6E4D               	movwf	?___fladd,c
  6286  00241C  0E00               	movlw	0
  6287  00241E  6E4E               	movwf	?___fladd+1,c
  6288  002420  0E00               	movlw	0
  6289  002422  6E4F               	movwf	?___fladd+2,c
  6290  002424  0E00               	movlw	0
  6291  002426  6E50               	movwf	?___fladd+3,c
  6292  002428  0012               	return	
  6293  00242A                     l3019:
  6294  00242A  5051               	movf	___fladd@a,w,c
  6295  00242C  264D               	addwf	___fladd@b,f,c
  6296  00242E  5052               	movf	___fladd@a+1,w,c
  6297  002430  224E               	addwfc	___fladd@b+1,f,c
  6298  002432  5053               	movf	___fladd@a+2,w,c
  6299  002434  224F               	addwfc	___fladd@b+2,f,c
  6300  002436  5054               	movf	___fladd@a+3,w,c
  6301  002438  2250               	addwfc	___fladd@b+3,f,c
  6302  00243A  A050               	btfss	___fladd@b+3,0,c
  6303  00243C  D071               	goto	u3040
  6304  00243E  A05C               	btfss	___fladd@grs,0,c
  6305  002440  D005               	goto	l3027
  6306  002442  90D8               	bcf	status,0,c
  6307  002444  305C               	rrcf	___fladd@grs,w,c
  6308  002446  0901               	iorlw	1
  6309  002448  6E5C               	movwf	___fladd@grs,c
  6310  00244A  D002               	goto	l3029
  6311  00244C                     l3027:
  6312  00244C  90D8               	bcf	status,0,c
  6313  00244E  325C               	rrcf	___fladd@grs,f,c
  6314  002450                     l3029:
  6315  002450  B04D               	btfsc	___fladd@b,0,c
  6316  002452  8E5C               	bsf	___fladd@grs,7,c
  6317  002454  3450               	rlcf	___fladd@b+3,w,c
  6318  002456  3250               	rrcf	___fladd@b+3,f,c
  6319  002458  324F               	rrcf	___fladd@b+2,f,c
  6320  00245A  324E               	rrcf	___fladd@b+1,f,c
  6321  00245C  324D               	rrcf	___fladd@b,f,c
  6322  00245E  2A5B               	incf	___fladd@bexp,f,c
  6323  002460  D05F               	goto	u3040
  6324  002462                     l3037:
  6325  002462  5051               	movf	___fladd@a,w,c
  6326  002464  5C4D               	subwf	___fladd@b,w,c
  6327  002466  5052               	movf	___fladd@a+1,w,c
  6328  002468  584E               	subwfb	___fladd@b+1,w,c
  6329  00246A  5053               	movf	___fladd@a+2,w,c
  6330  00246C  584F               	subwfb	___fladd@b+2,w,c
  6331  00246E  5050               	movf	___fladd@b+3,w,c
  6332  002470  0A80               	xorlw	128
  6333  002472  6E55               	movwf	??___fladd& (0+255),c
  6334  002474  5054               	movf	___fladd@a+3,w,c
  6335  002476  0A80               	xorlw	128
  6336  002478  5855               	subwfb	??___fladd& (0+255),w,c
  6337  00247A  B0D8               	btfsc	status,0,c
  6338  00247C  D025               	goto	l3047
  6339  00247E  504D               	movf	___fladd@b,w,c
  6340  002480  5C51               	subwf	___fladd@a,w,c
  6341  002482  6E55               	movwf	??___fladd& (0+255),c
  6342  002484  504E               	movf	___fladd@b+1,w,c
  6343  002486  5852               	subwfb	___fladd@a+1,w,c
  6344  002488  6E56               	movwf	(??___fladd+1)& (0+255),c
  6345  00248A  504F               	movf	___fladd@b+2,w,c
  6346  00248C  5853               	subwfb	___fladd@a+2,w,c
  6347  00248E  6E57               	movwf	(??___fladd+2)& (0+255),c
  6348  002490  5050               	movf	___fladd@b+3,w,c
  6349  002492  5854               	subwfb	___fladd@a+3,w,c
  6350  002494  6E58               	movwf	(??___fladd+3)& (0+255),c
  6351  002496  0EFF               	movlw	255
  6352  002498  2455               	addwf	??___fladd,w,c
  6353  00249A  6E4D               	movwf	___fladd@b,c
  6354  00249C  0EFF               	movlw	255
  6355  00249E  2056               	addwfc	??___fladd+1,w,c
  6356  0024A0  6E4E               	movwf	___fladd@b+1,c
  6357  0024A2  0EFF               	movlw	255
  6358  0024A4  2057               	addwfc	??___fladd+2,w,c
  6359  0024A6  6E4F               	movwf	___fladd@b+2,c
  6360  0024A8  0EFF               	movlw	255
  6361  0024AA  2058               	addwfc	??___fladd+3,w,c
  6362  0024AC  6E50               	movwf	___fladd@b+3,c
  6363  0024AE  0E80               	movlw	128
  6364  0024B0  1A59               	xorwf	___fladd@signs,f,c
  6365  0024B2  6C5C               	negf	___fladd@grs,c
  6366  0024B4  505C               	movf	___fladd@grs,w,c
  6367  0024B6  A4D8               	btfss	status,2,c
  6368  0024B8  D00F               	goto	l897
  6369  0024BA  0E01               	movlw	1
  6370  0024BC  264D               	addwf	___fladd@b,f,c
  6371  0024BE  0E00               	movlw	0
  6372  0024C0  224E               	addwfc	___fladd@b+1,f,c
  6373  0024C2  224F               	addwfc	___fladd@b+2,f,c
  6374  0024C4  2250               	addwfc	___fladd@b+3,f,c
  6375  0024C6  D008               	goto	l897
  6376  0024C8                     l3047:
  6377  0024C8  5051               	movf	___fladd@a,w,c
  6378  0024CA  5E4D               	subwf	___fladd@b,f,c
  6379  0024CC  5052               	movf	___fladd@a+1,w,c
  6380  0024CE  5A4E               	subwfb	___fladd@b+1,f,c
  6381  0024D0  5053               	movf	___fladd@a+2,w,c
  6382  0024D2  5A4F               	subwfb	___fladd@b+2,f,c
  6383  0024D4  5054               	movf	___fladd@a+3,w,c
  6384  0024D6  5A50               	subwfb	___fladd@b+3,f,c
  6385  0024D8                     l897:
  6386  0024D8  504D               	movf	___fladd@b,w,c
  6387  0024DA  104E               	iorwf	___fladd@b+1,w,c
  6388  0024DC  104F               	iorwf	___fladd@b+2,w,c
  6389  0024DE  1050               	iorwf	___fladd@b+3,w,c
  6390  0024E0  A4D8               	btfss	status,2,c
  6391  0024E2  D01C               	goto	l3071
  6392  0024E4  505C               	movf	___fladd@grs,w,c
  6393  0024E6  A4D8               	btfss	status,2,c
  6394  0024E8  D019               	goto	l3071
  6395  0024EA  0E00               	movlw	0
  6396  0024EC  6E4D               	movwf	?___fladd,c
  6397  0024EE  0E00               	movlw	0
  6398  0024F0  6E4E               	movwf	?___fladd+1,c
  6399  0024F2  0E00               	movlw	0
  6400  0024F4  6E4F               	movwf	?___fladd+2,c
  6401  0024F6  0E00               	movlw	0
  6402  0024F8  6E50               	movwf	?___fladd+3,c
  6403  0024FA  0012               	return	
  6404  0024FC                     l3055:
  6405  0024FC  90D8               	bcf	status,0,c
  6406  0024FE  364D               	rlcf	___fladd@b,f,c
  6407  002500  364E               	rlcf	___fladd@b+1,f,c
  6408  002502  364F               	rlcf	___fladd@b+2,f,c
  6409  002504  3650               	rlcf	___fladd@b+3,f,c
  6410  002506  BE5C               	btfsc	___fladd@grs,7,c
  6411  002508  804D               	bsf	___fladd@b,0,c
  6412  00250A  A05C               	btfss	___fladd@grs,0,c
  6413  00250C  D002               	goto	l3065
  6414  00250E  80D8               	bsf	status,0,c
  6415  002510  D001               	goto	L11
  6416  002512                     l3065:
  6417  002512  90D8               	bcf	status,0,c
  6418  002514                     L11:
  6419  002514  365C               	rlcf	___fladd@grs,f,c
  6420  002516  505B               	movf	___fladd@bexp,w,c
  6421  002518  A4D8               	btfss	status,2,c
  6422  00251A  065B               	decf	___fladd@bexp,f,c
  6423  00251C                     l3071:
  6424  00251C  AE4F               	btfss	___fladd@b+2,7,c
  6425  00251E  D7EE               	goto	l3055
  6426  002520                     u3040:
  6427  002520  0E00               	movlw	0
  6428  002522  6E5A               	movwf	___fladd@aexp,c
  6429  002524  AE5C               	btfss	___fladd@grs,7,c
  6430  002526  D00B               	goto	l906
  6431  002528  C05C  F055         	movff	___fladd@grs,??___fladd
  6432  00252C  0E7F               	movlw	127
  6433  00252E  1655               	andwf	??___fladd,f,c
  6434  002530  B4D8               	btfsc	status,2,c
  6435  002532  D003               	goto	l907
  6436  002534                     u3060:
  6437  002534  0E01               	movlw	1
  6438  002536  6E5A               	movwf	___fladd@aexp,c
  6439  002538  D002               	goto	l906
  6440  00253A                     l907:
  6441  00253A  B04D               	btfsc	___fladd@b,0,c
  6442  00253C  D7FB               	goto	u3060
  6443  00253E                     l906:
  6444  00253E  505A               	movf	___fladd@aexp,w,c
  6445  002540  B4D8               	btfsc	status,2,c
  6446  002542  D020               	goto	l3091
  6447  002544  0E01               	movlw	1
  6448  002546  264D               	addwf	___fladd@b,f,c
  6449  002548  0E00               	movlw	0
  6450  00254A  224E               	addwfc	___fladd@b+1,f,c
  6451  00254C  224F               	addwfc	___fladd@b+2,f,c
  6452  00254E  2250               	addwfc	___fladd@b+3,f,c
  6453  002550  A050               	btfss	___fladd@b+3,0,c
  6454  002552  D018               	goto	l3091
  6455  002554  C04D  F055         	movff	___fladd@b,??___fladd
  6456  002558  C04E  F056         	movff	___fladd@b+1,??___fladd+1
  6457  00255C  C04F  F057         	movff	___fladd@b+2,??___fladd+2
  6458  002560  C050  F058         	movff	___fladd@b+3,??___fladd+3
  6459  002564  3458               	rlcf	??___fladd+3,w,c
  6460  002566  3258               	rrcf	??___fladd+3,f,c
  6461  002568  3257               	rrcf	??___fladd+2,f,c
  6462  00256A  3256               	rrcf	??___fladd+1,f,c
  6463  00256C  3255               	rrcf	??___fladd,f,c
  6464  00256E  C055  F04D         	movff	??___fladd,___fladd@b
  6465  002572  C056  F04E         	movff	??___fladd+1,___fladd@b+1
  6466  002576  C057  F04F         	movff	??___fladd+2,___fladd@b+2
  6467  00257A  C058  F050         	movff	??___fladd+3,___fladd@b+3
  6468  00257E  285B               	incf	___fladd@bexp,w,c
  6469  002580  A4D8               	btfss	status,2,c
  6470  002582  2A5B               	incf	___fladd@bexp,f,c
  6471  002584                     l3091:
  6472  002584  285B               	incf	___fladd@bexp,w,c
  6473  002586  B4D8               	btfsc	status,2,c
  6474  002588  D003               	goto	u3120
  6475  00258A  505B               	movf	___fladd@bexp,w,c
  6476  00258C  A4D8               	btfss	status,2,c
  6477  00258E  D00D               	goto	l3099
  6478  002590                     u3120:
  6479  002590  0E00               	movlw	0
  6480  002592  6E4D               	movwf	___fladd@b,c
  6481  002594  0E00               	movlw	0
  6482  002596  6E4E               	movwf	___fladd@b+1,c
  6483  002598  0E00               	movlw	0
  6484  00259A  6E4F               	movwf	___fladd@b+2,c
  6485  00259C  0E00               	movlw	0
  6486  00259E  6E50               	movwf	___fladd@b+3,c
  6487  0025A0  505B               	movf	___fladd@bexp,w,c
  6488  0025A2  A4D8               	btfss	status,2,c
  6489  0025A4  D002               	goto	l3099
  6490  0025A6  0E00               	movlw	0
  6491  0025A8  6E59               	movwf	___fladd@signs,c
  6492  0025AA                     l3099:
  6493  0025AA  A05B               	btfss	___fladd@bexp,0,c
  6494  0025AC  D002               	goto	l3103
  6495  0025AE  8E4F               	bsf	___fladd@b+2,7,c
  6496  0025B0  D001               	goto	l3105
  6497  0025B2                     l3103:
  6498  0025B2  9E4F               	bcf	___fladd@b+2,7,c
  6499  0025B4                     l3105:
  6500  0025B4  90D8               	bcf	status,0,c
  6501  0025B6  305B               	rrcf	___fladd@bexp,w,c
  6502  0025B8  6E50               	movwf	___fladd@b+3,c
  6503  0025BA  BE59               	btfsc	___fladd@signs,7,c
  6504  0025BC  8E50               	bsf	___fladd@b+3,7,c
  6505  0025BE  C04D  F04D         	movff	___fladd@b,?___fladd
  6506  0025C2  C04E  F04E         	movff	___fladd@b+1,?___fladd+1
  6507  0025C6  C04F  F04F         	movff	___fladd@b+2,?___fladd+2
  6508  0025CA  C050  F050         	movff	___fladd@b+3,?___fladd+3
  6509  0025CE  0012               	return		;funcret
  6510  0025D0                     __end_of___fladd:
  6511                           	opt callstack 0
  6512                           
  6513 ;; *************** function ___flneg *****************
  6514 ;; Defined at:
  6515 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;  f1              4    0[COMRAM] unsigned char 
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;		None
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  4    0[COMRAM] unsigned char 
  6522 ;; Registers used:
  6523 ;;		wreg, status,2, status,0
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6529 ;;      Params:         4       0       0       0       0       0       0       0       0
  6530 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6532 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6533 ;;Total ram usage:        4 bytes
  6534 ;; Hardware stack levels used:    1
  6535 ;; Hardware stack levels required when called:    1
  6536 ;; This function calls:
  6537 ;;		Nothing
  6538 ;; This function is called by:
  6539 ;;		_efgtoa
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text21
  6544  00365A                     __ptext21:
  6545                           	opt callstack 0
  6546  00365A                     ___flneg:
  6547                           	opt callstack 25
  6548                           
  6549                           ;incstack = 0
  6550  00365A  5001               	movf	___flneg@f1,w,c
  6551  00365C  1002               	iorwf	___flneg@f1+1,w,c
  6552  00365E  1003               	iorwf	___flneg@f1+2,w,c
  6553  003660  1004               	iorwf	___flneg@f1+3,w,c
  6554  003662  B4D8               	btfsc	status,2,c
  6555  003664  D008               	goto	l3607
  6556  003666  0E00               	movlw	0
  6557  003668  1A01               	xorwf	___flneg@f1,f,c
  6558  00366A  0E00               	movlw	0
  6559  00366C  1A02               	xorwf	___flneg@f1+1,f,c
  6560  00366E  0E00               	movlw	0
  6561  003670  1A03               	xorwf	___flneg@f1+2,f,c
  6562  003672  0E80               	movlw	128
  6563  003674  1A04               	xorwf	___flneg@f1+3,f,c
  6564  003676                     l3607:
  6565  003676  C001  F001         	movff	___flneg@f1,?___flneg
  6566  00367A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6567  00367E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6568  003682  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6569  003686  0012               	return		;funcret
  6570  003688                     __end_of___flneg:
  6571                           	opt callstack 0
  6572                           
  6573 ;; *************** function ___flmul *****************
  6574 ;; Defined at:
  6575 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  b               4   14[COMRAM] unsigned char 
  6578 ;;  a               4   18[COMRAM] unsigned char 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  prod            4   33[COMRAM] struct .
  6581 ;;  grs             4   27[COMRAM] unsigned long 
  6582 ;;  temp            2   37[COMRAM] struct .
  6583 ;;  bexp            1   32[COMRAM] unsigned char 
  6584 ;;  aexp            1   31[COMRAM] unsigned char 
  6585 ;;  sign            1   26[COMRAM] unsigned char 
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  4   14[COMRAM] unsigned char 
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0, prodl, prodh
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6595 ;;      Params:         8       0       0       0       0       0       0       0       0
  6596 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6597 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6598 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6599 ;;Total ram usage:       25 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    1
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_main
  6606 ;;		_efgtoa
  6607 ;;		_sqrtf
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           	psect	text22
  6612  001F72                     __ptext22:
  6613                           	opt callstack 0
  6614  001F72                     ___flmul:
  6615                           	opt callstack 28
  6616                           
  6617                           ;incstack = 0
  6618  001F72  5012               	movf	___flmul@b+3,w,c
  6619  001F74  0B80               	andlw	128
  6620  001F76  6E1B               	movwf	___flmul@sign,c
  6621  001F78  5012               	movf	___flmul@b+3,w,c
  6622  001F7A  2412               	addwf	___flmul@b+3,w,c
  6623  001F7C  6E21               	movwf	___flmul@bexp,c
  6624  001F7E  BE11               	btfsc	___flmul@b+2,7,c
  6625  001F80  8021               	bsf	___flmul@bexp,0,c
  6626  001F82  5021               	movf	___flmul@bexp,w,c
  6627  001F84  B4D8               	btfsc	status,2,c
  6628  001F86  D00D               	goto	l3363
  6629  001F88  2821               	incf	___flmul@bexp,w,c
  6630  001F8A  A4D8               	btfss	status,2,c
  6631  001F8C  D008               	goto	l3361
  6632  001F8E  0E00               	movlw	0
  6633  001F90  6E0F               	movwf	___flmul@b,c
  6634  001F92  0E00               	movlw	0
  6635  001F94  6E10               	movwf	___flmul@b+1,c
  6636  001F96  0E00               	movlw	0
  6637  001F98  6E11               	movwf	___flmul@b+2,c
  6638  001F9A  0E00               	movlw	0
  6639  001F9C  6E12               	movwf	___flmul@b+3,c
  6640  001F9E                     l3361:
  6641  001F9E  8E11               	bsf	___flmul@b+2,7,c
  6642  001FA0  D008               	goto	l3365
  6643  001FA2                     l3363:
  6644  001FA2  0E00               	movlw	0
  6645  001FA4  6E0F               	movwf	___flmul@b,c
  6646  001FA6  0E00               	movlw	0
  6647  001FA8  6E10               	movwf	___flmul@b+1,c
  6648  001FAA  0E00               	movlw	0
  6649  001FAC  6E11               	movwf	___flmul@b+2,c
  6650  001FAE  0E00               	movlw	0
  6651  001FB0  6E12               	movwf	___flmul@b+3,c
  6652  001FB2                     l3365:
  6653  001FB2  5016               	movf	___flmul@a+3,w,c
  6654  001FB4  0B80               	andlw	128
  6655  001FB6  1A1B               	xorwf	___flmul@sign,f,c
  6656  001FB8  5016               	movf	___flmul@a+3,w,c
  6657  001FBA  2416               	addwf	___flmul@a+3,w,c
  6658  001FBC  6E20               	movwf	___flmul@aexp,c
  6659  001FBE  BE15               	btfsc	___flmul@a+2,7,c
  6660  001FC0  8020               	bsf	___flmul@aexp,0,c
  6661  001FC2  5020               	movf	___flmul@aexp,w,c
  6662  001FC4  B4D8               	btfsc	status,2,c
  6663  001FC6  D00D               	goto	l3381
  6664  001FC8  2820               	incf	___flmul@aexp,w,c
  6665  001FCA  A4D8               	btfss	status,2,c
  6666  001FCC  D008               	goto	l3379
  6667  001FCE  0E00               	movlw	0
  6668  001FD0  6E13               	movwf	___flmul@a,c
  6669  001FD2  0E00               	movlw	0
  6670  001FD4  6E14               	movwf	___flmul@a+1,c
  6671  001FD6  0E00               	movlw	0
  6672  001FD8  6E15               	movwf	___flmul@a+2,c
  6673  001FDA  0E00               	movlw	0
  6674  001FDC  6E16               	movwf	___flmul@a+3,c
  6675  001FDE                     l3379:
  6676  001FDE  8E15               	bsf	___flmul@a+2,7,c
  6677  001FE0  D008               	goto	l966
  6678  001FE2                     l3381:
  6679  001FE2  0E00               	movlw	0
  6680  001FE4  6E13               	movwf	___flmul@a,c
  6681  001FE6  0E00               	movlw	0
  6682  001FE8  6E14               	movwf	___flmul@a+1,c
  6683  001FEA  0E00               	movlw	0
  6684  001FEC  6E15               	movwf	___flmul@a+2,c
  6685  001FEE  0E00               	movlw	0
  6686  001FF0  6E16               	movwf	___flmul@a+3,c
  6687  001FF2                     l966:
  6688  001FF2  5020               	movf	___flmul@aexp,w,c
  6689  001FF4  B4D8               	btfsc	status,2,c
  6690  001FF6  D003               	goto	u3740
  6691  001FF8  5021               	movf	___flmul@bexp,w,c
  6692  001FFA  A4D8               	btfss	status,2,c
  6693  001FFC  D009               	goto	l3389
  6694  001FFE                     u3740:
  6695  001FFE  0E00               	movlw	0
  6696  002000  6E0F               	movwf	?___flmul,c
  6697  002002  0E00               	movlw	0
  6698  002004  6E10               	movwf	?___flmul+1,c
  6699  002006  0E00               	movlw	0
  6700  002008  6E11               	movwf	?___flmul+2,c
  6701  00200A  0E00               	movlw	0
  6702  00200C  6E12               	movwf	?___flmul+3,c
  6703  00200E  0012               	return	
  6704  002010                     l3389:
  6705  002010  5015               	movf	___flmul@a+2,w,c
  6706  002012  020F               	mulwf	___flmul@b,c
  6707  002014  CFF3 F026          	movff	prodl,___flmul@temp
  6708  002018  CFF4 F027          	movff	prodh,___flmul@temp+1
  6709  00201C  5026               	movf	___flmul@temp,w,c
  6710  00201E  6E1C               	movwf	___flmul@grs,c
  6711  002020  6A1D               	clrf	___flmul@grs+1,c
  6712  002022  6A1E               	clrf	___flmul@grs+2,c
  6713  002024  6A1F               	clrf	___flmul@grs+3,c
  6714  002026  5027               	movf	___flmul@temp+1,w,c
  6715  002028  6E22               	movwf	___flmul@prod,c
  6716  00202A  6A23               	clrf	___flmul@prod+1,c
  6717  00202C  6A24               	clrf	___flmul@prod+2,c
  6718  00202E  6A25               	clrf	___flmul@prod+3,c
  6719  002030  5014               	movf	___flmul@a+1,w,c
  6720  002032  0210               	mulwf	___flmul@b+1,c
  6721  002034  CFF3 F026          	movff	prodl,___flmul@temp
  6722  002038  CFF4 F027          	movff	prodh,___flmul@temp+1
  6723  00203C  5026               	movf	___flmul@temp,w,c
  6724  00203E  261C               	addwf	___flmul@grs,f,c
  6725  002040  0E00               	movlw	0
  6726  002042  221D               	addwfc	___flmul@grs+1,f,c
  6727  002044  221E               	addwfc	___flmul@grs+2,f,c
  6728  002046  221F               	addwfc	___flmul@grs+3,f,c
  6729  002048  5027               	movf	___flmul@temp+1,w,c
  6730  00204A  2622               	addwf	___flmul@prod,f,c
  6731  00204C  0E00               	movlw	0
  6732  00204E  2223               	addwfc	___flmul@prod+1,f,c
  6733  002050  2224               	addwfc	___flmul@prod+2,f,c
  6734  002052  2225               	addwfc	___flmul@prod+3,f,c
  6735  002054  5013               	movf	___flmul@a,w,c
  6736  002056  0211               	mulwf	___flmul@b+2,c
  6737  002058  CFF3 F026          	movff	prodl,___flmul@temp
  6738  00205C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6739  002060  5026               	movf	___flmul@temp,w,c
  6740  002062  261C               	addwf	___flmul@grs,f,c
  6741  002064  0E00               	movlw	0
  6742  002066  221D               	addwfc	___flmul@grs+1,f,c
  6743  002068  221E               	addwfc	___flmul@grs+2,f,c
  6744  00206A  221F               	addwfc	___flmul@grs+3,f,c
  6745  00206C  5027               	movf	___flmul@temp+1,w,c
  6746  00206E  2622               	addwf	___flmul@prod,f,c
  6747  002070  0E00               	movlw	0
  6748  002072  2223               	addwfc	___flmul@prod+1,f,c
  6749  002074  2224               	addwfc	___flmul@prod+2,f,c
  6750  002076  2225               	addwfc	___flmul@prod+3,f,c
  6751  002078  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6752  00207C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6753  002080  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6754  002084  6A1C               	clrf	___flmul@grs,c
  6755  002086  5013               	movf	___flmul@a,w,c
  6756  002088  0210               	mulwf	___flmul@b+1,c
  6757  00208A  CFF3 F026          	movff	prodl,___flmul@temp
  6758  00208E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6759  002092  5026               	movf	___flmul@temp,w,c
  6760  002094  261C               	addwf	___flmul@grs,f,c
  6761  002096  5027               	movf	___flmul@temp+1,w,c
  6762  002098  221D               	addwfc	___flmul@grs+1,f,c
  6763  00209A  0E00               	movlw	0
  6764  00209C  221E               	addwfc	___flmul@grs+2,f,c
  6765  00209E  0E00               	movlw	0
  6766  0020A0  221F               	addwfc	___flmul@grs+3,f,c
  6767  0020A2  5014               	movf	___flmul@a+1,w,c
  6768  0020A4  020F               	mulwf	___flmul@b,c
  6769  0020A6  CFF3 F026          	movff	prodl,___flmul@temp
  6770  0020AA  CFF4 F027          	movff	prodh,___flmul@temp+1
  6771  0020AE  5026               	movf	___flmul@temp,w,c
  6772  0020B0  261C               	addwf	___flmul@grs,f,c
  6773  0020B2  5027               	movf	___flmul@temp+1,w,c
  6774  0020B4  221D               	addwfc	___flmul@grs+1,f,c
  6775  0020B6  0E00               	movlw	0
  6776  0020B8  221E               	addwfc	___flmul@grs+2,f,c
  6777  0020BA  0E00               	movlw	0
  6778  0020BC  221F               	addwfc	___flmul@grs+3,f,c
  6779  0020BE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6780  0020C2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6781  0020C6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6782  0020CA  6A1C               	clrf	___flmul@grs,c
  6783  0020CC  5013               	movf	___flmul@a,w,c
  6784  0020CE  020F               	mulwf	___flmul@b,c
  6785  0020D0  CFF3 F026          	movff	prodl,___flmul@temp
  6786  0020D4  CFF4 F027          	movff	prodh,___flmul@temp+1
  6787  0020D8  5026               	movf	___flmul@temp,w,c
  6788  0020DA  261C               	addwf	___flmul@grs,f,c
  6789  0020DC  5027               	movf	___flmul@temp+1,w,c
  6790  0020DE  221D               	addwfc	___flmul@grs+1,f,c
  6791  0020E0  0E00               	movlw	0
  6792  0020E2  221E               	addwfc	___flmul@grs+2,f,c
  6793  0020E4  0E00               	movlw	0
  6794  0020E6  221F               	addwfc	___flmul@grs+3,f,c
  6795  0020E8  5015               	movf	___flmul@a+2,w,c
  6796  0020EA  0210               	mulwf	___flmul@b+1,c
  6797  0020EC  CFF3 F026          	movff	prodl,___flmul@temp
  6798  0020F0  CFF4 F027          	movff	prodh,___flmul@temp+1
  6799  0020F4  5026               	movf	___flmul@temp,w,c
  6800  0020F6  2622               	addwf	___flmul@prod,f,c
  6801  0020F8  5027               	movf	___flmul@temp+1,w,c
  6802  0020FA  2223               	addwfc	___flmul@prod+1,f,c
  6803  0020FC  0E00               	movlw	0
  6804  0020FE  2224               	addwfc	___flmul@prod+2,f,c
  6805  002100  0E00               	movlw	0
  6806  002102  2225               	addwfc	___flmul@prod+3,f,c
  6807  002104  5014               	movf	___flmul@a+1,w,c
  6808  002106  0211               	mulwf	___flmul@b+2,c
  6809  002108  CFF3 F026          	movff	prodl,___flmul@temp
  6810  00210C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6811  002110  5026               	movf	___flmul@temp,w,c
  6812  002112  2622               	addwf	___flmul@prod,f,c
  6813  002114  5027               	movf	___flmul@temp+1,w,c
  6814  002116  2223               	addwfc	___flmul@prod+1,f,c
  6815  002118  0E00               	movlw	0
  6816  00211A  2224               	addwfc	___flmul@prod+2,f,c
  6817  00211C  0E00               	movlw	0
  6818  00211E  2225               	addwfc	___flmul@prod+3,f,c
  6819  002120  5015               	movf	___flmul@a+2,w,c
  6820  002122  0211               	mulwf	___flmul@b+2,c
  6821  002124  CFF3 F026          	movff	prodl,___flmul@temp
  6822  002128  CFF4 F027          	movff	prodh,___flmul@temp+1
  6823  00212C  5026               	movf	___flmul@temp,w,c
  6824  00212E  6E17               	movwf	??___flmul& (0+255),c
  6825  002130  5027               	movf	___flmul@temp+1,w,c
  6826  002132  6E18               	movwf	(??___flmul+1)& (0+255),c
  6827  002134  6A19               	clrf	(??___flmul+2)& (0+255),c
  6828  002136  6A1A               	clrf	(??___flmul+3)& (0+255),c
  6829  002138  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6830  00213C  C018  F019         	movff	??___flmul+1,??___flmul+2
  6831  002140  C017  F018         	movff	??___flmul,??___flmul+1
  6832  002144  6A17               	clrf	??___flmul,c
  6833  002146  5017               	movf	??___flmul,w,c
  6834  002148  2622               	addwf	___flmul@prod,f,c
  6835  00214A  5018               	movf	??___flmul+1,w,c
  6836  00214C  2223               	addwfc	___flmul@prod+1,f,c
  6837  00214E  5019               	movf	??___flmul+2,w,c
  6838  002150  2224               	addwfc	___flmul@prod+2,f,c
  6839  002152  501A               	movf	??___flmul+3,w,c
  6840  002154  2225               	addwfc	___flmul@prod+3,f,c
  6841  002156  C01C  F017         	movff	___flmul@grs,??___flmul
  6842  00215A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6843  00215E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6844  002162  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6845  002166  0E19               	movlw	25
  6846  002168  D005               	goto	u3750
  6847  00216A                     u3755:
  6848  00216A  90D8               	bcf	status,0,c
  6849  00216C  321A               	rrcf	??___flmul+3,f,c
  6850  00216E  3219               	rrcf	??___flmul+2,f,c
  6851  002170  3218               	rrcf	??___flmul+1,f,c
  6852  002172  3217               	rrcf	??___flmul,f,c
  6853  002174                     u3750:
  6854  002174  2EE8               	decfsz	wreg,f,c
  6855  002176  D7F9               	goto	u3755
  6856  002178  5017               	movf	??___flmul,w,c
  6857  00217A  2622               	addwf	___flmul@prod,f,c
  6858  00217C  5018               	movf	??___flmul+1,w,c
  6859  00217E  2223               	addwfc	___flmul@prod+1,f,c
  6860  002180  5019               	movf	??___flmul+2,w,c
  6861  002182  2224               	addwfc	___flmul@prod+2,f,c
  6862  002184  501A               	movf	??___flmul+3,w,c
  6863  002186  2225               	addwfc	___flmul@prod+3,f,c
  6864  002188  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6865  00218C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6866  002190  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6867  002194  6A1C               	clrf	___flmul@grs,c
  6868  002196  5020               	movf	___flmul@aexp,w,c
  6869  002198  C021  F017         	movff	___flmul@bexp,??___flmul
  6870  00219C  6A18               	clrf	(??___flmul+1)& (0+255),c
  6871  00219E  2617               	addwf	??___flmul,f,c
  6872  0021A0  0E00               	movlw	0
  6873  0021A2  2218               	addwfc	??___flmul+1,f,c
  6874  0021A4  0E82               	movlw	130
  6875  0021A6  2417               	addwf	??___flmul,w,c
  6876  0021A8  6E26               	movwf	___flmul@temp,c
  6877  0021AA  0EFF               	movlw	255
  6878  0021AC  2018               	addwfc	??___flmul+1,w,c
  6879  0021AE  6E27               	movwf	___flmul@temp+1,c
  6880  0021B0  D00F               	goto	l3437
  6881  0021B2                     l3431:
  6882  0021B2  90D8               	bcf	status,0,c
  6883  0021B4  3622               	rlcf	___flmul@prod,f,c
  6884  0021B6  3623               	rlcf	___flmul@prod+1,f,c
  6885  0021B8  3624               	rlcf	___flmul@prod+2,f,c
  6886  0021BA  3625               	rlcf	___flmul@prod+3,f,c
  6887  0021BC  BE1F               	btfsc	___flmul@grs+3,7,c
  6888  0021BE  8022               	bsf	___flmul@prod,0,c
  6889  0021C0  90D8               	bcf	status,0,c
  6890  0021C2  361C               	rlcf	___flmul@grs,f,c
  6891  0021C4  361D               	rlcf	___flmul@grs+1,f,c
  6892  0021C6  361E               	rlcf	___flmul@grs+2,f,c
  6893  0021C8  361F               	rlcf	___flmul@grs+3,f,c
  6894  0021CA  0626               	decf	___flmul@temp,f,c
  6895  0021CC  A0D8               	btfss	status,0,c
  6896  0021CE  0627               	decf	___flmul@temp+1,f,c
  6897  0021D0                     l3437:
  6898  0021D0  AE24               	btfss	___flmul@prod+2,7,c
  6899  0021D2  D7EF               	goto	l3431
  6900  0021D4  0E00               	movlw	0
  6901  0021D6  6E20               	movwf	___flmul@aexp,c
  6902  0021D8  AE1F               	btfss	___flmul@grs+3,7,c
  6903  0021DA  D017               	goto	l975
  6904  0021DC  0EFF               	movlw	255
  6905  0021DE  141C               	andwf	___flmul@grs,w,c
  6906  0021E0  6E17               	movwf	??___flmul& (0+255),c
  6907  0021E2  0EFF               	movlw	255
  6908  0021E4  141D               	andwf	___flmul@grs+1,w,c
  6909  0021E6  6E18               	movwf	(??___flmul+1)& (0+255),c
  6910  0021E8  0EFF               	movlw	255
  6911  0021EA  141E               	andwf	___flmul@grs+2,w,c
  6912  0021EC  6E19               	movwf	(??___flmul+2)& (0+255),c
  6913  0021EE  0E7F               	movlw	127
  6914  0021F0  141F               	andwf	___flmul@grs+3,w,c
  6915  0021F2  6E1A               	movwf	(??___flmul+3)& (0+255),c
  6916  0021F4  5017               	movf	??___flmul,w,c
  6917  0021F6  1018               	iorwf	??___flmul+1,w,c
  6918  0021F8  1019               	iorwf	??___flmul+2,w,c
  6919  0021FA  101A               	iorwf	??___flmul+3,w,c
  6920  0021FC  B4D8               	btfsc	status,2,c
  6921  0021FE  D003               	goto	l976
  6922  002200                     u3790:
  6923  002200  0E01               	movlw	1
  6924  002202  6E20               	movwf	___flmul@aexp,c
  6925  002204  D002               	goto	l975
  6926  002206                     l976:
  6927  002206  B022               	btfsc	___flmul@prod,0,c
  6928  002208  D7FB               	goto	u3790
  6929  00220A                     l975:
  6930  00220A  5020               	movf	___flmul@aexp,w,c
  6931  00220C  B4D8               	btfsc	status,2,c
  6932  00220E  D01F               	goto	l3457
  6933  002210  0E01               	movlw	1
  6934  002212  2622               	addwf	___flmul@prod,f,c
  6935  002214  0E00               	movlw	0
  6936  002216  2223               	addwfc	___flmul@prod+1,f,c
  6937  002218  2224               	addwfc	___flmul@prod+2,f,c
  6938  00221A  2225               	addwfc	___flmul@prod+3,f,c
  6939  00221C  A025               	btfss	___flmul@prod+3,0,c
  6940  00221E  D017               	goto	l3457
  6941  002220  C022  F017         	movff	___flmul@prod,??___flmul
  6942  002224  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6943  002228  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6944  00222C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6945  002230  341A               	rlcf	??___flmul+3,w,c
  6946  002232  321A               	rrcf	??___flmul+3,f,c
  6947  002234  3219               	rrcf	??___flmul+2,f,c
  6948  002236  3218               	rrcf	??___flmul+1,f,c
  6949  002238  3217               	rrcf	??___flmul,f,c
  6950  00223A  C017  F022         	movff	??___flmul,___flmul@prod
  6951  00223E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6952  002242  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6953  002246  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6954  00224A  4A26               	infsnz	___flmul@temp,f,c
  6955  00224C  2A27               	incf	___flmul@temp+1,f,c
  6956  00224E                     l3457:
  6957  00224E  BE27               	btfsc	___flmul@temp+1,7,c
  6958  002250  D00D               	goto	l3461
  6959  002252  5027               	movf	___flmul@temp+1,w,c
  6960  002254  E103               	bnz	u3830
  6961  002256  2826               	incf	___flmul@temp,w,c
  6962  002258  A0D8               	btfss	status,0,c
  6963  00225A  D008               	goto	l3461
  6964  00225C                     u3830:
  6965  00225C  0E00               	movlw	0
  6966  00225E  6E22               	movwf	___flmul@prod,c
  6967  002260  0E00               	movlw	0
  6968  002262  6E23               	movwf	___flmul@prod+1,c
  6969  002264  0E80               	movlw	128
  6970  002266  6E24               	movwf	___flmul@prod+2,c
  6971  002268  0E7F               	movlw	127
  6972  00226A  D020               	goto	L12
  6973  00226C                     l3461:
  6974  00226C  BE27               	btfsc	___flmul@temp+1,7,c
  6975  00226E  D005               	goto	u3840
  6976  002270  5027               	movf	___flmul@temp+1,w,c
  6977  002272  E10E               	bnz	l983
  6978  002274  0426               	decf	___flmul@temp,w,c
  6979  002276  B0D8               	btfsc	status,0,c
  6980  002278  D00B               	goto	l983
  6981  00227A                     u3840:
  6982  00227A  0E00               	movlw	0
  6983  00227C  6E22               	movwf	___flmul@prod,c
  6984  00227E  0E00               	movlw	0
  6985  002280  6E23               	movwf	___flmul@prod+1,c
  6986  002282  0E00               	movlw	0
  6987  002284  6E24               	movwf	___flmul@prod+2,c
  6988  002286  0E00               	movlw	0
  6989  002288  6E25               	movwf	___flmul@prod+3,c
  6990  00228A  0E00               	movlw	0
  6991  00228C  6E1B               	movwf	___flmul@sign,c
  6992  00228E  D00F               	goto	l3473
  6993  002290                     l983:
  6994  002290  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6995  002294  0EFF               	movlw	255
  6996  002296  1622               	andwf	___flmul@prod,f,c
  6997  002298  0EFF               	movlw	255
  6998  00229A  1623               	andwf	___flmul@prod+1,f,c
  6999  00229C  0E7F               	movlw	127
  7000  00229E  1624               	andwf	___flmul@prod+2,f,c
  7001  0022A0  0E00               	movlw	0
  7002  0022A2  1625               	andwf	___flmul@prod+3,f,c
  7003  0022A4  B021               	btfsc	___flmul@bexp,0,c
  7004  0022A6  8E24               	bsf	___flmul@prod+2,7,c
  7005  0022A8  90D8               	bcf	status,0,c
  7006  0022AA  3021               	rrcf	___flmul@bexp,w,c
  7007  0022AC                     L12:
  7008  0022AC  6E25               	movwf	___flmul@prod+3,c
  7009  0022AE                     l3473:
  7010  0022AE  501B               	movf	___flmul@sign,w,c
  7011  0022B0  1225               	iorwf	___flmul@prod+3,f,c
  7012  0022B2  C022  F00F         	movff	___flmul@prod,?___flmul
  7013  0022B6  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  7014  0022BA  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  7015  0022BE  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  7016  0022C2  0012               	return		;funcret
  7017  0022C4                     __end_of___flmul:
  7018                           	opt callstack 0
  7019                           
  7020 ;; *************** function ___flge *****************
  7021 ;; Defined at:
  7022 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;  ff1             4   39[COMRAM] unsigned char 
  7025 ;;  ff2             4   43[COMRAM] unsigned char 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;		None               void
  7030 ;; Registers used:
  7031 ;;		wreg, status,2, status,0
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7037 ;;      Params:         8       0       0       0       0       0       0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7039 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7040 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7041 ;;Total ram usage:       12 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; Hardware stack levels required when called:    1
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_main
  7048 ;;		_efgtoa
  7049 ;;		_sqrtf
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           	psect	text23
  7054  002C92                     __ptext23:
  7055                           	opt callstack 0
  7056  002C92                     ___flge:
  7057                           	opt callstack 28
  7058                           
  7059                           ;incstack = 0
  7060  002C92  0E00               	movlw	0
  7061  002C94  1428               	andwf	___flge@ff1,w,c
  7062  002C96  6E30               	movwf	??___flge& (0+255),c
  7063  002C98  0E00               	movlw	0
  7064  002C9A  1429               	andwf	___flge@ff1+1,w,c
  7065  002C9C  6E31               	movwf	(??___flge+1)& (0+255),c
  7066  002C9E  0E80               	movlw	128
  7067  002CA0  142A               	andwf	___flge@ff1+2,w,c
  7068  002CA2  6E32               	movwf	(??___flge+2)& (0+255),c
  7069  002CA4  0E7F               	movlw	127
  7070  002CA6  142B               	andwf	___flge@ff1+3,w,c
  7071  002CA8  6E33               	movwf	(??___flge+3)& (0+255),c
  7072  002CAA  5030               	movf	??___flge,w,c
  7073  002CAC  1031               	iorwf	??___flge+1,w,c
  7074  002CAE  1032               	iorwf	??___flge+2,w,c
  7075  002CB0  1033               	iorwf	??___flge+3,w,c
  7076  002CB2  A4D8               	btfss	status,2,c
  7077  002CB4  D008               	goto	l3585
  7078  002CB6  0E00               	movlw	0
  7079  002CB8  6E28               	movwf	___flge@ff1,c
  7080  002CBA  0E00               	movlw	0
  7081  002CBC  6E29               	movwf	___flge@ff1+1,c
  7082  002CBE  0E00               	movlw	0
  7083  002CC0  6E2A               	movwf	___flge@ff1+2,c
  7084  002CC2  0E00               	movlw	0
  7085  002CC4  6E2B               	movwf	___flge@ff1+3,c
  7086  002CC6                     l3585:
  7087  002CC6  0E00               	movlw	0
  7088  002CC8  142C               	andwf	___flge@ff2,w,c
  7089  002CCA  6E30               	movwf	??___flge& (0+255),c
  7090  002CCC  0E00               	movlw	0
  7091  002CCE  142D               	andwf	___flge@ff2+1,w,c
  7092  002CD0  6E31               	movwf	(??___flge+1)& (0+255),c
  7093  002CD2  0E80               	movlw	128
  7094  002CD4  142E               	andwf	___flge@ff2+2,w,c
  7095  002CD6  6E32               	movwf	(??___flge+2)& (0+255),c
  7096  002CD8  0E7F               	movlw	127
  7097  002CDA  142F               	andwf	___flge@ff2+3,w,c
  7098  002CDC  6E33               	movwf	(??___flge+3)& (0+255),c
  7099  002CDE  5030               	movf	??___flge,w,c
  7100  002CE0  1031               	iorwf	??___flge+1,w,c
  7101  002CE2  1032               	iorwf	??___flge+2,w,c
  7102  002CE4  1033               	iorwf	??___flge+3,w,c
  7103  002CE6  A4D8               	btfss	status,2,c
  7104  002CE8  D008               	goto	l3589
  7105  002CEA  0E00               	movlw	0
  7106  002CEC  6E2C               	movwf	___flge@ff2,c
  7107  002CEE  0E00               	movlw	0
  7108  002CF0  6E2D               	movwf	___flge@ff2+1,c
  7109  002CF2  0E00               	movlw	0
  7110  002CF4  6E2E               	movwf	___flge@ff2+2,c
  7111  002CF6  0E00               	movlw	0
  7112  002CF8  6E2F               	movwf	___flge@ff2+3,c
  7113  002CFA                     l3589:
  7114  002CFA  AE2B               	btfss	___flge@ff1+3,7,c
  7115  002CFC  D009               	goto	l3593
  7116  002CFE  6C28               	negf	___flge@ff1,c
  7117  002D00  1E29               	comf	___flge@ff1+1,f,c
  7118  002D02  B0D8               	btfsc	status,0,c
  7119  002D04  2A29               	incf	___flge@ff1+1,f,c
  7120  002D06  1E2A               	comf	___flge@ff1+2,f,c
  7121  002D08  B0D8               	btfsc	status,0,c
  7122  002D0A  2A2A               	incf	___flge@ff1+2,f,c
  7123  002D0C  0E80               	movlw	128
  7124  002D0E  562B               	subfwb	___flge@ff1+3,f,c
  7125  002D10                     l3593:
  7126  002D10  AE2F               	btfss	___flge@ff2+3,7,c
  7127  002D12  D009               	goto	l617
  7128  002D14  6C2C               	negf	___flge@ff2,c
  7129  002D16  1E2D               	comf	___flge@ff2+1,f,c
  7130  002D18  B0D8               	btfsc	status,0,c
  7131  002D1A  2A2D               	incf	___flge@ff2+1,f,c
  7132  002D1C  1E2E               	comf	___flge@ff2+2,f,c
  7133  002D1E  B0D8               	btfsc	status,0,c
  7134  002D20  2A2E               	incf	___flge@ff2+2,f,c
  7135  002D22  0E80               	movlw	128
  7136  002D24  562F               	subfwb	___flge@ff2+3,f,c
  7137  002D26                     l617:
  7138  002D26  0E00               	movlw	0
  7139  002D28  1A28               	xorwf	___flge@ff1,f,c
  7140  002D2A  0E00               	movlw	0
  7141  002D2C  1A29               	xorwf	___flge@ff1+1,f,c
  7142  002D2E  0E00               	movlw	0
  7143  002D30  1A2A               	xorwf	___flge@ff1+2,f,c
  7144  002D32  0E80               	movlw	128
  7145  002D34  1A2B               	xorwf	___flge@ff1+3,f,c
  7146  002D36  0E00               	movlw	0
  7147  002D38  1A2C               	xorwf	___flge@ff2,f,c
  7148  002D3A  0E00               	movlw	0
  7149  002D3C  1A2D               	xorwf	___flge@ff2+1,f,c
  7150  002D3E  0E00               	movlw	0
  7151  002D40  1A2E               	xorwf	___flge@ff2+2,f,c
  7152  002D42  0E80               	movlw	128
  7153  002D44  1A2F               	xorwf	___flge@ff2+3,f,c
  7154  002D46  502C               	movf	___flge@ff2,w,c
  7155  002D48  5C28               	subwf	___flge@ff1,w,c
  7156  002D4A  502D               	movf	___flge@ff2+1,w,c
  7157  002D4C  5829               	subwfb	___flge@ff1+1,w,c
  7158  002D4E  502E               	movf	___flge@ff2+2,w,c
  7159  002D50  582A               	subwfb	___flge@ff1+2,w,c
  7160  002D52  502F               	movf	___flge@ff2+3,w,c
  7161  002D54  582B               	subwfb	___flge@ff1+3,w,c
  7162  002D56  B0D8               	btfsc	status,0,c
  7163  002D58  D002               	goto	l3599
  7164  002D5A  90D8               	bcf	status,0,c
  7165  002D5C  0012               	return	
  7166  002D5E                     l3599:
  7167  002D5E  80D8               	bsf	status,0,c
  7168  002D60  0012               	return		;funcret
  7169  002D62                     __end_of___flge:
  7170                           	opt callstack 0
  7171                           
  7172 ;; *************** function ___fleq *****************
  7173 ;; Defined at:
  7174 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  7175 ;; Parameters:    Size  Location     Type
  7176 ;;  ff1             4    0[COMRAM] unsigned char 
  7177 ;;  ff2             4    4[COMRAM] unsigned char 
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;		None
  7180 ;; Return value:  Size  Location     Type
  7181 ;;		None               void
  7182 ;; Registers used:
  7183 ;;		wreg, status,2, status,0
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7189 ;;      Params:         8       0       0       0       0       0       0       0       0
  7190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7191 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7192 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7193 ;;Total ram usage:       12 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:    1
  7196 ;; This function calls:
  7197 ;;		Nothing
  7198 ;; This function is called by:
  7199 ;;		_efgtoa
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text24
  7204  0030C6                     __ptext24:
  7205                           	opt callstack 0
  7206  0030C6                     ___fleq:
  7207                           	opt callstack 25
  7208                           
  7209                           ;incstack = 0
  7210  0030C6  0E00               	movlw	0
  7211  0030C8  1401               	andwf	___fleq@ff1,w,c
  7212  0030CA  6E09               	movwf	??___fleq& (0+255),c
  7213  0030CC  0E00               	movlw	0
  7214  0030CE  1402               	andwf	___fleq@ff1+1,w,c
  7215  0030D0  6E0A               	movwf	(??___fleq+1)& (0+255),c
  7216  0030D2  0E80               	movlw	128
  7217  0030D4  1403               	andwf	___fleq@ff1+2,w,c
  7218  0030D6  6E0B               	movwf	(??___fleq+2)& (0+255),c
  7219  0030D8  0E7F               	movlw	127
  7220  0030DA  1404               	andwf	___fleq@ff1+3,w,c
  7221  0030DC  6E0C               	movwf	(??___fleq+3)& (0+255),c
  7222  0030DE  5009               	movf	??___fleq,w,c
  7223  0030E0  100A               	iorwf	??___fleq+1,w,c
  7224  0030E2  100B               	iorwf	??___fleq+2,w,c
  7225  0030E4  100C               	iorwf	??___fleq+3,w,c
  7226  0030E6  A4D8               	btfss	status,2,c
  7227  0030E8  D008               	goto	l3569
  7228  0030EA  0E00               	movlw	0
  7229  0030EC  6E01               	movwf	___fleq@ff1,c
  7230  0030EE  0E00               	movlw	0
  7231  0030F0  6E02               	movwf	___fleq@ff1+1,c
  7232  0030F2  0E00               	movlw	0
  7233  0030F4  6E03               	movwf	___fleq@ff1+2,c
  7234  0030F6  0E00               	movlw	0
  7235  0030F8  6E04               	movwf	___fleq@ff1+3,c
  7236  0030FA                     l3569:
  7237  0030FA  0E00               	movlw	0
  7238  0030FC  1405               	andwf	___fleq@ff2,w,c
  7239  0030FE  6E09               	movwf	??___fleq& (0+255),c
  7240  003100  0E00               	movlw	0
  7241  003102  1406               	andwf	___fleq@ff2+1,w,c
  7242  003104  6E0A               	movwf	(??___fleq+1)& (0+255),c
  7243  003106  0E80               	movlw	128
  7244  003108  1407               	andwf	___fleq@ff2+2,w,c
  7245  00310A  6E0B               	movwf	(??___fleq+2)& (0+255),c
  7246  00310C  0E7F               	movlw	127
  7247  00310E  1408               	andwf	___fleq@ff2+3,w,c
  7248  003110  6E0C               	movwf	(??___fleq+3)& (0+255),c
  7249  003112  5009               	movf	??___fleq,w,c
  7250  003114  100A               	iorwf	??___fleq+1,w,c
  7251  003116  100B               	iorwf	??___fleq+2,w,c
  7252  003118  100C               	iorwf	??___fleq+3,w,c
  7253  00311A  A4D8               	btfss	status,2,c
  7254  00311C  D008               	goto	l3573
  7255  00311E  0E00               	movlw	0
  7256  003120  6E05               	movwf	___fleq@ff2,c
  7257  003122  0E00               	movlw	0
  7258  003124  6E06               	movwf	___fleq@ff2+1,c
  7259  003126  0E00               	movlw	0
  7260  003128  6E07               	movwf	___fleq@ff2+2,c
  7261  00312A  0E00               	movlw	0
  7262  00312C  6E08               	movwf	___fleq@ff2+3,c
  7263  00312E                     l3573:
  7264  00312E  5005               	movf	___fleq@ff2,w,c
  7265  003130  1801               	xorwf	___fleq@ff1,w,c
  7266  003132  E10A               	bnz	u4000
  7267  003134  5006               	movf	___fleq@ff2+1,w,c
  7268  003136  1802               	xorwf	___fleq@ff1+1,w,c
  7269  003138  E107               	bnz	u4000
  7270  00313A  5007               	movf	___fleq@ff2+2,w,c
  7271  00313C  1803               	xorwf	___fleq@ff1+2,w,c
  7272  00313E  E104               	bnz	u4000
  7273  003140  5008               	movf	___fleq@ff2+3,w,c
  7274  003142  1804               	xorwf	___fleq@ff1+3,w,c
  7275  003144  B4D8               	btfsc	status,2,c
  7276  003146  D002               	goto	l3577
  7277  003148                     u4000:
  7278  003148  90D8               	bcf	status,0,c
  7279  00314A  0012               	return	
  7280  00314C                     l3577:
  7281  00314C  80D8               	bsf	status,0,c
  7282  00314E  0012               	return		;funcret
  7283  003150                     __end_of___fleq:
  7284                           	opt callstack 0
  7285                           
  7286 ;; *************** function ___fldiv *****************
  7287 ;; Defined at:
  7288 ;;		line 11 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;  b               4   51[COMRAM] unsigned char 
  7291 ;;  a               4   55[COMRAM] unsigned char 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;  grs             4   70[COMRAM] unsigned long 
  7294 ;;  rem             4   63[COMRAM] unsigned long 
  7295 ;;  new_exp         2   68[COMRAM] short 
  7296 ;;  aexp            1   75[COMRAM] unsigned char 
  7297 ;;  bexp            1   74[COMRAM] unsigned char 
  7298 ;;  sign            1   67[COMRAM] unsigned char 
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  4   51[COMRAM] unsigned char 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, status,0
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7308 ;;      Params:         8       0       0       0       0       0       0       0       0
  7309 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7310 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7311 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7312 ;;Total ram usage:       25 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:    1
  7315 ;; This function calls:
  7316 ;;		Nothing
  7317 ;; This function is called by:
  7318 ;;		_main
  7319 ;;		_efgtoa
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text25
  7324  0025D0                     __ptext25:
  7325                           	opt callstack 0
  7326  0025D0                     ___fldiv:
  7327                           	opt callstack 25
  7328                           
  7329                           ;incstack = 0
  7330  0025D0  5037               	movf	___fldiv@b+3,w,c
  7331  0025D2  0B80               	andlw	128
  7332  0025D4  6E44               	movwf	___fldiv@sign,c
  7333  0025D6  5037               	movf	___fldiv@b+3,w,c
  7334  0025D8  2437               	addwf	___fldiv@b+3,w,c
  7335  0025DA  6E4B               	movwf	___fldiv@bexp,c
  7336  0025DC  BE36               	btfsc	___fldiv@b+2,7,c
  7337  0025DE  804B               	bsf	___fldiv@bexp,0,c
  7338  0025E0  504B               	movf	___fldiv@bexp,w,c
  7339  0025E2  B4D8               	btfsc	status,2,c
  7340  0025E4  D00D               	goto	l3227
  7341  0025E6  284B               	incf	___fldiv@bexp,w,c
  7342  0025E8  A4D8               	btfss	status,2,c
  7343  0025EA  D008               	goto	l3223
  7344  0025EC  0E00               	movlw	0
  7345  0025EE  6E34               	movwf	___fldiv@b,c
  7346  0025F0  0E00               	movlw	0
  7347  0025F2  6E35               	movwf	___fldiv@b+1,c
  7348  0025F4  0E00               	movlw	0
  7349  0025F6  6E36               	movwf	___fldiv@b+2,c
  7350  0025F8  0E00               	movlw	0
  7351  0025FA  6E37               	movwf	___fldiv@b+3,c
  7352  0025FC                     l3223:
  7353  0025FC  8E36               	bsf	___fldiv@b+2,7,c
  7354  0025FE  D006               	goto	L13
  7355  002600                     l3227:
  7356  002600  0E00               	movlw	0
  7357  002602  6E34               	movwf	___fldiv@b,c
  7358  002604  0E00               	movlw	0
  7359  002606  6E35               	movwf	___fldiv@b+1,c
  7360  002608  0E00               	movlw	0
  7361  00260A  6E36               	movwf	___fldiv@b+2,c
  7362  00260C                     L13:
  7363  00260C  0E00               	movlw	0
  7364  00260E  6E37               	movwf	___fldiv@b+3,c
  7365  002610  503B               	movf	___fldiv@a+3,w,c
  7366  002612  0B80               	andlw	128
  7367  002614  1A44               	xorwf	___fldiv@sign,f,c
  7368  002616  503B               	movf	___fldiv@a+3,w,c
  7369  002618  243B               	addwf	___fldiv@a+3,w,c
  7370  00261A  6E4C               	movwf	___fldiv@aexp,c
  7371  00261C  BE3A               	btfsc	___fldiv@a+2,7,c
  7372  00261E  804C               	bsf	___fldiv@aexp,0,c
  7373  002620  504C               	movf	___fldiv@aexp,w,c
  7374  002622  B4D8               	btfsc	status,2,c
  7375  002624  D00D               	goto	l3247
  7376  002626  284C               	incf	___fldiv@aexp,w,c
  7377  002628  A4D8               	btfss	status,2,c
  7378  00262A  D008               	goto	l3243
  7379  00262C  0E00               	movlw	0
  7380  00262E  6E38               	movwf	___fldiv@a,c
  7381  002630  0E00               	movlw	0
  7382  002632  6E39               	movwf	___fldiv@a+1,c
  7383  002634  0E00               	movlw	0
  7384  002636  6E3A               	movwf	___fldiv@a+2,c
  7385  002638  0E00               	movlw	0
  7386  00263A  6E3B               	movwf	___fldiv@a+3,c
  7387  00263C                     l3243:
  7388  00263C  8E3A               	bsf	___fldiv@a+2,7,c
  7389  00263E  D006               	goto	L14
  7390  002640                     l3247:
  7391  002640  0E00               	movlw	0
  7392  002642  6E38               	movwf	___fldiv@a,c
  7393  002644  0E00               	movlw	0
  7394  002646  6E39               	movwf	___fldiv@a+1,c
  7395  002648  0E00               	movlw	0
  7396  00264A  6E3A               	movwf	___fldiv@a+2,c
  7397  00264C                     L14:
  7398  00264C  0E00               	movlw	0
  7399  00264E  6E3B               	movwf	___fldiv@a+3,c
  7400  002650  5038               	movf	___fldiv@a,w,c
  7401  002652  1039               	iorwf	___fldiv@a+1,w,c
  7402  002654  103A               	iorwf	___fldiv@a+2,w,c
  7403  002656  103B               	iorwf	___fldiv@a+3,w,c
  7404  002658  A4D8               	btfss	status,2,c
  7405  00265A  D017               	goto	l3261
  7406  00265C  0E00               	movlw	0
  7407  00265E  6E34               	movwf	___fldiv@b,c
  7408  002660  0E00               	movlw	0
  7409  002662  6E35               	movwf	___fldiv@b+1,c
  7410  002664  0E00               	movlw	0
  7411  002666  6E36               	movwf	___fldiv@b+2,c
  7412  002668  0E00               	movlw	0
  7413  00266A  6E37               	movwf	___fldiv@b+3,c
  7414  00266C  0E80               	movlw	128
  7415  00266E  1236               	iorwf	___fldiv@b+2,f,c
  7416  002670  0E7F               	movlw	127
  7417  002672  1237               	iorwf	___fldiv@b+3,f,c
  7418  002674                     l3255:
  7419  002674  5044               	movf	___fldiv@sign,w,c
  7420  002676  1237               	iorwf	___fldiv@b+3,f,c
  7421  002678  C034  F034         	movff	___fldiv@b,?___fldiv
  7422  00267C  C035  F035         	movff	___fldiv@b+1,?___fldiv+1
  7423  002680  C036  F036         	movff	___fldiv@b+2,?___fldiv+2
  7424  002684  C037  F037         	movff	___fldiv@b+3,?___fldiv+3
  7425  002688  0012               	return	
  7426  00268A                     l3261:
  7427  00268A  504B               	movf	___fldiv@bexp,w,c
  7428  00268C  A4D8               	btfss	status,2,c
  7429  00268E  D009               	goto	l3269
  7430  002690  0E00               	movlw	0
  7431  002692  6E34               	movwf	?___fldiv,c
  7432  002694  0E00               	movlw	0
  7433  002696  6E35               	movwf	?___fldiv+1,c
  7434  002698  0E00               	movlw	0
  7435  00269A  6E36               	movwf	?___fldiv+2,c
  7436  00269C  0E00               	movlw	0
  7437  00269E  6E37               	movwf	?___fldiv+3,c
  7438  0026A0  0012               	return	
  7439  0026A2                     l3269:
  7440  0026A2  504C               	movf	___fldiv@aexp,w,c
  7441  0026A4  C04B  F03C         	movff	___fldiv@bexp,??___fldiv
  7442  0026A8  6A3D               	clrf	(??___fldiv+1)& (0+255),c
  7443  0026AA  5E3C               	subwf	??___fldiv,f,c
  7444  0026AC  0E00               	movlw	0
  7445  0026AE  5A3D               	subwfb	??___fldiv+1,f,c
  7446  0026B0  0E7F               	movlw	127
  7447  0026B2  243C               	addwf	??___fldiv,w,c
  7448  0026B4  6E45               	movwf	___fldiv@new_exp,c
  7449  0026B6  0E00               	movlw	0
  7450  0026B8  203D               	addwfc	??___fldiv+1,w,c
  7451  0026BA  6E46               	movwf	___fldiv@new_exp+1,c
  7452  0026BC  C034  F040         	movff	___fldiv@b,___fldiv@rem
  7453  0026C0  C035  F041         	movff	___fldiv@b+1,___fldiv@rem+1
  7454  0026C4  C036  F042         	movff	___fldiv@b+2,___fldiv@rem+2
  7455  0026C8  C037  F043         	movff	___fldiv@b+3,___fldiv@rem+3
  7456  0026CC  0E00               	movlw	0
  7457  0026CE  6E34               	movwf	___fldiv@b,c
  7458  0026D0  0E00               	movlw	0
  7459  0026D2  6E35               	movwf	___fldiv@b+1,c
  7460  0026D4  0E00               	movlw	0
  7461  0026D6  6E36               	movwf	___fldiv@b+2,c
  7462  0026D8  0E00               	movlw	0
  7463  0026DA  6E37               	movwf	___fldiv@b+3,c
  7464  0026DC  0E00               	movlw	0
  7465  0026DE  6E47               	movwf	___fldiv@grs,c
  7466  0026E0  0E00               	movlw	0
  7467  0026E2  6E48               	movwf	___fldiv@grs+1,c
  7468  0026E4  0E00               	movlw	0
  7469  0026E6  6E49               	movwf	___fldiv@grs+2,c
  7470  0026E8  0E00               	movlw	0
  7471  0026EA  6E4A               	movwf	___fldiv@grs+3,c
  7472  0026EC  0E00               	movlw	0
  7473  0026EE  6E4C               	movwf	___fldiv@aexp,c
  7474  0026F0  D028               	goto	l936
  7475  0026F2                     l3279:
  7476  0026F2  504C               	movf	___fldiv@aexp,w,c
  7477  0026F4  B4D8               	btfsc	status,2,c
  7478  0026F6  D011               	goto	l3287
  7479  0026F8  90D8               	bcf	status,0,c
  7480  0026FA  3640               	rlcf	___fldiv@rem,f,c
  7481  0026FC  3641               	rlcf	___fldiv@rem+1,f,c
  7482  0026FE  3642               	rlcf	___fldiv@rem+2,f,c
  7483  002700  3643               	rlcf	___fldiv@rem+3,f,c
  7484  002702  90D8               	bcf	status,0,c
  7485  002704  3634               	rlcf	___fldiv@b,f,c
  7486  002706  3635               	rlcf	___fldiv@b+1,f,c
  7487  002708  3636               	rlcf	___fldiv@b+2,f,c
  7488  00270A  3637               	rlcf	___fldiv@b+3,f,c
  7489  00270C  BE4A               	btfsc	___fldiv@grs+3,7,c
  7490  00270E  8034               	bsf	___fldiv@b,0,c
  7491  002710  90D8               	bcf	status,0,c
  7492  002712  3647               	rlcf	___fldiv@grs,f,c
  7493  002714  3648               	rlcf	___fldiv@grs+1,f,c
  7494  002716  3649               	rlcf	___fldiv@grs+2,f,c
  7495  002718  364A               	rlcf	___fldiv@grs+3,f,c
  7496  00271A                     l3287:
  7497  00271A  5038               	movf	___fldiv@a,w,c
  7498  00271C  5C40               	subwf	___fldiv@rem,w,c
  7499  00271E  5039               	movf	___fldiv@a+1,w,c
  7500  002720  5841               	subwfb	___fldiv@rem+1,w,c
  7501  002722  503A               	movf	___fldiv@a+2,w,c
  7502  002724  5842               	subwfb	___fldiv@rem+2,w,c
  7503  002726  503B               	movf	___fldiv@a+3,w,c
  7504  002728  5843               	subwfb	___fldiv@rem+3,w,c
  7505  00272A  A0D8               	btfss	status,0,c
  7506  00272C  D009               	goto	l3293
  7507  00272E  8C4A               	bsf	___fldiv@grs+3,6,c
  7508  002730  5038               	movf	___fldiv@a,w,c
  7509  002732  5E40               	subwf	___fldiv@rem,f,c
  7510  002734  5039               	movf	___fldiv@a+1,w,c
  7511  002736  5A41               	subwfb	___fldiv@rem+1,f,c
  7512  002738  503A               	movf	___fldiv@a+2,w,c
  7513  00273A  5A42               	subwfb	___fldiv@rem+2,f,c
  7514  00273C  503B               	movf	___fldiv@a+3,w,c
  7515  00273E  5A43               	subwfb	___fldiv@rem+3,f,c
  7516  002740                     l3293:
  7517  002740  2A4C               	incf	___fldiv@aexp,f,c
  7518  002742                     l936:
  7519  002742  0E19               	movlw	25
  7520  002744  644C               	cpfsgt	___fldiv@aexp,c
  7521  002746  D7D5               	goto	l3279
  7522  002748  5040               	movf	___fldiv@rem,w,c
  7523  00274A  1041               	iorwf	___fldiv@rem+1,w,c
  7524  00274C  1042               	iorwf	___fldiv@rem+2,w,c
  7525  00274E  1043               	iorwf	___fldiv@rem+3,w,c
  7526  002750  B4D8               	btfsc	status,2,c
  7527  002752  D011               	goto	l3305
  7528  002754  8047               	bsf	___fldiv@grs,0,c
  7529  002756  D00F               	goto	l3305
  7530  002758                     l3299:
  7531  002758  90D8               	bcf	status,0,c
  7532  00275A  3634               	rlcf	___fldiv@b,f,c
  7533  00275C  3635               	rlcf	___fldiv@b+1,f,c
  7534  00275E  3636               	rlcf	___fldiv@b+2,f,c
  7535  002760  3637               	rlcf	___fldiv@b+3,f,c
  7536  002762  BE4A               	btfsc	___fldiv@grs+3,7,c
  7537  002764  8034               	bsf	___fldiv@b,0,c
  7538  002766  90D8               	bcf	status,0,c
  7539  002768  3647               	rlcf	___fldiv@grs,f,c
  7540  00276A  3648               	rlcf	___fldiv@grs+1,f,c
  7541  00276C  3649               	rlcf	___fldiv@grs+2,f,c
  7542  00276E  364A               	rlcf	___fldiv@grs+3,f,c
  7543  002770  0645               	decf	___fldiv@new_exp,f,c
  7544  002772  A0D8               	btfss	status,0,c
  7545  002774  0646               	decf	___fldiv@new_exp+1,f,c
  7546  002776                     l3305:
  7547  002776  AE36               	btfss	___fldiv@b+2,7,c
  7548  002778  D7EF               	goto	l3299
  7549  00277A  0E00               	movlw	0
  7550  00277C  6E4C               	movwf	___fldiv@aexp,c
  7551  00277E  AE4A               	btfss	___fldiv@grs+3,7,c
  7552  002780  D017               	goto	l947
  7553  002782  0EFF               	movlw	255
  7554  002784  1447               	andwf	___fldiv@grs,w,c
  7555  002786  6E3C               	movwf	??___fldiv& (0+255),c
  7556  002788  0EFF               	movlw	255
  7557  00278A  1448               	andwf	___fldiv@grs+1,w,c
  7558  00278C  6E3D               	movwf	(??___fldiv+1)& (0+255),c
  7559  00278E  0EFF               	movlw	255
  7560  002790  1449               	andwf	___fldiv@grs+2,w,c
  7561  002792  6E3E               	movwf	(??___fldiv+2)& (0+255),c
  7562  002794  0E7F               	movlw	127
  7563  002796  144A               	andwf	___fldiv@grs+3,w,c
  7564  002798  6E3F               	movwf	(??___fldiv+3)& (0+255),c
  7565  00279A  503C               	movf	??___fldiv,w,c
  7566  00279C  103D               	iorwf	??___fldiv+1,w,c
  7567  00279E  103E               	iorwf	??___fldiv+2,w,c
  7568  0027A0  103F               	iorwf	??___fldiv+3,w,c
  7569  0027A2  B4D8               	btfsc	status,2,c
  7570  0027A4  D003               	goto	l948
  7571  0027A6                     u3600:
  7572  0027A6  0E01               	movlw	1
  7573  0027A8  6E4C               	movwf	___fldiv@aexp,c
  7574  0027AA  D002               	goto	l947
  7575  0027AC                     l948:
  7576  0027AC  B034               	btfsc	___fldiv@b,0,c
  7577  0027AE  D7FB               	goto	u3600
  7578  0027B0                     l947:
  7579  0027B0  504C               	movf	___fldiv@aexp,w,c
  7580  0027B2  B4D8               	btfsc	status,2,c
  7581  0027B4  D01F               	goto	l3325
  7582  0027B6  0E01               	movlw	1
  7583  0027B8  2634               	addwf	___fldiv@b,f,c
  7584  0027BA  0E00               	movlw	0
  7585  0027BC  2235               	addwfc	___fldiv@b+1,f,c
  7586  0027BE  2236               	addwfc	___fldiv@b+2,f,c
  7587  0027C0  2237               	addwfc	___fldiv@b+3,f,c
  7588  0027C2  A037               	btfss	___fldiv@b+3,0,c
  7589  0027C4  D017               	goto	l3325
  7590  0027C6  C034  F03C         	movff	___fldiv@b,??___fldiv
  7591  0027CA  C035  F03D         	movff	___fldiv@b+1,??___fldiv+1
  7592  0027CE  C036  F03E         	movff	___fldiv@b+2,??___fldiv+2
  7593  0027D2  C037  F03F         	movff	___fldiv@b+3,??___fldiv+3
  7594  0027D6  343F               	rlcf	??___fldiv+3,w,c
  7595  0027D8  323F               	rrcf	??___fldiv+3,f,c
  7596  0027DA  323E               	rrcf	??___fldiv+2,f,c
  7597  0027DC  323D               	rrcf	??___fldiv+1,f,c
  7598  0027DE  323C               	rrcf	??___fldiv,f,c
  7599  0027E0  C03C  F034         	movff	??___fldiv,___fldiv@b
  7600  0027E4  C03D  F035         	movff	??___fldiv+1,___fldiv@b+1
  7601  0027E8  C03E  F036         	movff	??___fldiv+2,___fldiv@b+2
  7602  0027EC  C03F  F037         	movff	??___fldiv+3,___fldiv@b+3
  7603  0027F0  4A45               	infsnz	___fldiv@new_exp,f,c
  7604  0027F2  2A46               	incf	___fldiv@new_exp+1,f,c
  7605  0027F4                     l3325:
  7606  0027F4  BE46               	btfsc	___fldiv@new_exp+1,7,c
  7607  0027F6  D010               	goto	l3329
  7608  0027F8  5046               	movf	___fldiv@new_exp+1,w,c
  7609  0027FA  E103               	bnz	u3640
  7610  0027FC  2845               	incf	___fldiv@new_exp,w,c
  7611  0027FE  A0D8               	btfss	status,0,c
  7612  002800  D00B               	goto	l3329
  7613  002802                     u3640:
  7614  002802  0E00               	movlw	0
  7615  002804  6E46               	movwf	___fldiv@new_exp+1,c
  7616  002806  6845               	setf	___fldiv@new_exp,c
  7617  002808  0E00               	movlw	0
  7618  00280A  6E34               	movwf	___fldiv@b,c
  7619  00280C  0E00               	movlw	0
  7620  00280E  6E35               	movwf	___fldiv@b+1,c
  7621  002810  0E00               	movlw	0
  7622  002812  6E36               	movwf	___fldiv@b+2,c
  7623  002814  0E00               	movlw	0
  7624  002816  6E37               	movwf	___fldiv@b+3,c
  7625  002818                     l3329:
  7626  002818  BE46               	btfsc	___fldiv@new_exp+1,7,c
  7627  00281A  D005               	goto	u3650
  7628  00281C  5046               	movf	___fldiv@new_exp+1,w,c
  7629  00281E  E111               	bnz	l3333
  7630  002820  0445               	decf	___fldiv@new_exp,w,c
  7631  002822  B0D8               	btfsc	status,0,c
  7632  002824  D00E               	goto	l3333
  7633  002826                     u3650:
  7634  002826  0E00               	movlw	0
  7635  002828  6E46               	movwf	___fldiv@new_exp+1,c
  7636  00282A  0E00               	movlw	0
  7637  00282C  6E45               	movwf	___fldiv@new_exp,c
  7638  00282E  0E00               	movlw	0
  7639  002830  6E34               	movwf	___fldiv@b,c
  7640  002832  0E00               	movlw	0
  7641  002834  6E35               	movwf	___fldiv@b+1,c
  7642  002836  0E00               	movlw	0
  7643  002838  6E36               	movwf	___fldiv@b+2,c
  7644  00283A  0E00               	movlw	0
  7645  00283C  6E37               	movwf	___fldiv@b+3,c
  7646  00283E  0E00               	movlw	0
  7647  002840  6E44               	movwf	___fldiv@sign,c
  7648  002842                     l3333:
  7649  002842  C045  F04B         	movff	___fldiv@new_exp,___fldiv@bexp
  7650  002846  A04B               	btfss	___fldiv@bexp,0,c
  7651  002848  D002               	goto	l3339
  7652  00284A  8E36               	bsf	___fldiv@b+2,7,c
  7653  00284C  D001               	goto	l3341
  7654  00284E                     l3339:
  7655  00284E  9E36               	bcf	___fldiv@b+2,7,c
  7656  002850                     l3341:
  7657  002850  90D8               	bcf	status,0,c
  7658  002852  304B               	rrcf	___fldiv@bexp,w,c
  7659  002854  6E37               	movwf	___fldiv@b+3,c
  7660  002856  D70E               	goto	l3255
  7661  002858                     __end_of___fldiv:
  7662                           	opt callstack 0
  7663                           
  7664 ;; *************** function ___awmod *****************
  7665 ;; Defined at:
  7666 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  dividend        2    0[COMRAM] int 
  7669 ;;  divisor         2    2[COMRAM] int 
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;  sign            1    5[COMRAM] unsigned char 
  7672 ;;  counter         1    4[COMRAM] unsigned char 
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  2    0[COMRAM] int 
  7675 ;; Registers used:
  7676 ;;		wreg, status,2, status,0
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7682 ;;      Params:         4       0       0       0       0       0       0       0       0
  7683 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7685 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7686 ;;Total ram usage:        6 bytes
  7687 ;; Hardware stack levels used:    1
  7688 ;; Hardware stack levels required when called:    1
  7689 ;; This function calls:
  7690 ;;		Nothing
  7691 ;; This function is called by:
  7692 ;;		_efgtoa
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text26
  7697  00324E                     __ptext26:
  7698                           	opt callstack 0
  7699  00324E                     ___awmod:
  7700                           	opt callstack 25
  7701                           
  7702                           ;incstack = 0
  7703  00324E  0E00               	movlw	0
  7704  003250  6E06               	movwf	___awmod@sign,c
  7705  003252  AE02               	btfss	___awmod@dividend+1,7,c
  7706  003254  D006               	goto	l3537
  7707  003256  6C01               	negf	___awmod@dividend,c
  7708  003258  1E02               	comf	___awmod@dividend+1,f,c
  7709  00325A  B0D8               	btfsc	status,0,c
  7710  00325C  2A02               	incf	___awmod@dividend+1,f,c
  7711  00325E  0E01               	movlw	1
  7712  003260  6E06               	movwf	___awmod@sign,c
  7713  003262                     l3537:
  7714  003262  AE04               	btfss	___awmod@divisor+1,7,c
  7715  003264  D004               	goto	l3541
  7716  003266  6C03               	negf	___awmod@divisor,c
  7717  003268  1E04               	comf	___awmod@divisor+1,f,c
  7718  00326A  B0D8               	btfsc	status,0,c
  7719  00326C  2A04               	incf	___awmod@divisor+1,f,c
  7720  00326E                     l3541:
  7721  00326E  5003               	movf	___awmod@divisor,w,c
  7722  003270  1004               	iorwf	___awmod@divisor+1,w,c
  7723  003272  B4D8               	btfsc	status,2,c
  7724  003274  D018               	goto	l3557
  7725  003276  0E01               	movlw	1
  7726  003278  6E05               	movwf	___awmod@counter,c
  7727  00327A  D004               	goto	l3547
  7728  00327C                     l3545:
  7729  00327C  90D8               	bcf	status,0,c
  7730  00327E  3603               	rlcf	___awmod@divisor,f,c
  7731  003280  3604               	rlcf	___awmod@divisor+1,f,c
  7732  003282  2A05               	incf	___awmod@counter,f,c
  7733  003284                     l3547:
  7734  003284  AE04               	btfss	___awmod@divisor+1,7,c
  7735  003286  D7FA               	goto	l3545
  7736  003288                     u3950:
  7737  003288  5003               	movf	___awmod@divisor,w,c
  7738  00328A  5C01               	subwf	___awmod@dividend,w,c
  7739  00328C  5004               	movf	___awmod@divisor+1,w,c
  7740  00328E  5802               	subwfb	___awmod@dividend+1,w,c
  7741  003290  A0D8               	btfss	status,0,c
  7742  003292  D004               	goto	l3553
  7743  003294  5003               	movf	___awmod@divisor,w,c
  7744  003296  5E01               	subwf	___awmod@dividend,f,c
  7745  003298  5004               	movf	___awmod@divisor+1,w,c
  7746  00329A  5A02               	subwfb	___awmod@dividend+1,f,c
  7747  00329C                     l3553:
  7748  00329C  90D8               	bcf	status,0,c
  7749  00329E  3204               	rrcf	___awmod@divisor+1,f,c
  7750  0032A0  3203               	rrcf	___awmod@divisor,f,c
  7751  0032A2  2E05               	decfsz	___awmod@counter,f,c
  7752  0032A4  D7F1               	goto	u3950
  7753  0032A6                     l3557:
  7754  0032A6  5006               	movf	___awmod@sign,w,c
  7755  0032A8  B4D8               	btfsc	status,2,c
  7756  0032AA  D004               	goto	l3561
  7757  0032AC  6C01               	negf	___awmod@dividend,c
  7758  0032AE  1E02               	comf	___awmod@dividend+1,f,c
  7759  0032B0  B0D8               	btfsc	status,0,c
  7760  0032B2  2A02               	incf	___awmod@dividend+1,f,c
  7761  0032B4                     l3561:
  7762  0032B4  C001  F001         	movff	___awmod@dividend,?___awmod
  7763  0032B8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7764  0032BC  0012               	return		;funcret
  7765  0032BE                     __end_of___awmod:
  7766                           	opt callstack 0
  7767                           
  7768 ;; *************** function ___awdiv *****************
  7769 ;; Defined at:
  7770 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  dividend        2    0[COMRAM] int 
  7773 ;;  divisor         2    2[COMRAM] int 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  quotient        2    6[COMRAM] int 
  7776 ;;  sign            1    5[COMRAM] unsigned char 
  7777 ;;  counter         1    4[COMRAM] unsigned char 
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  2    0[COMRAM] int 
  7780 ;; Registers used:
  7781 ;;		wreg, status,2, status,0
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7787 ;;      Params:         4       0       0       0       0       0       0       0       0
  7788 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7790 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7791 ;;Total ram usage:        8 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    1
  7794 ;; This function calls:
  7795 ;;		Nothing
  7796 ;; This function is called by:
  7797 ;;		_efgtoa
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           	psect	text27
  7802  003150                     __ptext27:
  7803                           	opt callstack 0
  7804  003150                     ___awdiv:
  7805                           	opt callstack 25
  7806                           
  7807                           ;incstack = 0
  7808  003150  0E00               	movlw	0
  7809  003152  6E06               	movwf	___awdiv@sign,c
  7810  003154  AE04               	btfss	___awdiv@divisor+1,7,c
  7811  003156  D006               	goto	l3493
  7812  003158  6C03               	negf	___awdiv@divisor,c
  7813  00315A  1E04               	comf	___awdiv@divisor+1,f,c
  7814  00315C  B0D8               	btfsc	status,0,c
  7815  00315E  2A04               	incf	___awdiv@divisor+1,f,c
  7816  003160  0E01               	movlw	1
  7817  003162  6E06               	movwf	___awdiv@sign,c
  7818  003164                     l3493:
  7819  003164  AE02               	btfss	___awdiv@dividend+1,7,c
  7820  003166  D006               	goto	l3499
  7821  003168  6C01               	negf	___awdiv@dividend,c
  7822  00316A  1E02               	comf	___awdiv@dividend+1,f,c
  7823  00316C  B0D8               	btfsc	status,0,c
  7824  00316E  2A02               	incf	___awdiv@dividend+1,f,c
  7825  003170  0E01               	movlw	1
  7826  003172  1A06               	xorwf	___awdiv@sign,f,c
  7827  003174                     l3499:
  7828  003174  0E00               	movlw	0
  7829  003176  6E08               	movwf	___awdiv@quotient+1,c
  7830  003178  0E00               	movlw	0
  7831  00317A  6E07               	movwf	___awdiv@quotient,c
  7832  00317C  5003               	movf	___awdiv@divisor,w,c
  7833  00317E  1004               	iorwf	___awdiv@divisor+1,w,c
  7834  003180  B4D8               	btfsc	status,2,c
  7835  003182  D01C               	goto	l3521
  7836  003184  0E01               	movlw	1
  7837  003186  6E05               	movwf	___awdiv@counter,c
  7838  003188  D004               	goto	l3507
  7839  00318A                     l3505:
  7840  00318A  90D8               	bcf	status,0,c
  7841  00318C  3603               	rlcf	___awdiv@divisor,f,c
  7842  00318E  3604               	rlcf	___awdiv@divisor+1,f,c
  7843  003190  2A05               	incf	___awdiv@counter,f,c
  7844  003192                     l3507:
  7845  003192  AE04               	btfss	___awdiv@divisor+1,7,c
  7846  003194  D7FA               	goto	l3505
  7847  003196                     u3890:
  7848  003196  90D8               	bcf	status,0,c
  7849  003198  3607               	rlcf	___awdiv@quotient,f,c
  7850  00319A  3608               	rlcf	___awdiv@quotient+1,f,c
  7851  00319C  5003               	movf	___awdiv@divisor,w,c
  7852  00319E  5C01               	subwf	___awdiv@dividend,w,c
  7853  0031A0  5004               	movf	___awdiv@divisor+1,w,c
  7854  0031A2  5802               	subwfb	___awdiv@dividend+1,w,c
  7855  0031A4  A0D8               	btfss	status,0,c
  7856  0031A6  D005               	goto	l3517
  7857  0031A8  5003               	movf	___awdiv@divisor,w,c
  7858  0031AA  5E01               	subwf	___awdiv@dividend,f,c
  7859  0031AC  5004               	movf	___awdiv@divisor+1,w,c
  7860  0031AE  5A02               	subwfb	___awdiv@dividend+1,f,c
  7861  0031B0  8007               	bsf	___awdiv@quotient,0,c
  7862  0031B2                     l3517:
  7863  0031B2  90D8               	bcf	status,0,c
  7864  0031B4  3204               	rrcf	___awdiv@divisor+1,f,c
  7865  0031B6  3203               	rrcf	___awdiv@divisor,f,c
  7866  0031B8  2E05               	decfsz	___awdiv@counter,f,c
  7867  0031BA  D7ED               	goto	u3890
  7868  0031BC                     l3521:
  7869  0031BC  5006               	movf	___awdiv@sign,w,c
  7870  0031BE  B4D8               	btfsc	status,2,c
  7871  0031C0  D004               	goto	l3525
  7872  0031C2  6C07               	negf	___awdiv@quotient,c
  7873  0031C4  1E08               	comf	___awdiv@quotient+1,f,c
  7874  0031C6  B0D8               	btfsc	status,0,c
  7875  0031C8  2A08               	incf	___awdiv@quotient+1,f,c
  7876  0031CA                     l3525:
  7877  0031CA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7878  0031CE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7879  0031D2  0012               	return		;funcret
  7880  0031D4                     __end_of___awdiv:
  7881                           	opt callstack 0
  7882                           
  7883 ;; *************** function _atoi *****************
  7884 ;; Defined at:
  7885 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7888 ;;		 -> STR_3(10), STR_2(9), STR_1(9), 
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;  n               2   20[COMRAM] int 
  7891 ;;  neg             2   13[COMRAM] int 
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  2    7[COMRAM] int 
  7894 ;; Registers used:
  7895 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7901 ;;      Params:         2       0       0       0       0       0       0       0       0
  7902 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7903 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7904 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7905 ;;Total ram usage:       15 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; Hardware stack levels required when called:    2
  7908 ;; This function calls:
  7909 ;;		___wmul
  7910 ;;		_isdigit
  7911 ;;		_isspace
  7912 ;; This function is called by:
  7913 ;;		_vfpfcnvrt
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           	psect	text28
  7918  002A12                     __ptext28:
  7919                           	opt callstack 0
  7920  002A12                     _atoi:
  7921                           	opt callstack 25
  7922                           
  7923                           ;incstack = 0
  7924  002A12  0E00               	movlw	0
  7925  002A14  6E16               	movwf	atoi@n+1,c
  7926  002A16  0E00               	movlw	0
  7927  002A18  6E15               	movwf	atoi@n,c
  7928  002A1A  0E00               	movlw	0
  7929  002A1C  6E0F               	movwf	atoi@neg+1,c
  7930  002A1E  0E00               	movlw	0
  7931  002A20  6E0E               	movwf	atoi@neg,c
  7932  002A22  D002               	goto	l3985
  7933  002A24                     l3983:
  7934  002A24  4A08               	infsnz	atoi@s,f,c
  7935  002A26  2A09               	incf	atoi@s+1,f,c
  7936  002A28                     l3985:
  7937  002A28  0E01               	movlw	1
  7938  002A2A  6E14               	movwf	_atoi$869,c
  7939  002A2C  C008  FFF6         	movff	atoi@s,tblptrl
  7940  002A30  C009  FFF7         	movff	atoi@s+1,tblptrh
  7941  002A34                     	if	0	;tblptru may be non-zero
  7942  002A34                     	endif
  7943  002A34                     	if	0	;tblptru may be non-zero
  7944  002A34                     	endif
  7945  002A34  0008               	tblrd		*
  7946  002A36  50F5               	movf	tablat,w,c
  7947  002A38  0A20               	xorlw	32
  7948  002A3A  B4D8               	btfsc	status,2,c
  7949  002A3C  D018               	goto	l3993
  7950  002A3E  0EF7               	movlw	247
  7951  002A40  6E0A               	movwf	??_atoi& (0+255),c
  7952  002A42  0EFF               	movlw	255
  7953  002A44  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7954  002A46  C008  FFF6         	movff	atoi@s,tblptrl
  7955  002A4A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7956  002A4E                     	if	0	;tblptru may be non-zero
  7957  002A4E                     	endif
  7958  002A4E                     	if	0	;tblptru may be non-zero
  7959  002A4E                     	endif
  7960  002A4E  0008               	tblrd		*
  7961  002A50  50F5               	movf	tablat,w,c
  7962  002A52  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7963  002A54  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7964  002A56  500A               	movf	??_atoi,w,c
  7965  002A58  260C               	addwf	??_atoi+2,f,c
  7966  002A5A  500B               	movf	??_atoi+1,w,c
  7967  002A5C  220D               	addwfc	??_atoi+3,f,c
  7968  002A5E  500D               	movf	??_atoi+3,w,c
  7969  002A60  E104               	bnz	u4710
  7970  002A62  0E05               	movlw	5
  7971  002A64  5C0C               	subwf	??_atoi+2,w,c
  7972  002A66  A0D8               	btfss	status,0,c
  7973  002A68  D002               	goto	l3993
  7974  002A6A                     u4710:
  7975  002A6A  0E00               	movlw	0
  7976  002A6C  6E14               	movwf	_atoi$869,c
  7977  002A6E                     l3993:
  7978  002A6E  C014  F010         	movff	_atoi$869,_atoi$868
  7979  002A72  6A11               	clrf	_atoi$868+1,c
  7980  002A74  5010               	movf	_atoi$868,w,c
  7981  002A76  1011               	iorwf	_atoi$868+1,w,c
  7982  002A78  B4D8               	btfsc	status,2,c
  7983  002A7A  D008               	goto	l4003
  7984  002A7C  D7D3               	goto	l3983
  7985  002A7E                     l3999:
  7986  002A7E  0E00               	movlw	0
  7987  002A80  6E0F               	movwf	atoi@neg+1,c
  7988  002A82  0E01               	movlw	1
  7989  002A84  6E0E               	movwf	atoi@neg,c
  7990  002A86                     l4001:
  7991  002A86  4A08               	infsnz	atoi@s,f,c
  7992  002A88  2A09               	incf	atoi@s+1,f,c
  7993  002A8A  D02E               	goto	l4009
  7994  002A8C                     l4003:
  7995  002A8C  C008  FFF6         	movff	atoi@s,tblptrl
  7996  002A90  C009  FFF7         	movff	atoi@s+1,tblptrh
  7997  002A94                     	if	0	;tblptru may be non-zero
  7998  002A94                     	endif
  7999  002A94                     	if	0	;tblptru may be non-zero
  8000  002A94                     	endif
  8001  002A94  0008               	tblrd		*
  8002  002A96  50F5               	movf	tablat,w,c
  8003  002A98  6E0A               	movwf	??_atoi& (0+255),c
  8004  002A9A  6A0B               	clrf	(??_atoi+1)& (0+255),c
  8005                           
  8006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8007                           ; Switch size 1, requested type "simple"
  8008                           ; Number of cases is 1, Range of values is 0 to 0
  8009                           ; switch strategies available:
  8010                           ; Name         Instructions Cycles
  8011                           ; simple_byte            4     3 (average)
  8012                           ;	Chosen strategy is simple_byte
  8013  002A9C  500B               	movf	??_atoi+1,w,c
  8014  002A9E  0A00               	xorlw	0	; case 0
  8015  002AA0  A4D8               	btfss	status,2,c
  8016  002AA2  D022               	goto	l4009
  8017                           
  8018                           ; Switch size 1, requested type "simple"
  8019                           ; Number of cases is 2, Range of values is 43 to 45
  8020                           ; switch strategies available:
  8021                           ; Name         Instructions Cycles
  8022                           ; simple_byte            7     4 (average)
  8023                           ;	Chosen strategy is simple_byte
  8024  002AA4  500A               	movf	??_atoi,w,c
  8025  002AA6  0A2B               	xorlw	43	; case 43
  8026  002AA8  B4D8               	btfsc	status,2,c
  8027  002AAA  D7ED               	goto	l4001
  8028  002AAC  0A06               	xorlw	6	; case 45
  8029  002AAE  B4D8               	btfsc	status,2,c
  8030  002AB0  D7E6               	goto	l3999
  8031  002AB2  D01A               	goto	l4009
  8032  002AB4                     l4005:
  8033  002AB4  C015  F001         	movff	atoi@n,___wmul@multiplier
  8034  002AB8  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8035  002ABC  0E00               	movlw	0
  8036  002ABE  6E04               	movwf	___wmul@multiplicand+1,c
  8037  002AC0  0E0A               	movlw	10
  8038  002AC2  6E03               	movwf	___wmul@multiplicand,c
  8039  002AC4  EC6C  F01B         	call	___wmul	;wreg free
  8040  002AC8  C008  FFF6         	movff	atoi@s,tblptrl
  8041  002ACC  C009  FFF7         	movff	atoi@s+1,tblptrh
  8042  002AD0                     	if	0	;tblptru may be non-zero
  8043  002AD0                     	endif
  8044  002AD0                     	if	0	;tblptru may be non-zero
  8045  002AD0                     	endif
  8046  002AD0  0008               	tblrd		*
  8047  002AD2  50F5               	movf	tablat,w,c
  8048  002AD4  5E01               	subwf	?___wmul,f,c
  8049  002AD6  0E00               	movlw	0
  8050  002AD8  5A02               	subwfb	?___wmul+1,f,c
  8051  002ADA  0E30               	movlw	48
  8052  002ADC  2401               	addwf	?___wmul,w,c
  8053  002ADE  6E15               	movwf	atoi@n,c
  8054  002AE0  0E00               	movlw	0
  8055  002AE2  2002               	addwfc	?___wmul+1,w,c
  8056  002AE4  6E16               	movwf	atoi@n+1,c
  8057  002AE6  D7CF               	goto	l4001
  8058  002AE8                     l4009:
  8059  002AE8  0ED0               	movlw	208
  8060  002AEA  6E0A               	movwf	??_atoi& (0+255),c
  8061  002AEC  0EFF               	movlw	255
  8062  002AEE  6E0B               	movwf	(??_atoi+1)& (0+255),c
  8063  002AF0  C008  FFF6         	movff	atoi@s,tblptrl
  8064  002AF4  C009  FFF7         	movff	atoi@s+1,tblptrh
  8065  002AF8                     	if	0	;tblptru may be non-zero
  8066  002AF8                     	endif
  8067  002AF8                     	if	0	;tblptru may be non-zero
  8068  002AF8                     	endif
  8069  002AF8  0008               	tblrd		*
  8070  002AFA  50F5               	movf	tablat,w,c
  8071  002AFC  6E0C               	movwf	(??_atoi+2)& (0+255),c
  8072  002AFE  6A0D               	clrf	(??_atoi+3)& (0+255),c
  8073  002B00  500A               	movf	??_atoi,w,c
  8074  002B02  260C               	addwf	??_atoi+2,f,c
  8075  002B04  500B               	movf	??_atoi+1,w,c
  8076  002B06  220D               	addwfc	??_atoi+3,f,c
  8077  002B08  500D               	movf	??_atoi+3,w,c
  8078  002B0A  E106               	bnz	u4730
  8079  002B0C  0E0A               	movlw	10
  8080  002B0E  5C0C               	subwf	??_atoi+2,w,c
  8081  002B10  B0D8               	btfsc	status,0,c
  8082  002B12  D002               	goto	u4730
  8083  002B14  0E01               	movlw	1
  8084  002B16  D001               	goto	u4740
  8085  002B18                     u4730:
  8086  002B18  0E00               	movlw	0
  8087  002B1A                     u4740:
  8088  002B1A  6E12               	movwf	_atoi$870,c
  8089  002B1C  6A13               	clrf	_atoi$870+1,c
  8090  002B1E  5012               	movf	_atoi$870,w,c
  8091  002B20  1013               	iorwf	_atoi$870+1,w,c
  8092  002B22  A4D8               	btfss	status,2,c
  8093  002B24  D7C7               	goto	l4005
  8094  002B26  500E               	movf	atoi@neg,w,c
  8095  002B28  100F               	iorwf	atoi@neg+1,w,c
  8096  002B2A  A4D8               	btfss	status,2,c
  8097  002B2C  D00D               	goto	l1062
  8098  002B2E  C015  F00A         	movff	atoi@n,??_atoi
  8099  002B32  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8100  002B36  1E0A               	comf	??_atoi,f,c
  8101  002B38  1E0B               	comf	??_atoi+1,f,c
  8102  002B3A  4A0A               	infsnz	??_atoi,f,c
  8103  002B3C  2A0B               	incf	??_atoi+1,f,c
  8104  002B3E  C00A  F008         	movff	??_atoi,?_atoi
  8105  002B42  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8106  002B46  0012               	return	
  8107  002B48                     l1062:
  8108  002B48  C015  F008         	movff	atoi@n,?_atoi
  8109  002B4C  C016  F009         	movff	atoi@n+1,?_atoi+1
  8110  002B50  0012               	return		;funcret
  8111  002B52                     __end_of_atoi:
  8112                           	opt callstack 0
  8113                           
  8114 ;; *************** function _isspace *****************
  8115 ;; Defined at:
  8116 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;  c               2    0[COMRAM] int 
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;		None
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  2    0[COMRAM] int 
  8123 ;; Registers used:
  8124 ;;		wreg, status,2, status,0
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8130 ;;      Params:         2       0       0       0       0       0       0       0       0
  8131 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8132 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8133 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8134 ;;Total ram usage:        7 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; Hardware stack levels required when called:    1
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_atoi
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text29
  8145  0034EC                     __ptext29:
  8146                           	opt callstack 0
  8147  0034EC                     _isspace:
  8148                           	opt callstack 25
  8149                           
  8150                           ;incstack = 0
  8151  0034EC  0E01               	movlw	1
  8152  0034EE  6E07               	movwf	_isspace$899,c
  8153  0034F0  0E20               	movlw	32
  8154  0034F2  1801               	xorwf	isspace@c,w,c
  8155  0034F4  1002               	iorwf	isspace@c+1,w,c
  8156  0034F6  B4D8               	btfsc	status,2,c
  8157  0034F8  D014               	goto	l3663
  8158  0034FA  0EF7               	movlw	247
  8159  0034FC  6E03               	movwf	??_isspace& (0+255),c
  8160  0034FE  0EFF               	movlw	255
  8161  003500  6E04               	movwf	(??_isspace+1)& (0+255),c
  8162  003502  C001  F005         	movff	isspace@c,??_isspace+2
  8163  003506  C002  F006         	movff	isspace@c+1,??_isspace+3
  8164  00350A  5003               	movf	??_isspace,w,c
  8165  00350C  2605               	addwf	??_isspace+2,f,c
  8166  00350E  5004               	movf	??_isspace+1,w,c
  8167  003510  2206               	addwfc	??_isspace+3,f,c
  8168  003512  5006               	movf	??_isspace+3,w,c
  8169  003514  E104               	bnz	u4150
  8170  003516  0E05               	movlw	5
  8171  003518  5C05               	subwf	??_isspace+2,w,c
  8172  00351A  A0D8               	btfss	status,0,c
  8173  00351C  D002               	goto	l3663
  8174  00351E                     u4150:
  8175  00351E  0E00               	movlw	0
  8176  003520  6E07               	movwf	_isspace$899,c
  8177  003522                     l3663:
  8178  003522  C007  F001         	movff	_isspace$899,?_isspace
  8179  003526  6A02               	clrf	?_isspace+1,c
  8180  003528  0012               	return		;funcret
  8181  00352A                     __end_of_isspace:
  8182                           	opt callstack 0
  8183                           
  8184 ;; *************** function _isdigit *****************
  8185 ;; Defined at:
  8186 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  c               2    0[COMRAM] int 
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;		None
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  2    0[COMRAM] int 
  8193 ;; Registers used:
  8194 ;;		wreg, status,2, status,0
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8200 ;;      Params:         2       0       0       0       0       0       0       0       0
  8201 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8202 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8203 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8204 ;;Total ram usage:        6 bytes
  8205 ;; Hardware stack levels used:    1
  8206 ;; Hardware stack levels required when called:    1
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_vfpfcnvrt
  8211 ;;		_atoi
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text30
  8216  0035FA                     __ptext30:
  8217                           	opt callstack 0
  8218  0035FA                     _isdigit:
  8219                           	opt callstack 26
  8220                           
  8221                           ;incstack = 0
  8222  0035FA  0ED0               	movlw	208
  8223  0035FC  6E03               	movwf	??_isdigit& (0+255),c
  8224  0035FE  0EFF               	movlw	255
  8225  003600  6E04               	movwf	(??_isdigit+1)& (0+255),c
  8226  003602  C001  F005         	movff	isdigit@c,??_isdigit+2
  8227  003606  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8228  00360A  5003               	movf	??_isdigit,w,c
  8229  00360C  2605               	addwf	??_isdigit+2,f,c
  8230  00360E  5004               	movf	??_isdigit+1,w,c
  8231  003610  2206               	addwfc	??_isdigit+3,f,c
  8232  003612  5006               	movf	??_isdigit+3,w,c
  8233  003614  E106               	bnz	u3420
  8234  003616  0E0A               	movlw	10
  8235  003618  5C05               	subwf	??_isdigit+2,w,c
  8236  00361A  B0D8               	btfsc	status,0,c
  8237  00361C  D002               	goto	u3420
  8238  00361E  0E01               	movlw	1
  8239  003620  D001               	goto	u3430
  8240  003622                     u3420:
  8241  003622  0E00               	movlw	0
  8242  003624                     u3430:
  8243  003624  6E01               	movwf	?_isdigit,c
  8244  003626  6A02               	clrf	?_isdigit+1,c
  8245  003628  0012               	return		;funcret
  8246  00362A                     __end_of_isdigit:
  8247                           	opt callstack 0
  8248                           
  8249 ;; *************** function ___wmul *****************
  8250 ;; Defined at:
  8251 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  multiplier      2    0[COMRAM] unsigned int 
  8254 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  product         2    4[COMRAM] unsigned int 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  2    0[COMRAM] unsigned int 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, status,0, prodl, prodh
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8266 ;;      Params:         4       0       0       0       0       0       0       0       0
  8267 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8269 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8270 ;;Total ram usage:        6 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:    1
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_atoi
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text31
  8281  0036D8                     __ptext31:
  8282                           	opt callstack 0
  8283  0036D8                     ___wmul:
  8284                           	opt callstack 25
  8285                           
  8286                           ;incstack = 0
  8287  0036D8  5001               	movf	___wmul@multiplier,w,c
  8288  0036DA  0203               	mulwf	___wmul@multiplicand,c
  8289  0036DC  CFF3 F005          	movff	prodl,___wmul@product
  8290  0036E0  CFF4 F006          	movff	prodh,___wmul@product+1
  8291  0036E4  5001               	movf	___wmul@multiplier,w,c
  8292  0036E6  0204               	mulwf	___wmul@multiplicand+1,c
  8293  0036E8  50F3               	movf	prodl,w,c
  8294  0036EA  2606               	addwf	___wmul@product+1,f,c
  8295  0036EC  5002               	movf	___wmul@multiplier+1,w,c
  8296  0036EE  0203               	mulwf	___wmul@multiplicand,c
  8297  0036F0  50F3               	movf	prodl,w,c
  8298  0036F2  2606               	addwf	___wmul@product+1,f,c
  8299  0036F4  C005  F001         	movff	___wmul@product,?___wmul
  8300  0036F8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8301  0036FC  0012               	return		;funcret
  8302  0036FE                     __end_of___wmul:
  8303                           	opt callstack 0
  8304                           
  8305 ;; *************** function ___xxtofl *****************
  8306 ;; Defined at:
  8307 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  sign            1    wreg     unsigned char 
  8310 ;;  val             4    0[COMRAM] long 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  sign            1    8[COMRAM] unsigned char 
  8313 ;;  arg             4   10[COMRAM] unsigned long 
  8314 ;;  exp             1    9[COMRAM] unsigned char 
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  4    0[COMRAM] unsigned char 
  8317 ;; Registers used:
  8318 ;;		wreg, status,2, status,0
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8324 ;;      Params:         4       0       0       0       0       0       0       0       0
  8325 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8326 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8327 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8328 ;;Total ram usage:       14 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    1
  8331 ;; This function calls:
  8332 ;;		Nothing
  8333 ;; This function is called by:
  8334 ;;		_main
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text32
  8339  002B52                     __ptext32:
  8340                           	opt callstack 0
  8341  002B52                     ___xxtofl:
  8342                           	opt callstack 29
  8343                           
  8344                           ;incstack = 0
  8345                           ;___xxtofl@sign stored from wreg
  8346  002B52  6E09               	movwf	___xxtofl@sign,c
  8347  002B54  5009               	movf	___xxtofl@sign,w,c
  8348  002B56  A4D8               	btfss	status,2,c
  8349  002B58  AE04               	btfss	___xxtofl@val+3,7,c
  8350  002B5A  D01A               	goto	l1007
  8351  002B5C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8352  002B60  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8353  002B64  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8354  002B68  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8355  002B6C  1E05               	comf	??___xxtofl,f,c
  8356  002B6E  1E06               	comf	??___xxtofl+1,f,c
  8357  002B70  1E07               	comf	??___xxtofl+2,f,c
  8358  002B72  1E08               	comf	??___xxtofl+3,f,c
  8359  002B74  2A05               	incf	??___xxtofl,f,c
  8360  002B76  0E00               	movlw	0
  8361  002B78  2206               	addwfc	??___xxtofl+1,f,c
  8362  002B7A  2207               	addwfc	??___xxtofl+2,f,c
  8363  002B7C  2208               	addwfc	??___xxtofl+3,f,c
  8364  002B7E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8365  002B82  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8366  002B86  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8367  002B8A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8368  002B8E  D008               	goto	l4375
  8369  002B90                     l1007:
  8370  002B90  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8371  002B94  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8372  002B98  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8373  002B9C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8374  002BA0                     l4375:
  8375  002BA0  5001               	movf	___xxtofl@val,w,c
  8376  002BA2  1002               	iorwf	___xxtofl@val+1,w,c
  8377  002BA4  1003               	iorwf	___xxtofl@val+2,w,c
  8378  002BA6  1004               	iorwf	___xxtofl@val+3,w,c
  8379  002BA8  A4D8               	btfss	status,2,c
  8380  002BAA  D009               	goto	l4381
  8381  002BAC  0E00               	movlw	0
  8382  002BAE  6E01               	movwf	?___xxtofl,c
  8383  002BB0  0E00               	movlw	0
  8384  002BB2  6E02               	movwf	?___xxtofl+1,c
  8385  002BB4  0E00               	movlw	0
  8386  002BB6  6E03               	movwf	?___xxtofl+2,c
  8387  002BB8  0E00               	movlw	0
  8388  002BBA  6E04               	movwf	?___xxtofl+3,c
  8389  002BBC  0012               	return	
  8390  002BBE                     l4381:
  8391  002BBE  0E96               	movlw	150
  8392  002BC0  6E0A               	movwf	___xxtofl@exp,c
  8393  002BC2  D006               	goto	l4385
  8394  002BC4                     l4383:
  8395  002BC4  2A0A               	incf	___xxtofl@exp,f,c
  8396  002BC6  90D8               	bcf	status,0,c
  8397  002BC8  320E               	rrcf	___xxtofl@arg+3,f,c
  8398  002BCA  320D               	rrcf	___xxtofl@arg+2,f,c
  8399  002BCC  320C               	rrcf	___xxtofl@arg+1,f,c
  8400  002BCE  320B               	rrcf	___xxtofl@arg,f,c
  8401  002BD0                     l4385:
  8402  002BD0  0E00               	movlw	0
  8403  002BD2  140B               	andwf	___xxtofl@arg,w,c
  8404  002BD4  6E05               	movwf	??___xxtofl& (0+255),c
  8405  002BD6  0E00               	movlw	0
  8406  002BD8  140C               	andwf	___xxtofl@arg+1,w,c
  8407  002BDA  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8408  002BDC  0E00               	movlw	0
  8409  002BDE  140D               	andwf	___xxtofl@arg+2,w,c
  8410  002BE0  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8411  002BE2  0EFE               	movlw	254
  8412  002BE4  140E               	andwf	___xxtofl@arg+3,w,c
  8413  002BE6  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8414  002BE8  5005               	movf	??___xxtofl,w,c
  8415  002BEA  1006               	iorwf	??___xxtofl+1,w,c
  8416  002BEC  1007               	iorwf	??___xxtofl+2,w,c
  8417  002BEE  1008               	iorwf	??___xxtofl+3,w,c
  8418  002BF0  B4D8               	btfsc	status,2,c
  8419  002BF2  D00D               	goto	l1014
  8420  002BF4  D7E7               	goto	l4383
  8421  002BF6                     l4387:
  8422  002BF6  2A0A               	incf	___xxtofl@exp,f,c
  8423  002BF8  0E01               	movlw	1
  8424  002BFA  260B               	addwf	___xxtofl@arg,f,c
  8425  002BFC  0E00               	movlw	0
  8426  002BFE  220C               	addwfc	___xxtofl@arg+1,f,c
  8427  002C00  220D               	addwfc	___xxtofl@arg+2,f,c
  8428  002C02  220E               	addwfc	___xxtofl@arg+3,f,c
  8429  002C04  90D8               	bcf	status,0,c
  8430  002C06  320E               	rrcf	___xxtofl@arg+3,f,c
  8431  002C08  320D               	rrcf	___xxtofl@arg+2,f,c
  8432  002C0A  320C               	rrcf	___xxtofl@arg+1,f,c
  8433  002C0C  320B               	rrcf	___xxtofl@arg,f,c
  8434  002C0E                     l1014:
  8435  002C0E  0E00               	movlw	0
  8436  002C10  140B               	andwf	___xxtofl@arg,w,c
  8437  002C12  6E05               	movwf	??___xxtofl& (0+255),c
  8438  002C14  0E00               	movlw	0
  8439  002C16  140C               	andwf	___xxtofl@arg+1,w,c
  8440  002C18  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8441  002C1A  0E00               	movlw	0
  8442  002C1C  140D               	andwf	___xxtofl@arg+2,w,c
  8443  002C1E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8444  002C20  0EFF               	movlw	255
  8445  002C22  140E               	andwf	___xxtofl@arg+3,w,c
  8446  002C24  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8447  002C26  5005               	movf	??___xxtofl,w,c
  8448  002C28  1006               	iorwf	??___xxtofl+1,w,c
  8449  002C2A  1007               	iorwf	??___xxtofl+2,w,c
  8450  002C2C  1008               	iorwf	??___xxtofl+3,w,c
  8451  002C2E  B4D8               	btfsc	status,2,c
  8452  002C30  D007               	goto	l4395
  8453  002C32  D7E1               	goto	l4387
  8454  002C34                     l4393:
  8455  002C34  060A               	decf	___xxtofl@exp,f,c
  8456  002C36  90D8               	bcf	status,0,c
  8457  002C38  360B               	rlcf	___xxtofl@arg,f,c
  8458  002C3A  360C               	rlcf	___xxtofl@arg+1,f,c
  8459  002C3C  360D               	rlcf	___xxtofl@arg+2,f,c
  8460  002C3E  360E               	rlcf	___xxtofl@arg+3,f,c
  8461  002C40                     l4395:
  8462  002C40  BE0D               	btfsc	___xxtofl@arg+2,7,c
  8463  002C42  D003               	goto	u5280
  8464  002C44  0E02               	movlw	2
  8465  002C46  600A               	cpfslt	___xxtofl@exp,c
  8466  002C48  D7F5               	goto	l4393
  8467  002C4A                     u5280:
  8468  002C4A  A00A               	btfss	___xxtofl@exp,0,c
  8469  002C4C  9E0D               	bcf	___xxtofl@arg+2,7,c
  8470  002C4E  90D8               	bcf	status,0,c
  8471  002C50  320A               	rrcf	___xxtofl@exp,f,c
  8472  002C52  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8473  002C56  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  8474  002C58  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  8475  002C5A  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  8476  002C5C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8477  002C60  6A07               	clrf	??___xxtofl+2,c
  8478  002C62  6A06               	clrf	??___xxtofl+1,c
  8479  002C64  6A05               	clrf	??___xxtofl,c
  8480  002C66  5005               	movf	??___xxtofl,w,c
  8481  002C68  120B               	iorwf	___xxtofl@arg,f,c
  8482  002C6A  5006               	movf	??___xxtofl+1,w,c
  8483  002C6C  120C               	iorwf	___xxtofl@arg+1,f,c
  8484  002C6E  5007               	movf	??___xxtofl+2,w,c
  8485  002C70  120D               	iorwf	___xxtofl@arg+2,f,c
  8486  002C72  5008               	movf	??___xxtofl+3,w,c
  8487  002C74  120E               	iorwf	___xxtofl@arg+3,f,c
  8488  002C76  5009               	movf	___xxtofl@sign,w,c
  8489  002C78  A4D8               	btfss	status,2,c
  8490  002C7A  AE04               	btfss	___xxtofl@val+3,7,c
  8491  002C7C  D001               	goto	l4411
  8492  002C7E  8E0E               	bsf	___xxtofl@arg+3,7,c
  8493  002C80                     l4411:
  8494  002C80  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8495  002C84  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8496  002C88  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8497  002C8C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8498  002C90  0012               	return		;funcret
  8499  002C92                     __end_of___xxtofl:
  8500                           	opt callstack 0
  8501                           
  8502 ;; *************** function _TIMER1_Start *****************
  8503 ;; Defined at:
  8504 ;;		line 228 in file "main.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;		None
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      void 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8518 ;;      Params:         0       0       0       0       0       0       0       0       0
  8519 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8521 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8522 ;;Total ram usage:        0 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    1
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_main
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           	psect	text33
  8533  003768                     __ptext33:
  8534                           	opt callstack 0
  8535  003768                     _TIMER1_Start:
  8536                           	opt callstack 29
  8537                           
  8538                           ;main.c: 230:     GIE=1;
  8539                           
  8540                           ;incstack = 0
  8541  003768  8EF2               	bsf	4082,7,c	;volatile
  8542                           
  8543                           ;main.c: 231:     PEIE=1;
  8544  00376A  8CF2               	bsf	4082,6,c	;volatile
  8545                           
  8546                           ;main.c: 232:     TMR1IE=1;
  8547  00376C  809D               	bsf	3997,0,c	;volatile
  8548                           
  8549                           ;main.c: 233:     TMR1IF=0;
  8550  00376E  909E               	bcf	3998,0,c	;volatile
  8551                           
  8552                           ;main.c: 236:     T1CON=0x80;
  8553  003770  0E80               	movlw	128
  8554  003772  6ECD               	movwf	4045,c	;volatile
  8555                           
  8556                           ;main.c: 238:     TMR1=0xfff6;
  8557  003774  0EFF               	movlw	255
  8558  003776  6ECF               	movwf	4047,c	;volatile
  8559  003778  0EF6               	movlw	246
  8560  00377A  6ECE               	movwf	4046,c	;volatile
  8561                           
  8562                           ;main.c: 239:     TMR1ON=1;
  8563  00377C  80CD               	bsf	4045,0,c	;volatile
  8564  00377E  0012               	return		;funcret
  8565  003780                     __end_of_TIMER1_Start:
  8566                           	opt callstack 0
  8567                           
  8568 ;; *************** function _LCD_String_xy *****************
  8569 ;; Defined at:
  8570 ;;		line 181 in file "main.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;  row             1    wreg     unsigned char 
  8573 ;;  pos             1   10[COMRAM] unsigned char 
  8574 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  8575 ;;		 -> power_str(7), current_str(7), voltage_str(7), 
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;  row             1   13[COMRAM] unsigned char 
  8578 ;;  location        1   14[COMRAM] unsigned char 
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  1    wreg      void 
  8581 ;; Registers used:
  8582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8588 ;;      Params:         3       0       0       0       0       0       0       0       0
  8589 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8591 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8592 ;;Total ram usage:        5 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; Hardware stack levels required when called:    4
  8595 ;; This function calls:
  8596 ;;		_LCD_Command
  8597 ;;		_LCD_String
  8598 ;; This function is called by:
  8599 ;;		_main
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text34
  8604  003562                     __ptext34:
  8605                           	opt callstack 0
  8606  003562                     _LCD_String_xy:
  8607                           	opt callstack 26
  8608                           
  8609                           ;incstack = 0
  8610                           ;LCD_String_xy@row stored from wreg
  8611  003562  6E0E               	movwf	LCD_String_xy@row,c
  8612                           
  8613                           ;main.c: 184:     if(row<=1)
  8614  003564  0E02               	movlw	2
  8615  003566  600E               	cpfslt	LCD_String_xy@row,c
  8616  003568  D008               	goto	l4363
  8617                           
  8618                           ;main.c: 185:     {;main.c: 186:         location=(0x80) | ((pos) & 0x0f);
  8619  00356A  500B               	movf	LCD_String_xy@pos,w,c
  8620  00356C  0B0F               	andlw	15
  8621  00356E  0980               	iorlw	128
  8622  003570  6E0F               	movwf	LCD_String_xy@location,c
  8623                           
  8624                           ;main.c: 187:         LCD_Command(location);
  8625  003572  500F               	movf	LCD_String_xy@location,w,c
  8626  003574  EC2C  F01A         	call	_LCD_Command
  8627                           
  8628                           ;main.c: 188:     }
  8629  003578  D007               	goto	l4367
  8630  00357A                     l4363:
  8631                           
  8632                           ;main.c: 190:     {;main.c: 191:         location=(0xC0) | ((pos) & 0x0f);
  8633  00357A  500B               	movf	LCD_String_xy@pos,w,c
  8634  00357C  0B0F               	andlw	15
  8635  00357E  09C0               	iorlw	192
  8636  003580  6E0F               	movwf	LCD_String_xy@location,c
  8637                           
  8638                           ;main.c: 192:         LCD_Command(location);
  8639  003582  500F               	movf	LCD_String_xy@location,w,c
  8640  003584  EC2C  F01A         	call	_LCD_Command
  8641  003588                     l4367:
  8642                           
  8643                           ;main.c: 196:     LCD_String(msg);
  8644  003588  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
  8645  00358C  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  8646  003590  EC7F  F01B         	call	_LCD_String	;wreg free
  8647  003594  0012               	return		;funcret
  8648  003596                     __end_of_LCD_String_xy:
  8649                           	opt callstack 0
  8650                           
  8651 ;; *************** function _LCD_String *****************
  8652 ;; Defined at:
  8653 ;;		line 172 in file "main.c"
  8654 ;; Parameters:    Size  Location     Type
  8655 ;;  msg             2    8[COMRAM] PTR const unsigned char 
  8656 ;;		 -> power_str(7), current_str(7), voltage_str(7), 
  8657 ;; Auto vars:     Size  Location     Type
  8658 ;;		None
  8659 ;; Return value:  Size  Location     Type
  8660 ;;                  1    wreg      void 
  8661 ;; Registers used:
  8662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8663 ;; Tracked objects:
  8664 ;;		On entry : 0/0
  8665 ;;		On exit  : 0/0
  8666 ;;		Unchanged: 0/0
  8667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8668 ;;      Params:         2       0       0       0       0       0       0       0       0
  8669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8671 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8672 ;;Total ram usage:        2 bytes
  8673 ;; Hardware stack levels used:    1
  8674 ;; Hardware stack levels required when called:    3
  8675 ;; This function calls:
  8676 ;;		_LCD_Char
  8677 ;; This function is called by:
  8678 ;;		_LCD_String_xy
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682                           	psect	text35
  8683  0036FE                     __ptext35:
  8684                           	opt callstack 0
  8685  0036FE                     _LCD_String:
  8686                           	opt callstack 26
  8687                           
  8688                           ;main.c: 172: void LCD_String(const char *msg);main.c: 173: {;main.c: 174:  while((*msg)
      +                          !=0)
  8689                           
  8690                           ;incstack = 0
  8691  0036FE  D009               	goto	l4217
  8692  003700                     l4213:
  8693                           
  8694                           ;main.c: 175:  {;main.c: 176:    LCD_Char(*msg);
  8695  003700  C009  FFD9         	movff	LCD_String@msg,fsr2l
  8696  003704  C00A  FFDA         	movff	LCD_String@msg+1,fsr2h
  8697  003708  50DF               	movf	indf2,w,c
  8698  00370A  EC06  F01A         	call	_LCD_Char
  8699                           
  8700                           ;main.c: 177:    msg++;
  8701  00370E  4A09               	infsnz	LCD_String@msg,f,c
  8702  003710  2A0A               	incf	LCD_String@msg+1,f,c
  8703  003712                     l4217:
  8704                           
  8705                           ;main.c: 174:  while((*msg)!=0)
  8706  003712  C009  FFD9         	movff	LCD_String@msg,fsr2l
  8707  003716  C00A  FFDA         	movff	LCD_String@msg+1,fsr2h
  8708  00371A  50DF               	movf	indf2,w,c
  8709  00371C  B4D8               	btfsc	status,2,c
  8710  00371E  0012               	return	
  8711  003720  D7EF               	goto	l4213
  8712  003722                     __end_of_LCD_String:
  8713                           	opt callstack 0
  8714                           
  8715 ;; *************** function _LCD_Char *****************
  8716 ;; Defined at:
  8717 ;;		line 158 in file "main.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;  dat             1    wreg     unsigned char 
  8720 ;; Auto vars:     Size  Location     Type
  8721 ;;  dat             1    7[COMRAM] unsigned char 
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  1    wreg      void 
  8724 ;; Registers used:
  8725 ;;		wreg, status,2, status,0, cstack
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8731 ;;      Params:         0       0       0       0       0       0       0       0       0
  8732 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8733 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8734 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8735 ;;Total ram usage:        2 bytes
  8736 ;; Hardware stack levels used:    1
  8737 ;; Hardware stack levels required when called:    2
  8738 ;; This function calls:
  8739 ;;		_MSdelay
  8740 ;; This function is called by:
  8741 ;;		_LCD_String
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           	psect	text36
  8746  00340C                     __ptext36:
  8747                           	opt callstack 0
  8748  00340C                     _LCD_Char:
  8749                           	opt callstack 26
  8750                           
  8751                           ;incstack = 0
  8752                           ;LCD_Char@dat stored from wreg
  8753  00340C  6E08               	movwf	LCD_Char@dat,c
  8754                           
  8755                           ;main.c: 158: void LCD_Char(unsigned char dat);main.c: 159: {;main.c: 160:  LATB = (LATB
      +                           & 0x0f) | (0xF0 & dat);
  8756  00340E  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  8757  003412  0EF0               	movlw	240
  8758  003414  1607               	andwf	??_LCD_Char,f,c
  8759  003416  508A               	movf	3978,w,c	;volatile
  8760  003418  0B0F               	andlw	15
  8761  00341A  1007               	iorwf	??_LCD_Char,w,c
  8762  00341C  6E8A               	movwf	3978,c	;volatile
  8763                           
  8764                           ;main.c: 161:  LATB0 = 1;
  8765  00341E  808A               	bsf	3978,0,c	;volatile
  8766                           
  8767                           ;main.c: 162:  LATB1 = 1;
  8768  003420  828A               	bsf	3978,1,c	;volatile
  8769                           
  8770                           ;main.c: 163:  __nop();
  8771  003422  F000               	nop	
  8772                           
  8773                           ;main.c: 164:  LATB1 = 0;
  8774  003424  928A               	bcf	3978,1,c	;volatile
  8775                           
  8776                           ;main.c: 165:  MSdelay(1);
  8777  003426  0E00               	movlw	0
  8778  003428  6E02               	movwf	MSdelay@val+1,c
  8779  00342A  0E01               	movlw	1
  8780  00342C  6E01               	movwf	MSdelay@val,c
  8781  00342E  ECCB  F01A         	call	_MSdelay	;wreg free
  8782                           
  8783                           ;main.c: 166:     LATB = (LATB & 0x0f) | (dat<<4);
  8784  003432  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  8785  003436  3A07               	swapf	??_LCD_Char,f,c
  8786  003438  0EF0               	movlw	240
  8787  00343A  1607               	andwf	??_LCD_Char,f,c
  8788  00343C  508A               	movf	3978,w,c	;volatile
  8789  00343E  0B0F               	andlw	15
  8790  003440  1007               	iorwf	??_LCD_Char,w,c
  8791  003442  6E8A               	movwf	3978,c	;volatile
  8792                           
  8793                           ;main.c: 167:  LATB1 = 1;
  8794  003444  828A               	bsf	3978,1,c	;volatile
  8795                           
  8796                           ;main.c: 168:  __nop();
  8797  003446  F000               	nop	
  8798                           
  8799                           ;main.c: 169:  LATB1 = 0;
  8800  003448  928A               	bcf	3978,1,c	;volatile
  8801                           
  8802                           ;main.c: 170:  MSdelay(3);
  8803  00344A  0E00               	movlw	0
  8804  00344C  6E02               	movwf	MSdelay@val+1,c
  8805  00344E  0E03               	movlw	3
  8806  003450  6E01               	movwf	MSdelay@val,c
  8807  003452  ECCB  F01A         	call	_MSdelay	;wreg free
  8808  003456  0012               	return		;funcret
  8809  003458                     __end_of_LCD_Char:
  8810                           	opt callstack 0
  8811                           
  8812 ;; *************** function _LCD_Init *****************
  8813 ;; Defined at:
  8814 ;;		line 129 in file "main.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;		None
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  1    wreg      void 
  8821 ;; Registers used:
  8822 ;;		wreg, status,2, status,0, cstack
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8828 ;;      Params:         0       0       0       0       0       0       0       0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8831 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8832 ;;Total ram usage:        0 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; Hardware stack levels required when called:    3
  8835 ;; This function calls:
  8836 ;;		_LCD_Command
  8837 ;;		_MSdelay
  8838 ;; This function is called by:
  8839 ;;		_main
  8840 ;; This function uses a non-reentrant model
  8841 ;;
  8842                           
  8843                           	psect	text37
  8844  00362A                     __ptext37:
  8845                           	opt callstack 0
  8846  00362A                     _LCD_Init:
  8847                           	opt callstack 27
  8848                           
  8849                           ;main.c: 131:     TRISB = 0;
  8850                           
  8851                           ;incstack = 0
  8852  00362A  0E00               	movlw	0
  8853  00362C  6E93               	movwf	3987,c	;volatile
  8854                           
  8855                           ;main.c: 132:     MSdelay(15);
  8856  00362E  0E00               	movlw	0
  8857  003630  6E02               	movwf	MSdelay@val+1,c
  8858  003632  0E0F               	movlw	15
  8859  003634  6E01               	movwf	MSdelay@val,c
  8860  003636  ECCB  F01A         	call	_MSdelay	;wreg free
  8861                           
  8862                           ;main.c: 133:     LCD_Command(0x02);
  8863  00363A  0E02               	movlw	2
  8864  00363C  EC2C  F01A         	call	_LCD_Command
  8865                           
  8866                           ;main.c: 135:     LCD_Command(0x28);
  8867  003640  0E28               	movlw	40
  8868  003642  EC2C  F01A         	call	_LCD_Command
  8869                           
  8870                           ;main.c: 137:  LCD_Command(0x01);
  8871  003646  0E01               	movlw	1
  8872  003648  EC2C  F01A         	call	_LCD_Command
  8873                           
  8874                           ;main.c: 138:     LCD_Command(0x0c);
  8875  00364C  0E0C               	movlw	12
  8876  00364E  EC2C  F01A         	call	_LCD_Command
  8877                           
  8878                           ;main.c: 139:  LCD_Command(0x06);
  8879  003652  0E06               	movlw	6
  8880  003654  EC2C  F01A         	call	_LCD_Command
  8881  003658  0012               	return		;funcret
  8882  00365A                     __end_of_LCD_Init:
  8883                           	opt callstack 0
  8884                           
  8885 ;; *************** function _LCD_Clear *****************
  8886 ;; Defined at:
  8887 ;;		line 199 in file "main.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;		None
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;		None
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  1    wreg      void 
  8894 ;; Registers used:
  8895 ;;		wreg, status,2, status,0, cstack
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8901 ;;      Params:         0       0       0       0       0       0       0       0       0
  8902 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8904 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8905 ;;Total ram usage:        0 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; Hardware stack levels required when called:    3
  8908 ;; This function calls:
  8909 ;;		_LCD_Command
  8910 ;;		_MSdelay
  8911 ;; This function is called by:
  8912 ;;		_main
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           	psect	text38
  8917  003780                     __ptext38:
  8918                           	opt callstack 0
  8919  003780                     _LCD_Clear:
  8920                           	opt callstack 27
  8921                           
  8922                           ;main.c: 201:     LCD_Command(0x01);
  8923                           
  8924                           ;incstack = 0
  8925  003780  0E01               	movlw	1
  8926  003782  EC2C  F01A         	call	_LCD_Command
  8927                           
  8928                           ;main.c: 202:     MSdelay(3);
  8929  003786  0E00               	movlw	0
  8930  003788  6E02               	movwf	MSdelay@val+1,c
  8931  00378A  0E03               	movlw	3
  8932  00378C  6E01               	movwf	MSdelay@val,c
  8933  00378E  ECCB  F01A         	call	_MSdelay	;wreg free
  8934  003792  0012               	return		;funcret
  8935  003794                     __end_of_LCD_Clear:
  8936                           	opt callstack 0
  8937                           
  8938 ;; *************** function _LCD_Command *****************
  8939 ;; Defined at:
  8940 ;;		line 142 in file "main.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;  cmd             1    wreg     unsigned char 
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;  cmd             1    7[COMRAM] unsigned char 
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  1    wreg      void 
  8947 ;; Registers used:
  8948 ;;		wreg, status,2, status,0, cstack
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8954 ;;      Params:         0       0       0       0       0       0       0       0       0
  8955 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8956 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8957 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8958 ;;Total ram usage:        2 bytes
  8959 ;; Hardware stack levels used:    1
  8960 ;; Hardware stack levels required when called:    2
  8961 ;; This function calls:
  8962 ;;		_MSdelay
  8963 ;; This function is called by:
  8964 ;;		_LCD_Init
  8965 ;;		_LCD_String_xy
  8966 ;;		_LCD_Clear
  8967 ;;		_LCD_Shift_Right
  8968 ;; This function uses a non-reentrant model
  8969 ;;
  8970                           
  8971                           	psect	text39
  8972  003458                     __ptext39:
  8973                           	opt callstack 0
  8974  003458                     _LCD_Command:
  8975                           	opt callstack 27
  8976                           
  8977                           ;incstack = 0
  8978                           ;LCD_Command@cmd stored from wreg
  8979  003458  6E08               	movwf	LCD_Command@cmd,c
  8980                           
  8981                           ;main.c: 142: void LCD_Command(unsigned char cmd );main.c: 143: {;main.c: 144:  LATB = (
      +                          LATB & 0x0f) |(0xF0 & cmd);
  8982  00345A  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  8983  00345E  0EF0               	movlw	240
  8984  003460  1607               	andwf	??_LCD_Command,f,c
  8985  003462  508A               	movf	3978,w,c	;volatile
  8986  003464  0B0F               	andlw	15
  8987  003466  1007               	iorwf	??_LCD_Command,w,c
  8988  003468  6E8A               	movwf	3978,c	;volatile
  8989                           
  8990                           ;main.c: 145:  LATB0 = 0;
  8991  00346A  908A               	bcf	3978,0,c	;volatile
  8992                           
  8993                           ;main.c: 146:  LATB1 = 1;
  8994  00346C  828A               	bsf	3978,1,c	;volatile
  8995                           
  8996                           ;main.c: 147:  __nop();
  8997  00346E  F000               	nop	
  8998                           
  8999                           ;main.c: 148:  LATB1 = 0;
  9000  003470  928A               	bcf	3978,1,c	;volatile
  9001                           
  9002                           ;main.c: 149:  MSdelay(1);
  9003  003472  0E00               	movlw	0
  9004  003474  6E02               	movwf	MSdelay@val+1,c
  9005  003476  0E01               	movlw	1
  9006  003478  6E01               	movwf	MSdelay@val,c
  9007  00347A  ECCB  F01A         	call	_MSdelay	;wreg free
  9008                           
  9009                           ;main.c: 150:     LATB = (LATB & 0x0f) | (cmd<<4);
  9010  00347E  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  9011  003482  3A07               	swapf	??_LCD_Command,f,c
  9012  003484  0EF0               	movlw	240
  9013  003486  1607               	andwf	??_LCD_Command,f,c
  9014  003488  508A               	movf	3978,w,c	;volatile
  9015  00348A  0B0F               	andlw	15
  9016  00348C  1007               	iorwf	??_LCD_Command,w,c
  9017  00348E  6E8A               	movwf	3978,c	;volatile
  9018                           
  9019                           ;main.c: 151:  LATB1 = 1;
  9020  003490  828A               	bsf	3978,1,c	;volatile
  9021                           
  9022                           ;main.c: 152:  __nop();
  9023  003492  F000               	nop	
  9024                           
  9025                           ;main.c: 153:  LATB1 = 0;
  9026  003494  928A               	bcf	3978,1,c	;volatile
  9027                           
  9028                           ;main.c: 154:  MSdelay(3);
  9029  003496  0E00               	movlw	0
  9030  003498  6E02               	movwf	MSdelay@val+1,c
  9031  00349A  0E03               	movlw	3
  9032  00349C  6E01               	movwf	MSdelay@val,c
  9033  00349E  ECCB  F01A         	call	_MSdelay	;wreg free
  9034  0034A2  0012               	return		;funcret
  9035  0034A4                     __end_of_LCD_Command:
  9036                           	opt callstack 0
  9037                           
  9038 ;; *************** function _MSdelay *****************
  9039 ;; Defined at:
  9040 ;;		line 211 in file "main.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;  val             2    0[COMRAM] unsigned int 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  j               2    4[COMRAM] unsigned int 
  9045 ;;  i               2    2[COMRAM] unsigned int 
  9046 ;; Return value:  Size  Location     Type
  9047 ;;                  1    wreg      void 
  9048 ;; Registers used:
  9049 ;;		wreg, status,2, status,0
  9050 ;; Tracked objects:
  9051 ;;		On entry : 0/0
  9052 ;;		On exit  : 0/0
  9053 ;;		Unchanged: 0/0
  9054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9055 ;;      Params:         2       0       0       0       0       0       0       0       0
  9056 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9058 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9059 ;;Total ram usage:        6 bytes
  9060 ;; Hardware stack levels used:    1
  9061 ;; Hardware stack levels required when called:    1
  9062 ;; This function calls:
  9063 ;;		Nothing
  9064 ;; This function is called by:
  9065 ;;		_main
  9066 ;;		_LCD_Init
  9067 ;;		_LCD_Command
  9068 ;;		_LCD_Char
  9069 ;;		_LCD_Clear
  9070 ;;		_LCD_Shift_Right
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074                           	psect	text40
  9075  003596                     __ptext40:
  9076                           	opt callstack 0
  9077  003596                     _MSdelay:
  9078                           	opt callstack 29
  9079                           
  9080                           ;main.c: 211: void MSdelay(unsigned int val);main.c: 212: {;main.c: 213:  unsigned int i
      +                          ,j;;main.c: 214:  for(i=0;i<val;i++)
  9081                           
  9082                           ;incstack = 0
  9083  003596  0E00               	movlw	0
  9084  003598  6E04               	movwf	MSdelay@i+1,c
  9085  00359A  0E00               	movlw	0
  9086  00359C  6E03               	movwf	MSdelay@i,c
  9087  00359E  D00E               	goto	l3681
  9088  0035A0                     l3669:
  9089                           
  9090                           ;main.c: 215:      for(j=0;j<165;j++);
  9091  0035A0  0E00               	movlw	0
  9092  0035A2  6E06               	movwf	MSdelay@j+1,c
  9093  0035A4  0E00               	movlw	0
  9094  0035A6  6E05               	movwf	MSdelay@j,c
  9095  0035A8                     l3675:
  9096  0035A8  4A05               	infsnz	MSdelay@j,f,c
  9097  0035AA  2A06               	incf	MSdelay@j+1,f,c
  9098  0035AC  5006               	movf	MSdelay@j+1,w,c
  9099  0035AE  E104               	bnz	u4160
  9100  0035B0  0EA5               	movlw	165
  9101  0035B2  5C05               	subwf	MSdelay@j,w,c
  9102  0035B4  A0D8               	btfss	status,0,c
  9103  0035B6  D7F8               	goto	l3675
  9104  0035B8                     u4160:
  9105  0035B8  4A03               	infsnz	MSdelay@i,f,c
  9106  0035BA  2A04               	incf	MSdelay@i+1,f,c
  9107  0035BC                     l3681:
  9108  0035BC  5001               	movf	MSdelay@val,w,c
  9109  0035BE  5C03               	subwf	MSdelay@i,w,c
  9110  0035C0  5002               	movf	MSdelay@val+1,w,c
  9111  0035C2  5804               	subwfb	MSdelay@i+1,w,c
  9112  0035C4  B0D8               	btfsc	status,0,c
  9113  0035C6  0012               	return	
  9114  0035C8  D7EB               	goto	l3669
  9115  0035CA                     __end_of_MSdelay:
  9116                           	opt callstack 0
  9117                           
  9118 ;; *************** function _ADC_Read *****************
  9119 ;; Defined at:
  9120 ;;		line 252 in file "main.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;  channel         2    0[COMRAM] int 
  9123 ;; Auto vars:     Size  Location     Type
  9124 ;;  digital         2    6[COMRAM] int 
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  2    0[COMRAM] int 
  9127 ;; Registers used:
  9128 ;;		wreg, status,2, status,0
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9134 ;;      Params:         2       0       0       0       0       0       0       0       0
  9135 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9136 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9137 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9138 ;;Total ram usage:        8 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:    1
  9141 ;; This function calls:
  9142 ;;		Nothing
  9143 ;; This function is called by:
  9144 ;;		_main
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           	psect	text41
  9149  0031D4                     __ptext41:
  9150                           	opt callstack 0
  9151  0031D4                     _ADC_Read:
  9152                           	opt callstack 29
  9153                           
  9154                           ;main.c: 252: int ADC_Read(int channel);main.c: 253: {;main.c: 254:     int digital;;mai
      +                          n.c: 255:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111100);
  9155                           
  9156                           ;incstack = 0
  9157  0031D4  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  9158  0031D8  90D8               	bcf	status,0,c
  9159  0031DA  3603               	rlcf	??_ADC_Read,f,c
  9160  0031DC  90D8               	bcf	status,0,c
  9161  0031DE  3603               	rlcf	??_ADC_Read,f,c
  9162  0031E0  0E3C               	movlw	60
  9163  0031E2  1603               	andwf	??_ADC_Read,f,c
  9164  0031E4  50C2               	movf	4034,w,c	;volatile
  9165  0031E6  0BC3               	andlw	195
  9166  0031E8  1003               	iorwf	??_ADC_Read,w,c
  9167  0031EA  6EC2               	movwf	4034,c	;volatile
  9168                           
  9169                           ;main.c: 258:     ADCON0 |= ((1<<ADON)|(1<<GO));
  9170  0031EC  A2C2               	btfss	4034,1,c	;volatile
  9171  0031EE  D003               	goto	u5000
  9172  0031F0  6A03               	clrf	??_ADC_Read& (0+255),c
  9173  0031F2  2A03               	incf	??_ADC_Read& (0+255),f,c
  9174  0031F4  D001               	goto	u5018
  9175  0031F6                     u5000:
  9176  0031F6  6A03               	clrf	??_ADC_Read& (0+255),c
  9177  0031F8                     u5018:
  9178  0031F8  0E01               	movlw	1
  9179  0031FA  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  9180  0031FC  2A03               	incf	??_ADC_Read,f,c
  9181  0031FE  D002               	goto	u5024
  9182  003200                     u5025:
  9183  003200  90D8               	bcf	status,0,c
  9184  003202  3604               	rlcf	??_ADC_Read+1,f,c
  9185  003204                     u5024:
  9186  003204  2E03               	decfsz	??_ADC_Read,f,c
  9187  003206  D7FC               	goto	u5025
  9188  003208  A0C2               	btfss	4034,0,c	;volatile
  9189  00320A  D003               	goto	u5030
  9190  00320C  6A05               	clrf	(??_ADC_Read+2)& (0+255),c
  9191  00320E  2A05               	incf	(??_ADC_Read+2)& (0+255),f,c
  9192  003210  D001               	goto	u5048
  9193  003212                     u5030:
  9194  003212  6A05               	clrf	(??_ADC_Read+2)& (0+255),c
  9195  003214                     u5048:
  9196  003214  0E01               	movlw	1
  9197  003216  6E06               	movwf	(??_ADC_Read+3)& (0+255),c
  9198  003218  2A05               	incf	??_ADC_Read+2,f,c
  9199  00321A  D002               	goto	u5054
  9200  00321C                     u5055:
  9201  00321C  90D8               	bcf	status,0,c
  9202  00321E  3606               	rlcf	??_ADC_Read+3,f,c
  9203  003220                     u5054:
  9204  003220  2E05               	decfsz	??_ADC_Read+2,f,c
  9205  003222  D7FC               	goto	u5055
  9206  003224  5006               	movf	??_ADC_Read+3,w,c
  9207  003226  1004               	iorwf	??_ADC_Read+1,w,c
  9208  003228  12C2               	iorwf	4034,f,c	;volatile
  9209  00322A                     l166:
  9210  00322A  B2C2               	btfsc	4034,1,c	;volatile
  9211  00322C  D7FE               	goto	l166
  9212                           
  9213                           ;main.c: 263:     digital = (ADRESH*256) | (ADRESL);
  9214  00322E  50C3               	movf	4035,w,c	;volatile
  9215  003230  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  9216  003234  6A04               	clrf	(??_ADC_Read+1)& (0+255),c
  9217  003236  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  9218  00323A  6A03               	clrf	??_ADC_Read,c
  9219  00323C  1003               	iorwf	??_ADC_Read,w,c
  9220  00323E  6E07               	movwf	ADC_Read@digital,c
  9221  003240  5004               	movf	??_ADC_Read+1,w,c
  9222  003242  6E08               	movwf	ADC_Read@digital+1,c
  9223                           
  9224                           ;main.c: 264:     return(digital);
  9225  003244  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  9226  003248  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  9227  00324C  0012               	return		;funcret
  9228  00324E                     __end_of_ADC_Read:
  9229                           	opt callstack 0
  9230                           
  9231 ;; *************** function _ADC_Init *****************
  9232 ;; Defined at:
  9233 ;;		line 242 in file "main.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;		None
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;		None
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  1    wreg      void 
  9240 ;; Registers used:
  9241 ;;		wreg, status,2
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9247 ;;      Params:         0       0       0       0       0       0       0       0       0
  9248 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9250 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9251 ;;Total ram usage:        0 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; Hardware stack levels required when called:    1
  9254 ;; This function calls:
  9255 ;;		Nothing
  9256 ;; This function is called by:
  9257 ;;		_main
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text42
  9262  003794                     __ptext42:
  9263                           	opt callstack 0
  9264  003794                     _ADC_Init:
  9265                           	opt callstack 29
  9266                           
  9267                           ;main.c: 244:     TRISA = 0xff;
  9268                           
  9269                           ;incstack = 0
  9270  003794  6892               	setf	3986,c	;volatile
  9271                           
  9272                           ;main.c: 246:     ADCON1 = 0x0d;
  9273  003796  0E0D               	movlw	13
  9274  003798  6EC1               	movwf	4033,c	;volatile
  9275                           
  9276                           ;main.c: 247:     ADCON2 = 0x92;
  9277  00379A  0E92               	movlw	146
  9278  00379C  6EC0               	movwf	4032,c	;volatile
  9279                           
  9280                           ;main.c: 248:     ADRESH=0;
  9281  00379E  0E00               	movlw	0
  9282  0037A0  6EC4               	movwf	4036,c	;volatile
  9283                           
  9284                           ;main.c: 249:     ADRESL=0;
  9285  0037A2  0E00               	movlw	0
  9286  0037A4  6EC3               	movwf	4035,c	;volatile
  9287  0037A6  0012               	return		;funcret
  9288  0037A8                     __end_of_ADC_Init:
  9289                           	opt callstack 0
  9290                           
  9291 ;; *************** function _timer1_isr *****************
  9292 ;; Defined at:
  9293 ;;		line 219 in file "main.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;		None
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1    wreg      void 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2, status,0
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9307 ;;      Params:         0       0       0       0       0       0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9310 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9311 ;;Total ram usage:        0 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; This function calls:
  9314 ;;		Nothing
  9315 ;; This function is called by:
  9316 ;;		Interrupt level 2
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           	psect	intcode
  9321  000008                     __pintcode:
  9322                           	opt callstack 0
  9323  000008                     _timer1_isr:
  9324                           	opt callstack 22
  9325                           
  9326                           ;incstack = 0
  9327  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9328  00000A  ED91  F01B         	call	int_func,f	;refresh shadow registers
  9329                           
  9330                           	psect	intcode_body
  9331  003722                     __pintcode_body:
  9332                           	opt callstack 22
  9333  003722                     int_func:
  9334                           	opt callstack 22
  9335  003722  0006               	pop		; remove dummy address from shadow register refresh
  9336                           
  9337                           ;main.c: 221:     counter++;
  9338  003724  0E01               	movlw	1
  9339  003726  0101               	movlb	1	; () banked
  9340  003728  270F               	addwf	_counter& (0+255),f,b
  9341  00372A  0E00               	movlw	0
  9342  00372C  2310               	addwfc	(_counter+1)& (0+255),f,b
  9343  00372E  2311               	addwfc	(_counter+2)& (0+255),f,b
  9344  003730  2312               	addwfc	(_counter+3)& (0+255),f,b
  9345                           
  9346                           ; BSR set to: 1
  9347                           ;main.c: 222:     counter2++;
  9348  003732  0100               	movlb	0	; () banked
  9349  003734  4BF1               	infsnz	_counter2& (0+255),f,b
  9350  003736  2BF2               	incf	(_counter2+1)& (0+255),f,b
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;main.c: 223:     TMR1=0xfff6;
  9354  003738  0EFF               	movlw	255
  9355  00373A  6ECF               	movwf	4047,c	;volatile
  9356  00373C  0EF6               	movlw	246
  9357  00373E  6ECE               	movwf	4046,c	;volatile
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;main.c: 225:     PIR1bits.TMR1IF=0;
  9361  003740  909E               	bcf	3998,0,c	;volatile
  9362                           
  9363                           ; BSR set to: 0
  9364  003742  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9365  003744  0011               	retfie		f
  9366  003746                     __end_of_timer1_isr:
  9367                           	opt callstack 0
  9368                           
  9369                           	psect	rparam
  9370  0000                     
  9371                           	psect	temp
  9372  00005F                     btemp:
  9373                           	opt callstack 0
  9374  00005F                     	ds	1
  9375  0000                     int$flags	set	btemp
  9376  0000                     wtemp8	set	btemp+1
  9377  0000                     ttemp5	set	btemp+1
  9378  0000                     ttemp6	set	btemp+4
  9379  0000                     ttemp7	set	btemp+8
  9380                           tosu	equ	0xFFF
  9381                           tosh	equ	0xFFE
  9382                           tosl	equ	0xFFD
  9383                           stkptr	equ	0xFFC
  9384                           pclatu	equ	0xFFB
  9385                           pclath	equ	0xFFA
  9386                           pcl	equ	0xFF9
  9387                           tblptru	equ	0xFF8
  9388                           tblptrh	equ	0xFF7
  9389                           tblptrl	equ	0xFF6
  9390                           tablat	equ	0xFF5
  9391                           prodh	equ	0xFF4
  9392                           prodl	equ	0xFF3
  9393                           indf0	equ	0xFEF
  9394                           postinc0	equ	0xFEE
  9395                           postdec0	equ	0xFED
  9396                           preinc0	equ	0xFEC
  9397                           plusw0	equ	0xFEB
  9398                           fsr0h	equ	0xFEA
  9399                           fsr0l	equ	0xFE9
  9400                           wreg	equ	0xFE8
  9401                           indf1	equ	0xFE7
  9402                           postinc1	equ	0xFE6
  9403                           postdec1	equ	0xFE5
  9404                           preinc1	equ	0xFE4
  9405                           plusw1	equ	0xFE3
  9406                           fsr1h	equ	0xFE2
  9407                           fsr1l	equ	0xFE1
  9408                           bsr	equ	0xFE0
  9409                           indf2	equ	0xFDF
  9410                           postinc2	equ	0xFDE
  9411                           postdec2	equ	0xFDD
  9412                           preinc2	equ	0xFDC
  9413                           plusw2	equ	0xFDB
  9414                           fsr2h	equ	0xFDA
  9415                           fsr2l	equ	0xFD9
  9416                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    4
    Data        0
    BSS         172
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    133     159
    BANK1           256      0     146
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_17(CODE[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[9]), STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 7
		 -> power_str(BANK1[7]), current_str(BANK1[7]), voltage_str(BANK1[7]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 7
		 -> power_str(BANK1[7]), current_str(BANK1[7]), voltage_str(BANK1[7]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S912_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 7
		 -> power_str(BANK1[7]), current_str(BANK1[7]), voltage_str(BANK1[7]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 7
		 -> power_str(BANK1[7]), current_str(BANK1[7]), voltage_str(BANK1[7]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[9]), STR_1(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[9]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[9]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 7
		 -> power_str(BANK1[7]), current_str(BANK1[7]), voltage_str(BANK1[7]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 7
		 -> power_str(BANK1[7]), current_str(BANK1[7]), voltage_str(BANK1[7]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _sqrtf->___fladd
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flge
    _atoi->_isspace
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _timer1_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _timer1_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer1_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer1_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer1_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer1_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer1_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer1_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer1_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   60083
                                            128 BANK0      5     5      0
                           _ADC_Init
                           _ADC_Read
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                       _TIMER1_Start
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _sprintf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (1) _sqrtf                                               49    45      4    9181
                                              0 BANK0     49    45      4
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (2) _nanf                                                 8     4      4      99
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   32296
                                            110 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   31635
                                            102 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   31252
                                             78 BANK0     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   25797
                                             10 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             76 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     533
                                             92 COMRAM     2     2      0
                                              0 BANK0      8     4      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                              0 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3174
                                             76 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3720
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1246
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2615
                                             51 COMRAM    25    17      8
                             ___flge (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                               _nanf (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     778
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _TIMER1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    2352
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     941
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0     820
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1596
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    1596
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0     820
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     776
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             8     6      2     197
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _timer1_isr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _TIMER1_Start
   ___fladd
     ___fldiv (ARG)
       ___flge (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _nanf (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flge (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _nanf (ARG)
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___fldiv (ARG)
         ___flge (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _nanf (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___fldiv (ARG)
               ___flge (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _nanf (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flge (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _nanf (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flge (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _nanf (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flge (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _nanf (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flge (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _nanf (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
   _sqrtf
     ___fladd
       ___fldiv (ARG)
         ___flge (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _nanf (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv (ARG)
       ___flge (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _nanf (ARG)
     ___flge (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
     _nanf (ARG)

 _timer1_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      92       7       57.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18F      20        0.0%
DATA                 0      0     18F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jul  4 03:53:39 2019

           ___fldiv@aexp 004C             ___fldiv@bexp 004B             ___fldiv@sign 0044  
           ?_LCD_Command 0001                       _GO 007E11             ___awdiv@sign 0006  
            __CFG_BOR$ON 000000      ___wmul@multiplicand 0003              __CFG_BORV$3 000000  
            ?_LCD_String 0009             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l210 305C  
                    l251 0B72                      l166 322A                      l277 0E54  
                    l617 2D26                      l906 253E                      l907 253A  
                    l936 2742                      l881 2406                      l882 23E4  
                    l947 27B0                      l948 27AC                      l966 1FF2  
                    l983 2290                      l975 220A                      l976 2206  
                    l897 24D8                      _GIE 007F97             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      _pad 302C             ___awmod@sign 0006  
                    wreg 000FE8             ___flmul@aexp 0020             ___flmul@bexp 0021  
           ___flmul@sign 001B             ___flmul@temp 0026             ___flmul@prod 0022  
           __CFG_LVP$OFF 000000              LCD_Char@dat 0008             ___fltol@exp1 005E  
           __CFG_WDT$OFF 000000                     l1014 2C0E                     l1007 2B90  
                   l1062 2B48                     l1151 1E00                     l1144 1CF4  
                   l1153 1EDC                     l1074 2972                     l3003 23F2  
                   l1148 1D48                     l3005 23F6                     l3103 25B2  
                   l1184 3402                     l4001 2A86                     l3105 25B4  
                   l4003 2A8C                     l3027 244C                     l3019 242A  
                   l3123 3054                     l4005 2AB4                     l3029 2450  
                   l3037 2462                     l3133 30AC                     l3125 3066  
                   l3223 25FC                     l3055 24FC                     l3071 251C  
                   l3047 24C8                     l3119 3046                     l4031 2F22  
                   l4009 2AE8                     l3305 2776                     l3065 2512  
                   l3145 2DDA                     l3129 307E                     l3161 337E  
                   l4113 184E                     l3243 263C                     l3227 2600  
                   l3091 2584                     l3155 2E24                     l4115 186C  
                   l4213 3700                     l3341 2850                     l3333 2842  
                   l3325 27F4                     l3261 268A                     l3149 2DE4  
                   l4029 2F14                     l4141 19B0                     l4133 1954  
                   l4117 187A                     l4301 1CC8                     l3255 2674  
                   l3247 2640                     l3431 21B2                     l4223 32D2  
                   l4217 3712                     l3505 318A                     l3521 31BC  
                   l3329 2818                     l3361 1F9E                     l3193 29D2  
                   l4161 1AAA                     l4145 19DA                     l4081 1768  
                   l4073 1752                     l4225 3300                     l4313 1D94  
                   l4411 2C80                     l3507 3192                     l3339 284E  
                   l3363 1FA2                     l3099 25AA                     l3179 28D2  
                   l4171 1AF2                     l4075 1754                     l3525 31CA  
                   l3517 31B2                     l3541 326E                     l3293 2740  
                   l3269 26A2                     l3461 226C                     l3437 21D0  
                   l3381 1FE2                     l3365 1FB2                     l3197 2A00  
                   l3189 2994                     l2901 3692                     l4093 1774  
                   l4085 176C                     l4077 1764                     l4333 1EB2  
                   l3287 271A                     l3279 26F2                     l3607 3676  
                   l2903 3696                     l4167 1AE6                     l4319 1E1A  
                   l3561 32B4                     l3553 329C                     l3545 327C  
                   l3537 3262                     l3473 22AE                     l3457 224E  
                   l3633 2E98                     l3617 2E4E                     l3705 08AE  
                   l3713 08C4                     l4097 177E                     l4089 1770  
                   l4177 1B0C                     l4433 1220                     l4425 11CA  
                   l4363 357A                     l3547 3284                     l3299 2758  
                   l3379 1FDE                     l3651 2ED8                     l3643 2EB0  
                   l3723 0930                     l3731 0978                     l4099 17C0  
                   l4381 2BBE                     l3493 3164                     l3557 32A6  
                   l3573 312E                     l3389 2010                     l2925 22F0  
                   l3645 2EBC                     l3637 2EA8                     l3813 0C10  
                   l3741 09E4                     l3725 0948                     l4285 1C2E  
                   l4293 1C5A                     l4437 124C                     ?_pad 0011  
                   l4367 3588                     l4383 2BC4                     l4375 2BA0  
                   l3663 3522                     l3903 0FFA                     l3823 0C4A  
                   l3831 0D40                     l3807 0BEC                     l3727 0952  
                   l4279 1BE6                     l4463 16E6                     l3681 35BC  
                   l4393 2C34                     l4385 2BD0                     l3577 314C  
                   l3569 30FA                     l3593 2D10                     l3585 2CC6  
                   l2961 235C                     l2953 233C                     l2929 22F4  
                   l3817 0C20                     l3761 0ACA                     l4297 1CB2  
                   l3675 35A8                     l4395 2C40                     l4387 2BF6  
                   l3499 3174                     l2883 2FA4                     l3931 1088  
                   l3915 103C                     l3755 0A42                     l3669 35A0  
                   l3589 2CFA                     l2949 2338                     l2893 3534  
                   l3933 1092                     l3853 0E4C                     l3845 0DF4  
                   l3781 0B7C                     l3765 0B06                     l3749 09FE  
                   l3693 0880                     l3599 2D5E                     l2991 2398  
                   l3943 10E8                     l3855 0E6E                     l3839 0DB6  
                   l3759 0A7C                     l2897 354A                     l3953 1114  
                   l3777 0B5A                     l3867 0EF0                     l3795 0BCA  
                   l3787 0B82                     l3797 0BCE                     l3983 2A24  
                   l3879 0F1E                     l3887 0F3E                     l3895 0F62  
                   l3993 2A6E                     l3985 2A28                     l3969 1174  
                   l3999 2A7E                     _ADON 007E10                     STR_1 0818  
                   STR_2 080F                     STR_3 0805                     STR_4 0821  
                   STR_5 0829                     STR_8 0825                     STR_9 082D  
                   _LATB 000F8A                     u4000 3148                     u3120 2590  
                   u3040 2520                     u3200 2DA0                     u3060 2534  
                   u3300 33EA                     u3205 2D96                     u5000 31F6  
                   u4120 2EC2                     u3320 289E                     u4200 089E  
                   u3250 2E1C                     u3330 28C0                     u3420 3622  
                   u3260 2E1E                     u2700 2F9C                     u3245 2DFE  
                   u3325 2894                     u5030 3212                     u3430 3624  
                   u4150 351E                     u4070 2E3C                     u3270 33B6  
                   u4230 0908                     u5024 3204                     u4160 35B8  
                   u3600 27A6                     u4080 2E6C                     u2720 2FE4  
                   u4320 0B2E                     u4240 090A                     u5025 3200  
                   u5018 31F8                     u3370 2952                     u3290 33E8  
                   u3355 28EA                     u5115 1C6E                     u3356 28F0  
                   u4420 0BE8                     u5116 1C74                     u4085 2E62  
                   u3357 28FE                     u3277 33AC                     u5205 1F22  
                   u5117 1C82                     u5054 3220                     u2910 240E  
                   u3390 29B2                     u2750 35F2                     u4350 0B68  
                   u4270 09BC                     u5055 321C                     u3375 2948  
                   u5048 3214                     u3640 2802                     u2760 35F4  
                   u4280 09BE                     u5080 1BF8                     u3650 2826  
                   u3395 29A8                     _PEIE 007F96                     u3740 1FFE  
                   u2860 23BA                     u4380 0B9A                     u4710 2A6A  
                   u3830 225C                     u3750 2174                     u2870 23CA  
                   u5280 2C4A                     u3840 227A                     u2880 23CC  
                   u4730 2B18                     u4650 10FE                     u4810 2F68  
                   u3755 216A                     u4740 2B1A                     u3950 3288  
                   u3790 2200                     u4670 115E                     u4590 101E  
                   u4680 1160                     u3890 3196                     u4940 1A5E  
                   u4950 1A60                     u4870 18B4                     u4880 18B6  
                   u4890 18C2                     _TMR1 000FCE                     _dbuf 012D  
                   _atoi 2A12                     _main 11B2                     _nanf 3746  
     __size_of_LCD_Clear 0014                     _prec 00ED                     _nout 0129  
                   pad@i 0018                     pad@p 0015                     _tiny 0801  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9                     btemp 005F         __end_of_ADC_Init 37A8  
       __end_of_ADC_Read 324E            ___fpclassifyf 2D62                     prodh 000FF4  
                   prodl 000FF3                     start 000E          __end_of_MSdelay 35CA  
          __CFG_IESO$OFF 000000          ___fldiv@new_exp 0045            _LCD_String_xy 3562  
           _tolower$1009 000D              _voltage_str 0184             ___param_bank 000000  
        _max_current_ant 00FD                    ??_pad 0017         __end_of_LCD_Char 3458  
       __end_of_LCD_Init 365A            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
          ___fltol@sign1 005D                    ?_atoi 0008          __end_of___fladd 25D0  
                  ?_main 0001                    ?_nanf 0001          __end_of___fldiv 2858  
        __end_of___awdiv 31D4          __end_of___flneg 3688                    STR_12 0831  
                  STR_14 0831                    STR_17 0817          __end_of___awmod 32BE  
        __end_of___flmul 22C4          __end_of___flsub 34EC          __end_of___fltol 2EEA  
        ___awdiv@divisor 0003                    _T1CON 000FCD                    _LATB0 007C50  
                  _LATB1 007C51          ___awdiv@counter 0005             vfpfcnvrt@fmt 00B0  
          __CFG_USBDIV$1 000000                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _flags 00EF                    _errno 0127                    _fputc 2F8C  
                  _phase 0117                    _fputs 352A          __end_of_isdigit 362A  
                  atoi@n 0015                    pad@fp 0011                    atoi@s 0008  
                  _power 011B                    _width 012B                    _putch 37A8  
                  _sqrtf 1B40                    nanf@s 0001                    nanf@u 0005  
        __end_of_isspace 352A          __end_of_isupper 35FA                    tablat 000FF5  
                  ttemp5 0060                    ttemp6 0063                    ttemp7 0067  
                  status 000FD8                    wtemp8 0060      __size_of_LCD_String 0024  
        __end_of_sprintf 336E           ?___fpclassifyf 0001          __end_of_tolower 340C  
        __end_of_strncmp 2F8C           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
         ?_LCD_String_xy 000B           __CFG_MCLRE$OFF 000000             _voltage_read 00F7  
        __initialization 36B2             __end_of_atoi 2B52             __end_of_main 170A  
           __end_of_nanf 3768             __end_of_tiny 0805                   ??_atoi 000A  
                 ??_main 00E0                   ??_nanf 0005        __end_of_LCD_Clear 3794  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_fputc 0001                   ?_fputs 000A  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0001  
                 ?_putch 0001                   ?_sqrtf 0060         LCD_String_xy@msg 000C  
       LCD_String_xy@pos 000B         LCD_String_xy@row 000E                ??_MSdelay 0003  
                 _OSCCON 000FD3            vfpfcnvrt@done 00B8                   _TMR1IE 007CE8  
                 _TMR1IF 007CF0                   _TMR1ON 007E68         __end_of___xxtofl 2C92  
         __CFG_XINST$OFF 000000             vfprintf@cfmt 00CC                   ___flge 2C92  
                 ___fleq 30C6                ??___fladd 0055                   ___wmul 36D8  
              ??___fldiv 003C                ??___awdiv 0005                ??___flneg 0005  
         __CFG_STVREN$ON 000000                ??___awmod 0005                ??___flmul 0017  
              ??___flsub 005D                ??___fltol 0064                   _efgtoa 0836  
        ADC_Read@channel 0001                   _floorf 2858          ADC_Read@digital 0007  
                 clear_0 36B8                   clear_1 36C4         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005                   pad@buf 0013  
   __size_of_LCD_Command 004C                   _strcpy 336E                   _strlen 3688  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003          ___fpclassifyf@e 0009  
              ?_ADC_Init 0001          ___fpclassifyf@u 000B                ?_ADC_Read 0001  
        ___fpclassifyf@x 0001             __mediumconst 0000                ??_isspace 0003  
                 tblptrh 000FF7                ??_isupper 0003                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 331C  
                 sqrtf@i 0071                   sqrtf@m 0085                   sqrtf@q 0079  
                 sqrtf@r 0089                   sqrtf@s 006D                   sqrtf@t 007D  
                 sqrtf@x 0060                   sqrtf@z 0081                ??_sprintf 005F  
              ??_tolower 0009                ??_strncmp 0007               ___flge@ff1 0028  
             ___flge@ff2 002C          ??___fpclassifyf 0005             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               ___fleq@ff1 0001  
             ___fleq@ff2 0005                ?_LCD_Char 0001               __accesstop 0060  
__end_of__initialization 36CA                ?_LCD_Init 0001          ??_LCD_String_xy 000E  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0060  
         __pcstackCOMRAM 0001            __end_of_fputc 302C            __end_of_fputs 3562  
          __end_of_putch 37AA            __end_of_sqrtf 1F72             ??_LCD_String 000B  
             ??_ADC_Init 0001               ??_ADC_Read 0003                  ??_fputc 0005  
                ??_fputs 000E          _max_voltage_ant 00FB                  ??_putch 0001  
                ??_sqrtf 0064               __pbssBANK0 00E5               __pbssBANK1 0100  
          ?_TIMER1_Start 0001               ??_LCD_Char 0007               ??_LCD_Init 0009  
     __end_of_LCD_String 3722               _efgtoa$373 007E               _efgtoa$367 007A  
             _efgtoa$368 007C               _efgtoa$377 0080               _efgtoa$378 0082  
             _efgtoa$379 0084                  ?___flge 0028                  ?___fleq 0001  
                ?___wmul 0001                  ?_efgtoa 006A                  ?_floorf 004D  
                ?_strcpy 0001                  ?_strlen 0001                ?___xxtofl 0001  
     __size_of_vfpfcnvrt 0436           ??_TIMER1_Start 0001                  _MSdelay 3596  
        __CFG_VREGEN$OFF 000000            LCD_String@msg 0009                  __Hparam 0000  
                __Lparam 0000          __size_of___flge 00D0          __size_of___fleq 008A  
                ___fladd 22C4                  ___fldiv 25D0                  ___awdiv 3150  
                ___flneg 365A                  ___awmod 324E                  ___flmul 1F72  
                ___flsub 34A4                  ___fltol 2E2E          __size_of___wmul 0026  
              ?_vfprintf 00C6             __psmallconst 0800          __size_of_efgtoa 097C  
        __size_of_floorf 01BA                  __pcinit 36B2                  __ramtop 0800  
                __ptext0 11B2                  __ptext1 1B40                  __ptext2 3746  
                __ptext3 331C                  __ptext4 32BE                  __ptext5 170A  
                __ptext6 2EEA                  __ptext7 0836                  __ptext8 33C0  
                __ptext9 35CA          __size_of_strcpy 0052          __size_of_strlen 002A  
                _counter 010F                  _current 00E9             __size_of_pad 009A  
                _isdigit 35FA               ??___xxtofl 0005         ___awmod@dividend 0001  
                _isspace 34EC                  _isupper 35CA                  efgtoa@c 0070  
                efgtoa@d 008E                  efgtoa@e 00A6                  efgtoa@f 006C  
                efgtoa@g 00A2                  efgtoa@h 0098                  efgtoa@i 00A0  
                efgtoa@l 009C                  efgtoa@m 008A                  efgtoa@n 00A8  
                efgtoa@p 0092                  efgtoa@t 0086                  efgtoa@u 00AA  
                efgtoa@w 0095                _LCD_Clear 3780                  atoi@neg 000E  
                _sprintf 331C                  _tolower 33C0                  _voltage 00E5  
                _strncmp 2EEA           __pintcode_body 3722     end_of_initialization 36CA  
                floorf@e 0064                  floorf@m 0060                  floorf@u 0066  
                floorf@x 004D                  fputc@fp 0003           LCD_Command@cmd 0008  
          __Lmediumconst 0000                  int_func 3722                  fputs@fp 000C  
      __end_of_vfpfcnvrt 1B40               efgtoa@mode 0097               efgtoa@sign 0090  
                postdec2 000FDD               _timer1_isr 0008                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 005F  
                sqrtf@ix 008D                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001              ___fladd@grs 005C  
          ___xxtofl@sign 0009               ?_LCD_Clear 0001              ___fldiv@grs 0047  
            ___fldiv@rem 0040        __size_of_ADC_Init 0014        __size_of_ADC_Read 007A  
            ___flmul@grs 001C        __size_of_LCD_Char 004C        __size_of_LCD_Init 0030  
          ??_LCD_Command 0007           __end_of___flge 2D62           __end_of___fleq 3150  
            vfpfcnvrt@ap 00B2              vfpfcnvrt@ct 00C2              vfpfcnvrt@fp 00AE  
         __end_of___wmul 36FE     __end_of_TIMER1_Start 3780           __end_of_efgtoa 11B2  
         __end_of_floorf 2A12               floorf@F524 0107           __end_of_strcpy 33C0  
         __end_of_strlen 36B2      start_initialization 36B2              __end_of_pad 30C6  
  __end_of___fpclassifyf 2E2E    __end_of_LCD_String_xy 3596              vfprintf@fmt 00C8  
               ??___flge 0030                 ??___fleq 0009              ?_timer1_isr 0001  
               ??___wmul 0005                 ??_efgtoa 0071                 ??_floorf 0051  
       __CFG_LPT1OSC$OFF 000000                 ??_strcpy 0005                 ??_strlen 0003  
              ___fladd@a 0051                ___fladd@b 004D                ___fldiv@a 0038  
              ___fldiv@b 0034      __end_of_LCD_Command 34A4                ___flmul@a 0013  
              ___flmul@b 000F                ___flsub@a 0064                ___flsub@b 0060  
          __pcstackBANK0 0060              ??_LCD_Clear 0009        __size_of___xxtofl 0140  
               ?_MSdelay 0001             _current_read 00F9                _main$1221 00E1  
              __pintcode 0008                 ?___fladd 004D                 ?___fldiv 0034  
               ?___awdiv 0001                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 000F                 ?___flsub 0060                 ?___fltol 0060  
      __size_of_vfprintf 005E              __smallconst 0800                 ?_isdigit 0001  
               _ADC_Init 3794                 _ADC_Read 31D4                 ?_isspace 0001  
               ?_isupper 0001    LCD_String_xy@location 000F                 ?_sprintf 00CE  
               ?_tolower 0007           __size_of_fputc 00A0           __size_of_fputs 0038  
               ?_strncmp 0001      __size_of_timer1_isr 373E           __size_of_putch 0002  
         __size_of_sqrtf 0432                _phase_ant 0113                 MSdelay@i 0003  
               MSdelay@j 0005                _phase_str 0100                 _LCD_Char 340C  
               _LCD_Init 362A           ___wmul@product 0005                 _PIR1bits 000F9E  
  __size_of_TIMER1_Start 0018         __CFG_WDTPS$32768 000000              _LCD_Command 3458  
              _vfpfcnvrt 170A                _power_str 017D               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001               vfpfcnvrt@c 00C5               vfpfcnvrt@f 00BE  
           _TIMER1_Start 3768         __size_of_MSdelay 0034                 __Hrparam 0000  
             vfprintf@ap 00CA                 __Lrparam 0000               vfprintf@fp 00C6  
       __size_of___fladd 030C         __size_of___fldiv 0288         __size_of___awdiv 0084  
       __size_of___flneg 002E         __size_of___awmod 0070         __size_of___flmul 0352  
       __size_of___flsub 0048         __size_of___fltol 00BC               ?_vfpfcnvrt 00AE  
            _max_current 00F5       ___fpclassifyf@F463 010B               sprintf@fmt 00D0  
               ___xxtofl 2B52                 _atoi$870 0012              _current_str 018B  
               _atoi$868 0010                 _atoi$869 0014              _max_voltage 00F3  
       __size_of_isdigit 0030         __size_of_isspace 003E                 __ptext10 336E  
               __ptext11 302C                 __ptext20 22C4                 __ptext12 3688  
               __ptext21 365A                 __ptext13 352A                 __ptext30 35FA  
               __ptext22 1F72                 __ptext14 2F8C                 __ptext31 36D8  
               __ptext23 2C92                 __ptext15 37A8                 __ptext40 3596  
               __ptext32 2B52                 __ptext24 30C6                 __ptext16 2858  
               __ptext41 31D4                 __ptext33 3768                 __ptext25 25D0  
               __ptext17 2D62                 __ptext42 3794                 __ptext34 3562  
               __ptext26 324E                 __ptext18 2E2E                 __ptext35 36FE  
               __ptext27 3150                 __ptext19 34A4                 __ptext36 340C  
               __ptext28 2A12                 __ptext37 362A                 __ptext29 34EC  
               __ptext38 3780                 __ptext39 3458         __size_of_isupper 0030  
       __size_of_sprintf 0052         __size_of_tolower 004C               strcpy@dest 0001  
       __size_of_strncmp 00A2                 _counter2 00F1            __size_of_atoi 0140  
          __size_of_main 0558            __size_of_nanf 0022               MSdelay@val 0001  
               efgtoa@fp 006A                 efgtoa@ne 008C                 efgtoa@pp 0088  
               efgtoa@ou 0076             ??_timer1_isr 0001                 int$flags 005F  
               _vfprintf 32BE               _LCD_String 36FE              _isspace$899 0007  
  __CFG_CPUDIV$OSC1_PLL2 000000                 isdigit@c 0001                 intlevel2 0000  
              sprintf@ap 00D8       __end_of_timer1_isr 3746             _time_current 0123  
               isspace@c 0001                strcpy@src 0003                 isupper@c 0001  
              strncmp@_l 0001             _time_voltage 011F                strncmp@_r 0003  
            efgtoa@nmode 0094              ??_vfpfcnvrt 00B4            _vfpfcnvrt$393 00BA  
          _vfpfcnvrt$397 00BC      __CFG_FOSC$INTOSC_EC 000000                 sprintf@f 00DA  
               tolower@c 0007                 sprintf@s 00CE   __size_of___fpclassifyf 00CC  
               strncmp@l 0008                 strncmp@n 0005                 strncmp@r 000A  
 __size_of_LCD_String_xy 0034            ___fladd@signs 0059    sqrtf@__xc8_float_word 0075  
           ___fladd@aexp 005A             ___fladd@bexp 005B  
