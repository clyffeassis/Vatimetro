

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jun 20 21:01:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.05
    61                           ; Generated 20/12/2018 GMT
    62                           ; 
    63                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	smallconst
    96  000800                     __psmallconst:
    97                           	opt callstack 0
    98  000800  00                 	db	0
    99  000801  4260               	dw	16992
   100  000803  0DA2               	dw	3490
   101  000805                     __end_of_tiny:
   102                           	opt callstack 0
   103  0000                     _TMR1	set	4046
   104  0000                     _ADCON0bits	set	4034
   105  0000                     _ADCON0	set	4034
   106  0000                     _ADRESL	set	4035
   107  0000                     _ADRESH	set	4036
   108  0000                     _ADCON2	set	4032
   109  0000                     _ADCON1	set	4033
   110  0000                     _TRISA	set	3986
   111  0000                     _T1CON	set	4045
   112  0000                     _PIR1bits	set	3998
   113  0000                     _LATB	set	3978
   114  0000                     _TRISB	set	3987
   115  0000                     _TRISC	set	3988
   116  0000                     _OSCCON	set	4051
   117  0000                     _GO	set	32273
   118  0000                     _ADON	set	32272
   119  0000                     _TMR1ON	set	32360
   120  0000                     _TMR1IF	set	31984
   121  0000                     _TMR1IE	set	31976
   122  0000                     _PEIE	set	32662
   123  0000                     _GIE	set	32663
   124  0000                     _LATB1	set	31825
   125  0000                     _LATB0	set	31824
   126  000805                     STR_3:
   127                           
   128                           ; BSR set to: 0
   129  000805  49                 	db	73	;'I'
   130  000806  20                 	db	32
   131  000807  3D                 	db	61	;'='
   132  000808  20                 	db	32
   133  000809  25                 	db	37
   134  00080A  30                 	db	48	;'0'
   135  00080B  2E                 	db	46
   136  00080C  33                 	db	51	;'3'
   137  00080D  66                 	db	102	;'f'
   138  00080E  20                 	db	32
   139  00080F  20                 	db	32
   140  000810  20                 	db	32
   141  000811  41                 	db	65	;'A'
   142  000812  00                 	db	0
   143  000813                     STR_1:
   144                           
   145                           ; BSR set to: 0
   146  000813  49                 	db	73	;'I'
   147  000814  20                 	db	32
   148  000815  3D                 	db	61	;'='
   149  000816  20                 	db	32
   150  000817  25                 	db	37
   151  000818  30                 	db	48	;'0'
   152  000819  2E                 	db	46
   153  00081A  33                 	db	51	;'3'
   154  00081B  66                 	db	102	;'f'
   155  00081C  20                 	db	32
   156  00081D  20                 	db	32
   157  00081E  41                 	db	65	;'A'
   158  00081F  00                 	db	0
   159  000820                     STR_2:
   160                           
   161                           ; BSR set to: 0
   162  000820  49                 	db	73	;'I'
   163  000821  20                 	db	32
   164  000822  3D                 	db	61	;'='
   165  000823  20                 	db	32
   166  000824  25                 	db	37
   167  000825  30                 	db	48	;'0'
   168  000826  2E                 	db	46
   169  000827  33                 	db	51	;'3'
   170  000828  66                 	db	102	;'f'
   171  000829  20                 	db	32
   172  00082A  41                 	db	65	;'A'
   173  00082B  00                 	db	0
   174  00082C                     STR_4:
   175                           
   176                           ; BSR set to: 0
   177  00082C  49                 	db	73	;'I'
   178  00082D  4E                 	db	78	;'N'
   179  00082E  46                 	db	70	;'F'
   180  00082F  00                 	db	0
   181  000830                     STR_8:
   182                           
   183                           ; BSR set to: 0
   184  000830  4E                 	db	78	;'N'
   185  000831  41                 	db	65	;'A'
   186  000832  4E                 	db	78	;'N'
   187  000833  00                 	db	0
   188  000834                     STR_5:
   189                           
   190                           ; BSR set to: 0
   191  000834  69                 	db	105	;'i'
   192  000835  6E                 	db	110	;'n'
   193  000836  66                 	db	102	;'f'
   194  000837  00                 	db	0
   195  000838                     STR_9:
   196                           
   197                           ; BSR set to: 0
   198  000838  6E                 	db	110	;'n'
   199  000839  61                 	db	97	;'a'
   200  00083A  6E                 	db	110	;'n'
   201  00083B  00                 	db	0
   202  00083C                     STR_12:
   203                           
   204                           ; BSR set to: 0
   205  00083C  6C                 	db	108	;'l'
   206  00083D  66                 	db	102	;'f'
   207  00083E  00                 	db	0
   208  0000                     
   209                           ; #config settings
   210  00083F  00                 	db	0	; dummy byte at the end
   211  0000                     
   212                           	psect	cinit
   213  0034DE                     __pcinit:
   214                           	opt callstack 0
   215  0034DE                     start_initialization:
   216                           	opt callstack 0
   217  0034DE                     __initialization:
   218                           	opt callstack 0
   219                           
   220                           ; Clear objects allocated to BANK1 (112 bytes)
   221  0034DE  EE01  F000         	lfsr	0,__pbssBANK1
   222  0034E2  0E70               	movlw	112
   223  0034E4                     clear_0:
   224  0034E4  6AEE               	clrf	postinc0,c
   225  0034E6  06E8               	decf	wreg,f,c
   226  0034E8  E1FD               	bnz	clear_0
   227                           
   228                           ; Clear objects allocated to BANK0 (24 bytes)
   229  0034EA  EE00  F0E5         	lfsr	0,__pbssBANK0
   230  0034EE  0E18               	movlw	24
   231  0034F0                     clear_1:
   232  0034F0  6AEE               	clrf	postinc0,c
   233  0034F2  06E8               	decf	wreg,f,c
   234  0034F4  E1FD               	bnz	clear_1
   235  0034F6                     end_of_initialization:
   236                           	opt callstack 0
   237  0034F6                     __end_of__initialization:
   238                           	opt callstack 0
   239  0034F6  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   240  0034F8  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   241  0034FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   242  0034FC  6EF8               	movwf	tblptru,c
   243  0034FE  0100               	movlb	0
   244  003500  EF10  F00D         	goto	_main	;jump to C main() function
   245                           
   246                           	psect	bssBANK0
   247  0000E5                     __pbssBANK0:
   248                           	opt callstack 0
   249  0000E5                     _current:
   250                           	opt callstack 0
   251  0000E5                     	ds	4
   252  0000E9                     _errno:
   253                           	opt callstack 0
   254  0000E9                     	ds	2
   255  0000EB                     _nout:
   256                           	opt callstack 0
   257  0000EB                     	ds	2
   258  0000ED                     _width:
   259                           	opt callstack 0
   260  0000ED                     	ds	2
   261  0000EF                     _prec:
   262                           	opt callstack 0
   263  0000EF                     	ds	2
   264  0000F1                     _flags:
   265                           	opt callstack 0
   266  0000F1                     	ds	2
   267  0000F3                     _counter:
   268                           	opt callstack 0
   269  0000F3                     	ds	2
   270  0000F5                     _max_current:
   271                           	opt callstack 0
   272  0000F5                     	ds	2
   273  0000F7                     _voltage_read:
   274                           	opt callstack 0
   275  0000F7                     	ds	2
   276  0000F9                     _current_read:
   277                           	opt callstack 0
   278  0000F9                     	ds	2
   279  0000FB                     _max_current_ant:
   280                           	opt callstack 0
   281  0000FB                     	ds	2
   282                           
   283                           	psect	bssBANK1
   284  000100                     __pbssBANK1:
   285                           	opt callstack 0
   286  000100                     _voltage_str:
   287                           	opt callstack 0
   288  000100                     	ds	10
   289  00010A                     floorf@F524:
   290                           	opt callstack 0
   291  00010A                     	ds	4
   292  00010E                     ___fpclassifyf@F463:
   293                           	opt callstack 0
   294  00010E                     	ds	4
   295  000112                     _voltage:
   296                           	opt callstack 0
   297  000112                     	ds	4
   298  000116                     _dbuf:
   299                           	opt callstack 0
   300  000116                     	ds	80
   301  000166                     _current_str:
   302                           	opt callstack 0
   303  000166                     	ds	10
   304                           
   305                           	psect	cstackBANK0
   306  000060                     __pcstackBANK0:
   307                           	opt callstack 0
   308  000060                     ?_sqrtf:
   309                           	opt callstack 0
   310  000060                     ?___flsub:
   311                           	opt callstack 0
   312  000060                     ?___fltol:
   313                           	opt callstack 0
   314  000060                     ___fltol@f1:
   315                           	opt callstack 0
   316  000060                     ___flsub@b:
   317                           	opt callstack 0
   318  000060                     floorf@m:
   319                           	opt callstack 0
   320  000060                     sqrtf@x:
   321                           	opt callstack 0
   322                           
   323                           ; 4 bytes @ 0x0
   324  000060                     	ds	4
   325  000064                     ??_sqrtf:
   326  000064                     ??___fltol:
   327  000064                     floorf@e:
   328                           	opt callstack 0
   329  000064                     ___flsub@a:
   330                           	opt callstack 0
   331                           
   332                           ; 4 bytes @ 0x4
   333  000064                     	ds	2
   334  000066                     floorf@u:
   335                           	opt callstack 0
   336                           
   337                           ; 4 bytes @ 0x6
   338  000066                     	ds	4
   339  00006A                     ?_efgtoa:
   340                           	opt callstack 0
   341  00006A                     efgtoa@fp:
   342                           	opt callstack 0
   343                           
   344                           ; 2 bytes @ 0xA
   345  00006A                     	ds	2
   346  00006C                     efgtoa@f:
   347                           	opt callstack 0
   348                           
   349                           ; 4 bytes @ 0xC
   350  00006C                     	ds	1
   351  00006D                     sqrtf@s:
   352                           	opt callstack 0
   353                           
   354                           ; 4 bytes @ 0xD
   355  00006D                     	ds	3
   356  000070                     efgtoa@c:
   357                           	opt callstack 0
   358                           
   359                           ; 1 bytes @ 0x10
   360  000070                     	ds	1
   361  000071                     ??_efgtoa:
   362  000071                     sqrtf@i:
   363                           	opt callstack 0
   364                           
   365                           ; 4 bytes @ 0x11
   366  000071                     	ds	4
   367  000075                     sqrtf@__xc8_float_word:
   368                           	opt callstack 0
   369                           
   370                           ; 4 bytes @ 0x15
   371  000075                     	ds	1
   372  000076                     efgtoa@ou:
   373                           	opt callstack 0
   374                           
   375                           ; 4 bytes @ 0x16
   376  000076                     	ds	3
   377  000079                     sqrtf@q:
   378                           	opt callstack 0
   379                           
   380                           ; 4 bytes @ 0x19
   381  000079                     	ds	1
   382  00007A                     _efgtoa$357:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x1A
   386  00007A                     	ds	2
   387  00007C                     _efgtoa$358:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x1C
   391  00007C                     	ds	1
   392  00007D                     sqrtf@t:
   393                           	opt callstack 0
   394                           
   395                           ; 4 bytes @ 0x1D
   396  00007D                     	ds	1
   397  00007E                     _efgtoa$363:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0x1E
   401  00007E                     	ds	2
   402  000080                     _efgtoa$367:
   403                           	opt callstack 0
   404                           
   405                           ; 2 bytes @ 0x20
   406  000080                     	ds	1
   407  000081                     sqrtf@z:
   408                           	opt callstack 0
   409                           
   410                           ; 4 bytes @ 0x21
   411  000081                     	ds	1
   412  000082                     _efgtoa$368:
   413                           	opt callstack 0
   414                           
   415                           ; 2 bytes @ 0x22
   416  000082                     	ds	2
   417  000084                     _efgtoa$369:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x24
   421  000084                     	ds	1
   422  000085                     sqrtf@m:
   423                           	opt callstack 0
   424                           
   425                           ; 4 bytes @ 0x25
   426  000085                     	ds	1
   427  000086                     efgtoa@t:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x26
   431  000086                     	ds	2
   432  000088                     efgtoa@pp:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0x28
   436  000088                     	ds	1
   437  000089                     sqrtf@r:
   438                           	opt callstack 0
   439                           
   440                           ; 4 bytes @ 0x29
   441  000089                     	ds	1
   442  00008A                     efgtoa@m:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0x2A
   446  00008A                     	ds	2
   447  00008C                     efgtoa@ne:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x2C
   451  00008C                     	ds	1
   452  00008D                     sqrtf@ix:
   453                           	opt callstack 0
   454                           
   455                           ; 4 bytes @ 0x2D
   456  00008D                     	ds	1
   457  00008E                     efgtoa@d:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x2E
   461  00008E                     	ds	2
   462  000090                     efgtoa@sign:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x30
   466  000090                     	ds	2
   467  000092                     efgtoa@p:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x32
   471  000092                     	ds	2
   472  000094                     efgtoa@nmode:
   473                           	opt callstack 0
   474                           
   475                           ; 1 bytes @ 0x34
   476  000094                     	ds	1
   477  000095                     efgtoa@w:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x35
   481  000095                     	ds	2
   482  000097                     efgtoa@mode:
   483                           	opt callstack 0
   484                           
   485                           ; 1 bytes @ 0x37
   486  000097                     	ds	1
   487  000098                     efgtoa@h:
   488                           	opt callstack 0
   489                           
   490                           ; 4 bytes @ 0x38
   491  000098                     	ds	4
   492  00009C                     efgtoa@l:
   493                           	opt callstack 0
   494                           
   495                           ; 4 bytes @ 0x3C
   496  00009C                     	ds	4
   497  0000A0                     efgtoa@i:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x40
   501  0000A0                     	ds	2
   502  0000A2                     efgtoa@g:
   503                           	opt callstack 0
   504                           
   505                           ; 4 bytes @ 0x42
   506  0000A2                     	ds	4
   507  0000A6                     efgtoa@e:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x46
   511  0000A6                     	ds	2
   512  0000A8                     efgtoa@n:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0x48
   516  0000A8                     	ds	2
   517  0000AA                     efgtoa@u:
   518                           	opt callstack 0
   519                           
   520                           ; 4 bytes @ 0x4A
   521  0000AA                     	ds	4
   522  0000AE                     ?_vfpfcnvrt:
   523                           	opt callstack 0
   524  0000AE                     vfpfcnvrt@fp:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x4E
   528  0000AE                     	ds	2
   529  0000B0                     vfpfcnvrt@fmt:
   530                           	opt callstack 0
   531                           
   532                           ; 2 bytes @ 0x50
   533  0000B0                     	ds	2
   534  0000B2                     vfpfcnvrt@ap:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x52
   538  0000B2                     	ds	2
   539  0000B4                     ??_vfpfcnvrt:
   540                           
   541                           ; 1 bytes @ 0x54
   542  0000B4                     	ds	4
   543  0000B8                     vfpfcnvrt@done:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x58
   547  0000B8                     	ds	2
   548  0000BA                     _vfpfcnvrt$383:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x5A
   552  0000BA                     	ds	2
   553  0000BC                     _vfpfcnvrt$387:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x5C
   557  0000BC                     	ds	2
   558  0000BE                     vfpfcnvrt@f:
   559                           	opt callstack 0
   560                           
   561                           ; 4 bytes @ 0x5E
   562  0000BE                     	ds	4
   563  0000C2                     vfpfcnvrt@ct:
   564                           	opt callstack 0
   565                           
   566                           ; 3 bytes @ 0x62
   567  0000C2                     	ds	3
   568  0000C5                     vfpfcnvrt@c:
   569                           	opt callstack 0
   570                           
   571                           ; 1 bytes @ 0x65
   572  0000C5                     	ds	1
   573  0000C6                     ?_vfprintf:
   574                           	opt callstack 0
   575  0000C6                     vfprintf@fp:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x66
   579  0000C6                     	ds	2
   580  0000C8                     vfprintf@fmt:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x68
   584  0000C8                     	ds	2
   585  0000CA                     vfprintf@ap:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0x6A
   589  0000CA                     	ds	2
   590  0000CC                     vfprintf@cfmt:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0x6C
   594  0000CC                     	ds	2
   595  0000CE                     ?_sprintf:
   596                           	opt callstack 0
   597  0000CE                     sprintf@s:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0x6E
   601  0000CE                     	ds	2
   602  0000D0                     sprintf@fmt:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x70
   606  0000D0                     	ds	8
   607  0000D8                     sprintf@ap:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0x78
   611  0000D8                     	ds	2
   612  0000DA                     sprintf@f:
   613                           	opt callstack 0
   614                           
   615                           ; 6 bytes @ 0x7A
   616  0000DA                     	ds	6
   617  0000E0                     ??_main:
   618                           
   619                           ; 1 bytes @ 0x80
   620  0000E0                     	ds	1
   621  0000E1                     _main$1211:
   622                           	opt callstack 0
   623                           
   624                           ; 4 bytes @ 0x81
   625  0000E1                     	ds	4
   626                           
   627                           	psect	cstackCOMRAM
   628  000001                     __pcstackCOMRAM:
   629                           	opt callstack 0
   630  000001                     ?_ADC_Read:
   631                           	opt callstack 0
   632  000001                     ?_strlen:
   633                           	opt callstack 0
   634  000001                     ?___fpclassifyf:
   635                           	opt callstack 0
   636  000001                     ?_isupper:
   637                           	opt callstack 0
   638  000001                     ?_isdigit:
   639                           	opt callstack 0
   640  000001                     ?_strncmp:
   641                           	opt callstack 0
   642  000001                     ?_isspace:
   643                           	opt callstack 0
   644  000001                     ?___wmul:
   645                           	opt callstack 0
   646  000001                     ?___awdiv:
   647                           	opt callstack 0
   648  000001                     ?___awmod:
   649                           	opt callstack 0
   650  000001                     ?_nanf:
   651                           	opt callstack 0
   652  000001                     ?___flneg:
   653                           	opt callstack 0
   654  000001                     ?___xxtofl:
   655                           	opt callstack 0
   656  000001                     MSdelay@val:
   657                           	opt callstack 0
   658  000001                     ADC_Read@channel:
   659                           	opt callstack 0
   660  000001                     ___wmul@multiplier:
   661                           	opt callstack 0
   662  000001                     ___awdiv@dividend:
   663                           	opt callstack 0
   664  000001                     ___awmod@dividend:
   665                           	opt callstack 0
   666  000001                     isdigit@c:
   667                           	opt callstack 0
   668  000001                     isspace@c:
   669                           	opt callstack 0
   670  000001                     isupper@c:
   671                           	opt callstack 0
   672  000001                     fputc@c:
   673                           	opt callstack 0
   674  000001                     strcpy@dest:
   675                           	opt callstack 0
   676  000001                     strlen@s:
   677                           	opt callstack 0
   678  000001                     strncmp@_l:
   679                           	opt callstack 0
   680  000001                     nanf@s:
   681                           	opt callstack 0
   682  000001                     ___fleq@ff1:
   683                           	opt callstack 0
   684  000001                     ___flneg@f1:
   685                           	opt callstack 0
   686  000001                     ___xxtofl@val:
   687                           	opt callstack 0
   688  000001                     ___fpclassifyf@x:
   689                           	opt callstack 0
   690                           
   691                           ; 4 bytes @ 0x0
   692  000001                     	ds	2
   693  000003                     ??_ADC_Read:
   694  000003                     ??_isupper:
   695  000003                     ??_isdigit:
   696  000003                     ??_isspace:
   697  000003                     MSdelay@i:
   698                           	opt callstack 0
   699  000003                     ___wmul@multiplicand:
   700                           	opt callstack 0
   701  000003                     ___awdiv@divisor:
   702                           	opt callstack 0
   703  000003                     ___awmod@divisor:
   704                           	opt callstack 0
   705  000003                     fputc@fp:
   706                           	opt callstack 0
   707  000003                     strcpy@src:
   708                           	opt callstack 0
   709  000003                     strlen@a:
   710                           	opt callstack 0
   711  000003                     strncmp@_r:
   712                           	opt callstack 0
   713                           
   714                           ; 2 bytes @ 0x2
   715  000003                     	ds	2
   716  000005                     ??_fputc:
   717  000005                     ??___fpclassifyf:
   718  000005                     ??_strcpy:
   719  000005                     ??___xxtofl:
   720  000005                     ___awdiv@counter:
   721                           	opt callstack 0
   722  000005                     ___awmod@counter:
   723                           	opt callstack 0
   724  000005                     MSdelay@j:
   725                           	opt callstack 0
   726  000005                     ___wmul@product:
   727                           	opt callstack 0
   728  000005                     strncmp@n:
   729                           	opt callstack 0
   730  000005                     ___fleq@ff2:
   731                           	opt callstack 0
   732  000005                     nanf@u:
   733                           	opt callstack 0
   734                           
   735                           ; 4 bytes @ 0x4
   736  000005                     	ds	1
   737  000006                     ___awdiv@sign:
   738                           	opt callstack 0
   739  000006                     ___awmod@sign:
   740                           	opt callstack 0
   741                           
   742                           ; 1 bytes @ 0x5
   743  000006                     	ds	1
   744  000007                     ??_LCD_Command:
   745  000007                     ??_strncmp:
   746  000007                     ??_LCD_Char:
   747  000007                     ?_tolower:
   748                           	opt callstack 0
   749  000007                     _isspace$889:
   750                           	opt callstack 0
   751  000007                     ADC_Read@digital:
   752                           	opt callstack 0
   753  000007                     ___awdiv@quotient:
   754                           	opt callstack 0
   755  000007                     strcpy@s:
   756                           	opt callstack 0
   757  000007                     tolower@c:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x6
   761  000007                     	ds	1
   762  000008                     ?_atoi:
   763                           	opt callstack 0
   764  000008                     LCD_Command@cmd:
   765                           	opt callstack 0
   766  000008                     LCD_Char@dat:
   767                           	opt callstack 0
   768  000008                     atoi@s:
   769                           	opt callstack 0
   770  000008                     strncmp@l:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x7
   774  000008                     	ds	1
   775  000009                     ??_tolower:
   776  000009                     ??___fleq:
   777  000009                     ___xxtofl@sign:
   778                           	opt callstack 0
   779  000009                     LCD_String@msg:
   780                           	opt callstack 0
   781  000009                     ___fpclassifyf@e:
   782                           	opt callstack 0
   783  000009                     strcpy@d:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0x8
   787  000009                     	ds	1
   788  00000A                     ??_atoi:
   789  00000A                     ___xxtofl@exp:
   790                           	opt callstack 0
   791  00000A                     fputs@s:
   792                           	opt callstack 0
   793  00000A                     strncmp@r:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0x9
   797  00000A                     	ds	1
   798  00000B                     LCD_String_xy@pos:
   799                           	opt callstack 0
   800  00000B                     ___xxtofl@arg:
   801                           	opt callstack 0
   802  00000B                     ___fpclassifyf@u:
   803                           	opt callstack 0
   804                           
   805                           ; 4 bytes @ 0xA
   806  00000B                     	ds	1
   807  00000C                     LCD_String_xy@msg:
   808                           	opt callstack 0
   809  00000C                     fputs@fp:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0xB
   813  00000C                     	ds	1
   814  00000D                     _tolower$999:
   815                           	opt callstack 0
   816                           
   817                           ; 2 bytes @ 0xC
   818  00000D                     	ds	1
   819  00000E                     LCD_String_xy@row:
   820                           	opt callstack 0
   821  00000E                     fputs@c:
   822                           	opt callstack 0
   823  00000E                     atoi@neg:
   824                           	opt callstack 0
   825                           
   826                           ; 2 bytes @ 0xD
   827  00000E                     	ds	1
   828  00000F                     ?___flmul:
   829                           	opt callstack 0
   830  00000F                     LCD_String_xy@location:
   831                           	opt callstack 0
   832  00000F                     fputs@i:
   833                           	opt callstack 0
   834  00000F                     ___flmul@b:
   835                           	opt callstack 0
   836                           
   837                           ; 4 bytes @ 0xE
   838  00000F                     	ds	1
   839  000010                     _atoi$858:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0xF
   843  000010                     	ds	1
   844  000011                     ?_pad:
   845                           	opt callstack 0
   846  000011                     pad@fp:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0x10
   850  000011                     	ds	1
   851  000012                     _atoi$860:
   852                           	opt callstack 0
   853                           
   854                           ; 2 bytes @ 0x11
   855  000012                     	ds	1
   856  000013                     pad@buf:
   857                           	opt callstack 0
   858  000013                     ___flmul@a:
   859                           	opt callstack 0
   860                           
   861                           ; 4 bytes @ 0x12
   862  000013                     	ds	1
   863  000014                     _atoi$859:
   864                           	opt callstack 0
   865                           
   866                           ; 1 bytes @ 0x13
   867  000014                     	ds	1
   868  000015                     pad@p:
   869                           	opt callstack 0
   870  000015                     atoi@n:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x14
   874  000015                     	ds	2
   875  000017                     ??___flmul:
   876  000017                     ??_pad:
   877                           
   878                           ; 1 bytes @ 0x16
   879  000017                     	ds	1
   880  000018                     pad@i:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x17
   884  000018                     	ds	2
   885  00001A                     pad@w:
   886                           	opt callstack 0
   887                           
   888                           ; 2 bytes @ 0x19
   889  00001A                     	ds	1
   890  00001B                     ___flmul@sign:
   891                           	opt callstack 0
   892                           
   893                           ; 1 bytes @ 0x1A
   894  00001B                     	ds	1
   895  00001C                     ___flmul@grs:
   896                           	opt callstack 0
   897                           
   898                           ; 4 bytes @ 0x1B
   899  00001C                     	ds	4
   900  000020                     ___flmul@aexp:
   901                           	opt callstack 0
   902                           
   903                           ; 1 bytes @ 0x1F
   904  000020                     	ds	1
   905  000021                     ___flmul@bexp:
   906                           	opt callstack 0
   907                           
   908                           ; 1 bytes @ 0x20
   909  000021                     	ds	1
   910  000022                     ___flmul@prod:
   911                           	opt callstack 0
   912                           
   913                           ; 4 bytes @ 0x21
   914  000022                     	ds	4
   915  000026                     ___flmul@temp:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x25
   919  000026                     	ds	2
   920  000028                     ___flge@ff1:
   921                           	opt callstack 0
   922                           
   923                           ; 4 bytes @ 0x27
   924  000028                     	ds	4
   925  00002C                     ___flge@ff2:
   926                           	opt callstack 0
   927                           
   928                           ; 4 bytes @ 0x2B
   929  00002C                     	ds	4
   930  000030                     ??___flge:
   931                           
   932                           ; 1 bytes @ 0x2F
   933  000030                     	ds	4
   934  000034                     ?___fldiv:
   935                           	opt callstack 0
   936  000034                     ___fldiv@b:
   937                           	opt callstack 0
   938                           
   939                           ; 4 bytes @ 0x33
   940  000034                     	ds	4
   941  000038                     ___fldiv@a:
   942                           	opt callstack 0
   943                           
   944                           ; 4 bytes @ 0x37
   945  000038                     	ds	4
   946  00003C                     ??___fldiv:
   947                           
   948                           ; 1 bytes @ 0x3B
   949  00003C                     	ds	4
   950  000040                     ___fldiv@rem:
   951                           	opt callstack 0
   952                           
   953                           ; 4 bytes @ 0x3F
   954  000040                     	ds	4
   955  000044                     ___fldiv@sign:
   956                           	opt callstack 0
   957                           
   958                           ; 1 bytes @ 0x43
   959  000044                     	ds	1
   960  000045                     ___fldiv@new_exp:
   961                           	opt callstack 0
   962                           
   963                           ; 2 bytes @ 0x44
   964  000045                     	ds	2
   965  000047                     ___fldiv@grs:
   966                           	opt callstack 0
   967                           
   968                           ; 4 bytes @ 0x46
   969  000047                     	ds	4
   970  00004B                     ___fldiv@bexp:
   971                           	opt callstack 0
   972                           
   973                           ; 1 bytes @ 0x4A
   974  00004B                     	ds	1
   975  00004C                     ___fldiv@aexp:
   976                           	opt callstack 0
   977                           
   978                           ; 1 bytes @ 0x4B
   979  00004C                     	ds	1
   980  00004D                     ?_floorf:
   981                           	opt callstack 0
   982  00004D                     ?___fladd:
   983                           	opt callstack 0
   984  00004D                     ___fladd@b:
   985                           	opt callstack 0
   986  00004D                     floorf@x:
   987                           	opt callstack 0
   988                           
   989                           ; 4 bytes @ 0x4C
   990  00004D                     	ds	4
   991  000051                     ??_floorf:
   992  000051                     ___fladd@a:
   993                           	opt callstack 0
   994                           
   995                           ; 4 bytes @ 0x50
   996  000051                     	ds	4
   997  000055                     ??___fladd:
   998                           
   999                           ; 1 bytes @ 0x54
  1000  000055                     	ds	4
  1001  000059                     ___fladd@signs:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x58
  1005  000059                     	ds	1
  1006  00005A                     ___fladd@aexp:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x59
  1010  00005A                     	ds	1
  1011  00005B                     ___fladd@bexp:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x5A
  1015  00005B                     	ds	1
  1016  00005C                     ___fladd@grs:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x5B
  1020  00005C                     	ds	1
  1021  00005D                     ___fltol@sign1:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x5C
  1025  00005D                     	ds	1
  1026  00005E                     ___fltol@exp1:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x5D
  1030  00005E                     	ds	1
  1031  00005F                     
  1032                           ; 1 bytes @ 0x5E
  1033 ;;
  1034 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1035 ;;
  1036 ;; *************** function _main *****************
  1037 ;; Defined at:
  1038 ;;		line 42 in file "main.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2   90[None  ] int 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0
  1053 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1054 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1055 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1056 ;;Total ram usage:        5 bytes
  1057 ;; Hardware stack levels required when called:    9
  1058 ;; This function calls:
  1059 ;;		_ADC_Init
  1060 ;;		_ADC_Read
  1061 ;;		_LCD_Clear
  1062 ;;		_LCD_Init
  1063 ;;		_LCD_String_xy
  1064 ;;		_TIMER1_Start
  1065 ;;		___awdiv
  1066 ;;		___fladd
  1067 ;;		___fldiv
  1068 ;;		___flge
  1069 ;;		___flmul
  1070 ;;		___fltol
  1071 ;;		___xxtofl
  1072 ;;		_sprintf
  1073 ;;		_sqrtf
  1074 ;; This function is called by:
  1075 ;;		Startup code after reset
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text0
  1080  001A20                     __ptext0:
  1081                           	opt callstack 0
  1082  001A20                     _main:
  1083                           	opt callstack 22
  1084                           
  1085                           ;main.c: 44:     OSCCON = 0x72;
  1086                           
  1087                           ;incstack = 0
  1088  001A20  0E72               	movlw	114
  1089  001A22  6ED3               	movwf	4051,c	;volatile
  1090                           
  1091                           ;main.c: 45:     TRISC = 0x00;
  1092  001A24  0E00               	movlw	0
  1093  001A26  6E94               	movwf	3988,c	;volatile
  1094                           
  1095                           ;main.c: 46:  LCD_Init();
  1096  001A28  EC2B  F01A         	call	_LCD_Init	;wreg free
  1097                           
  1098                           ;main.c: 47:     TIMER1_Start();
  1099  001A2C  ECB8  F01A         	call	_TIMER1_Start	;wreg free
  1100                           
  1101                           ;main.c: 48:     ADC_Init();
  1102  001A30  ECD9  F01A         	call	_ADC_Init	;wreg free
  1103                           
  1104                           ;main.c: 49:     LCD_Clear();
  1105  001A34  ECCF  F01A         	call	_LCD_Clear	;wreg free
  1106  001A38                     l4396:
  1107                           
  1108                           ;main.c: 51:     {;main.c: 56:         current_read = ADC_Read(0);
  1109  001A38  0E00               	movlw	0
  1110  001A3A  6E02               	movwf	ADC_Read@channel+1,c
  1111  001A3C  0E00               	movlw	0
  1112  001A3E  6E01               	movwf	ADC_Read@channel,c
  1113  001A40  EC04  F018         	call	_ADC_Read	;wreg free
  1114  001A44  C001  F0F9         	movff	?_ADC_Read,_current_read
  1115  001A48  C002  F0FA         	movff	?_ADC_Read+1,_current_read+1
  1116                           
  1117                           ;main.c: 58:         if (current_read > max_current)
  1118  001A4C  0100               	movlb	0	; () banked
  1119  001A4E  51F9               	movf	_current_read& (0+255),w,b
  1120  001A50  5DF5               	subwf	_max_current& (0+255),w,b
  1121  001A52  51F6               	movf	(_max_current+1)& (0+255),w,b
  1122  001A54  0A80               	xorlw	128
  1123  001A56  6FE0               	movwf	??_main& (0+255),b
  1124  001A58  51FA               	movf	(_current_read+1)& (0+255),w,b
  1125  001A5A  0A80               	xorlw	128
  1126  001A5C  59E0               	subwfb	??_main& (0+255),w,b
  1127  001A5E  B0D8               	btfsc	status,0,c
  1128  001A60  D010               	goto	l4402
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;main.c: 59:         {;main.c: 60:             max_current = (max_current + current_read
      +                          ) / 2;
  1132  001A62  51F9               	movf	_current_read& (0+255),w,b
  1133  001A64  25F5               	addwf	_max_current& (0+255),w,b
  1134  001A66  6E01               	movwf	___awdiv@dividend,c
  1135  001A68  51FA               	movf	(_current_read+1)& (0+255),w,b
  1136  001A6A  21F6               	addwfc	(_max_current+1)& (0+255),w,b
  1137  001A6C  6E02               	movwf	___awdiv@dividend+1,c
  1138  001A6E  0E00               	movlw	0
  1139  001A70  6E04               	movwf	___awdiv@divisor+1,c
  1140  001A72  0E02               	movlw	2
  1141  001A74  6E03               	movwf	___awdiv@divisor,c
  1142  001A76  ECC2  F017         	call	___awdiv	;wreg free
  1143  001A7A  C001  F0F5         	movff	?___awdiv,_max_current
  1144  001A7E  C002  F0F6         	movff	?___awdiv+1,_max_current+1
  1145  001A82                     l4402:
  1146                           
  1147                           ;main.c: 62:         if (counter >= 500)
  1148  001A82  0EF4               	movlw	244
  1149  001A84  0100               	movlb	0	; () banked
  1150  001A86  5DF3               	subwf	_counter& (0+255),w,b
  1151  001A88  0E01               	movlw	1
  1152  001A8A  59F4               	subwfb	(_counter+1)& (0+255),w,b
  1153  001A8C  A0D8               	btfss	status,0,c
  1154  001A8E  D7D4               	goto	l4396
  1155                           
  1156                           ; BSR set to: 0
  1157                           ;main.c: 63:         {;main.c: 64:             max_current = (0.5 * max_current_ant) + (
      +                          1 - 0.5)*max_current;
  1158  001A90  0E00               	movlw	0
  1159  001A92  6E13               	movwf	___flmul@a,c
  1160  001A94  0E00               	movlw	0
  1161  001A96  6E14               	movwf	___flmul@a+1,c
  1162  001A98  0E00               	movlw	0
  1163  001A9A  6E15               	movwf	___flmul@a+2,c
  1164  001A9C  0E3F               	movlw	63
  1165  001A9E  6E16               	movwf	___flmul@a+3,c
  1166  001AA0  C0F5  F001         	movff	_max_current,___xxtofl@val
  1167  001AA4  C0F6  F002         	movff	_max_current+1,___xxtofl@val+1
  1168  001AA8  0E00               	movlw	0
  1169  001AAA  BE02               	btfsc	___xxtofl@val+1,7,c
  1170  001AAC  0EFF               	movlw	-1
  1171  001AAE  6E03               	movwf	___xxtofl@val+2,c
  1172  001AB0  6E04               	movwf	___xxtofl@val+3,c
  1173  001AB2  0E01               	movlw	1
  1174  001AB4  ECC3  F014         	call	___xxtofl
  1175  001AB8  C001  F00F         	movff	?___xxtofl,___flmul@b
  1176  001ABC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1177  001AC0  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1178  001AC4  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1179  001AC8  ECD3  F00E         	call	___flmul	;wreg free
  1180  001ACC  C00F  F051         	movff	?___flmul,___fladd@a
  1181  001AD0  C010  F052         	movff	?___flmul+1,___fladd@a+1
  1182  001AD4  C011  F053         	movff	?___flmul+2,___fladd@a+2
  1183  001AD8  C012  F054         	movff	?___flmul+3,___fladd@a+3
  1184  001ADC  0E00               	movlw	0
  1185  001ADE  6E13               	movwf	___flmul@a,c
  1186  001AE0  0E00               	movlw	0
  1187  001AE2  6E14               	movwf	___flmul@a+1,c
  1188  001AE4  0E00               	movlw	0
  1189  001AE6  6E15               	movwf	___flmul@a+2,c
  1190  001AE8  0E3F               	movlw	63
  1191  001AEA  6E16               	movwf	___flmul@a+3,c
  1192  001AEC  C0FB  F001         	movff	_max_current_ant,___xxtofl@val
  1193  001AF0  C0FC  F002         	movff	_max_current_ant+1,___xxtofl@val+1
  1194  001AF4  0E00               	movlw	0
  1195  001AF6  BE02               	btfsc	___xxtofl@val+1,7,c
  1196  001AF8  0EFF               	movlw	-1
  1197  001AFA  6E03               	movwf	___xxtofl@val+2,c
  1198  001AFC  6E04               	movwf	___xxtofl@val+3,c
  1199  001AFE  0E01               	movlw	1
  1200  001B00  ECC3  F014         	call	___xxtofl
  1201  001B04  C001  F00F         	movff	?___xxtofl,___flmul@b
  1202  001B08  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1203  001B0C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1204  001B10  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1205  001B14  ECD3  F00E         	call	___flmul	;wreg free
  1206  001B18  C00F  F04D         	movff	?___flmul,___fladd@b
  1207  001B1C  C010  F04E         	movff	?___flmul+1,___fladd@b+1
  1208  001B20  C011  F04F         	movff	?___flmul+2,___fladd@b+2
  1209  001B24  C012  F050         	movff	?___flmul+3,___fladd@b+3
  1210  001B28  EC7C  F010         	call	___fladd	;wreg free
  1211  001B2C  C04D  F060         	movff	?___fladd,___fltol@f1
  1212  001B30  C04E  F061         	movff	?___fladd+1,___fltol@f1+1
  1213  001B34  C04F  F062         	movff	?___fladd+2,___fltol@f1+2
  1214  001B38  C050  F063         	movff	?___fladd+3,___fltol@f1+3
  1215  001B3C  EC31  F016         	call	___fltol	;wreg free
  1216  001B40  C060  F0F5         	movff	?___fltol,_max_current
  1217  001B44  C061  F0F6         	movff	?___fltol+1,_max_current+1
  1218                           
  1219                           ;main.c: 65:             current = max_current * 5. / 1023. - 2.5;
  1220  001B48  0E00               	movlw	0
  1221  001B4A  6E38               	movwf	___fldiv@a,c
  1222  001B4C  0EC0               	movlw	192
  1223  001B4E  6E39               	movwf	___fldiv@a+1,c
  1224  001B50  0E7F               	movlw	127
  1225  001B52  6E3A               	movwf	___fldiv@a+2,c
  1226  001B54  0E44               	movlw	68
  1227  001B56  6E3B               	movwf	___fldiv@a+3,c
  1228  001B58  0E00               	movlw	0
  1229  001B5A  6E13               	movwf	___flmul@a,c
  1230  001B5C  0E00               	movlw	0
  1231  001B5E  6E14               	movwf	___flmul@a+1,c
  1232  001B60  0EA0               	movlw	160
  1233  001B62  6E15               	movwf	___flmul@a+2,c
  1234  001B64  0E40               	movlw	64
  1235  001B66  6E16               	movwf	___flmul@a+3,c
  1236  001B68  C0F5  F001         	movff	_max_current,___xxtofl@val
  1237  001B6C  C0F6  F002         	movff	_max_current+1,___xxtofl@val+1
  1238  001B70  0E00               	movlw	0
  1239  001B72  BE02               	btfsc	___xxtofl@val+1,7,c
  1240  001B74  0EFF               	movlw	-1
  1241  001B76  6E03               	movwf	___xxtofl@val+2,c
  1242  001B78  6E04               	movwf	___xxtofl@val+3,c
  1243  001B7A  0E01               	movlw	1
  1244  001B7C  ECC3  F014         	call	___xxtofl
  1245  001B80  C001  F00F         	movff	?___xxtofl,___flmul@b
  1246  001B84  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1247  001B88  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1248  001B8C  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1249  001B90  ECD3  F00E         	call	___flmul	;wreg free
  1250  001B94  C00F  F034         	movff	?___flmul,___fldiv@b
  1251  001B98  C010  F035         	movff	?___flmul+1,___fldiv@b+1
  1252  001B9C  C011  F036         	movff	?___flmul+2,___fldiv@b+2
  1253  001BA0  C012  F037         	movff	?___flmul+3,___fldiv@b+3
  1254  001BA4  EC02  F012         	call	___fldiv	;wreg free
  1255  001BA8  C034  F04D         	movff	?___fldiv,___fladd@b
  1256  001BAC  C035  F04E         	movff	?___fldiv+1,___fladd@b+1
  1257  001BB0  C036  F04F         	movff	?___fldiv+2,___fladd@b+2
  1258  001BB4  C037  F050         	movff	?___fldiv+3,___fladd@b+3
  1259  001BB8  0E00               	movlw	0
  1260  001BBA  6E51               	movwf	___fladd@a,c
  1261  001BBC  0E00               	movlw	0
  1262  001BBE  6E52               	movwf	___fladd@a+1,c
  1263  001BC0  0E20               	movlw	32
  1264  001BC2  6E53               	movwf	___fladd@a+2,c
  1265  001BC4  0EC0               	movlw	192
  1266  001BC6  6E54               	movwf	___fladd@a+3,c
  1267  001BC8  EC7C  F010         	call	___fladd	;wreg free
  1268  001BCC  C04D  F0E5         	movff	?___fladd,_current
  1269  001BD0  C04E  F0E6         	movff	?___fladd+1,_current+1
  1270  001BD4  C04F  F0E7         	movff	?___fladd+2,_current+2
  1271  001BD8  C050  F0E8         	movff	?___fladd+3,_current+3
  1272                           
  1273                           ;main.c: 66:             current = current / ( 0.2 * sqrtf(2));
  1274  001BDC  0E00               	movlw	0
  1275  001BDE  0100               	movlb	0	; () banked
  1276  001BE0  6F60               	movwf	sqrtf@x& (0+255),b
  1277  001BE2  0E00               	movlw	0
  1278  001BE4  6F61               	movwf	(sqrtf@x+1)& (0+255),b
  1279  001BE6  0E00               	movlw	0
  1280  001BE8  6F62               	movwf	(sqrtf@x+2)& (0+255),b
  1281  001BEA  0E40               	movlw	64
  1282  001BEC  6F63               	movwf	(sqrtf@x+3)& (0+255),b
  1283  001BEE  ECF8  F00A         	call	_sqrtf	;wreg free
  1284  001BF2  C060  F0E1         	movff	?_sqrtf,_main$1211
  1285  001BF6  C061  F0E2         	movff	?_sqrtf+1,_main$1211+1
  1286  001BFA  C062  F0E3         	movff	?_sqrtf+2,_main$1211+2
  1287  001BFE  C063  F0E4         	movff	?_sqrtf+3,_main$1211+3
  1288                           
  1289                           ;main.c: 66:             current = current / ( 0.2 * sqrtf(2));
  1290  001C02  C0E5  F034         	movff	_current,___fldiv@b
  1291  001C06  C0E6  F035         	movff	_current+1,___fldiv@b+1
  1292  001C0A  C0E7  F036         	movff	_current+2,___fldiv@b+2
  1293  001C0E  C0E8  F037         	movff	_current+3,___fldiv@b+3
  1294  001C12  0ECD               	movlw	205
  1295  001C14  6E13               	movwf	___flmul@a,c
  1296  001C16  0ECC               	movlw	204
  1297  001C18  6E14               	movwf	___flmul@a+1,c
  1298  001C1A  0E4C               	movlw	76
  1299  001C1C  6E15               	movwf	___flmul@a+2,c
  1300  001C1E  0E3E               	movlw	62
  1301  001C20  6E16               	movwf	___flmul@a+3,c
  1302  001C22  C0E1  F00F         	movff	_main$1211,___flmul@b
  1303  001C26  C0E2  F010         	movff	_main$1211+1,___flmul@b+1
  1304  001C2A  C0E3  F011         	movff	_main$1211+2,___flmul@b+2
  1305  001C2E  C0E4  F012         	movff	_main$1211+3,___flmul@b+3
  1306  001C32  ECD3  F00E         	call	___flmul	;wreg free
  1307  001C36  C00F  F038         	movff	?___flmul,___fldiv@a
  1308  001C3A  C010  F039         	movff	?___flmul+1,___fldiv@a+1
  1309  001C3E  C011  F03A         	movff	?___flmul+2,___fldiv@a+2
  1310  001C42  C012  F03B         	movff	?___flmul+3,___fldiv@a+3
  1311  001C46  EC02  F012         	call	___fldiv	;wreg free
  1312  001C4A  C034  F0E5         	movff	?___fldiv,_current
  1313  001C4E  C035  F0E6         	movff	?___fldiv+1,_current+1
  1314  001C52  C036  F0E7         	movff	?___fldiv+2,_current+2
  1315  001C56  C037  F0E8         	movff	?___fldiv+3,_current+3
  1316                           
  1317                           ;main.c: 67:             if (current >= 10 || (current <0 && current >-10))
  1318  001C5A  C0E5  F028         	movff	_current,___flge@ff1
  1319  001C5E  C0E6  F029         	movff	_current+1,___flge@ff1+1
  1320  001C62  C0E7  F02A         	movff	_current+2,___flge@ff1+2
  1321  001C66  C0E8  F02B         	movff	_current+3,___flge@ff1+3
  1322  001C6A  0E00               	movlw	0
  1323  001C6C  6E2C               	movwf	___flge@ff2,c
  1324  001C6E  0E00               	movlw	0
  1325  001C70  6E2D               	movwf	___flge@ff2+1,c
  1326  001C72  0E20               	movlw	32
  1327  001C74  6E2E               	movwf	___flge@ff2+2,c
  1328  001C76  0E41               	movlw	65
  1329  001C78  6E2F               	movwf	___flge@ff2+3,c
  1330  001C7A  EC63  F015         	call	___flge	;wreg free
  1331  001C7E  B0D8               	btfsc	status,0,c
  1332  001C80  D017               	goto	u5390
  1333  001C82  0100               	movlb	0	; () banked
  1334  001C84  AFE8               	btfss	(_current+3)& (0+255),7,b
  1335  001C86  D027               	goto	l4414
  1336                           
  1337                           ; BSR set to: 0
  1338  001C88  0E00               	movlw	0
  1339  001C8A  6E28               	movwf	___flge@ff1,c
  1340  001C8C  0E00               	movlw	0
  1341  001C8E  6E29               	movwf	___flge@ff1+1,c
  1342  001C90  0E20               	movlw	32
  1343  001C92  6E2A               	movwf	___flge@ff1+2,c
  1344  001C94  0EC1               	movlw	193
  1345  001C96  6E2B               	movwf	___flge@ff1+3,c
  1346  001C98  C0E5  F02C         	movff	_current,___flge@ff2
  1347  001C9C  C0E6  F02D         	movff	_current+1,___flge@ff2+1
  1348  001CA0  C0E7  F02E         	movff	_current+2,___flge@ff2+2
  1349  001CA4  C0E8  F02F         	movff	_current+3,___flge@ff2+3
  1350  001CA8  EC63  F015         	call	___flge	;wreg free
  1351  001CAC  B0D8               	btfsc	status,0,c
  1352  001CAE  D013               	goto	l4414
  1353  001CB0                     u5390:
  1354                           
  1355                           ;main.c: 68:             {;main.c: 69:                 sprintf(current_str, "I = %0.3f  
      +                          A", current);
  1356  001CB0  0E66               	movlw	low _current_str
  1357  001CB2  0100               	movlb	0	; () banked
  1358  001CB4  6FCE               	movwf	sprintf@s& (0+255),b
  1359  001CB6  0E01               	movlw	high _current_str
  1360  001CB8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1361  001CBA  0E13               	movlw	low STR_1
  1362  001CBC  6FD0               	movwf	sprintf@fmt& (0+255),b
  1363  001CBE  0E08               	movlw	high STR_1
  1364  001CC0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1365  001CC2  C0E5  F0D2         	movff	_current,?_sprintf+4
  1366  001CC6  C0E6  F0D3         	movff	_current+1,?_sprintf+5
  1367  001CCA  C0E7  F0D4         	movff	_current+2,?_sprintf+6
  1368  001CCE  C0E8  F0D5         	movff	_current+3,?_sprintf+7
  1369  001CD2  ECA4  F018         	call	_sprintf	;wreg free
  1370  001CD6                     l4414:
  1371                           
  1372                           ;main.c: 71:             if (current <= -10)
  1373  001CD6  0E00               	movlw	0
  1374  001CD8  6E28               	movwf	___flge@ff1,c
  1375  001CDA  0E00               	movlw	0
  1376  001CDC  6E29               	movwf	___flge@ff1+1,c
  1377  001CDE  0E20               	movlw	32
  1378  001CE0  6E2A               	movwf	___flge@ff1+2,c
  1379  001CE2  0EC1               	movlw	193
  1380  001CE4  6E2B               	movwf	___flge@ff1+3,c
  1381  001CE6  C0E5  F02C         	movff	_current,___flge@ff2
  1382  001CEA  C0E6  F02D         	movff	_current+1,___flge@ff2+1
  1383  001CEE  C0E7  F02E         	movff	_current+2,___flge@ff2+2
  1384  001CF2  C0E8  F02F         	movff	_current+3,___flge@ff2+3
  1385  001CF6  EC63  F015         	call	___flge	;wreg free
  1386  001CFA  A0D8               	btfss	status,0,c
  1387  001CFC  D013               	goto	l4418
  1388                           
  1389                           ;main.c: 72:             {;main.c: 73:                 sprintf(current_str, "I = %0.3f A
      +                          ", current);
  1390  001CFE  0E66               	movlw	low _current_str
  1391  001D00  0100               	movlb	0	; () banked
  1392  001D02  6FCE               	movwf	sprintf@s& (0+255),b
  1393  001D04  0E01               	movlw	high _current_str
  1394  001D06  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1395  001D08  0E20               	movlw	low STR_2
  1396  001D0A  6FD0               	movwf	sprintf@fmt& (0+255),b
  1397  001D0C  0E08               	movlw	high STR_2
  1398  001D0E  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1399  001D10  C0E5  F0D2         	movff	_current,?_sprintf+4
  1400  001D14  C0E6  F0D3         	movff	_current+1,?_sprintf+5
  1401  001D18  C0E7  F0D4         	movff	_current+2,?_sprintf+6
  1402  001D1C  C0E8  F0D5         	movff	_current+3,?_sprintf+7
  1403  001D20  ECA4  F018         	call	_sprintf	;wreg free
  1404  001D24                     l4418:
  1405                           
  1406                           ;main.c: 75:             if (current >= 0 && current <10)
  1407  001D24  0100               	movlb	0	; () banked
  1408  001D26  BFE8               	btfsc	(_current+3)& (0+255),7,b
  1409  001D28  D027               	goto	l4424
  1410                           
  1411                           ; BSR set to: 0
  1412  001D2A  C0E5  F028         	movff	_current,___flge@ff1
  1413  001D2E  C0E6  F029         	movff	_current+1,___flge@ff1+1
  1414  001D32  C0E7  F02A         	movff	_current+2,___flge@ff1+2
  1415  001D36  C0E8  F02B         	movff	_current+3,___flge@ff1+3
  1416  001D3A  0E00               	movlw	0
  1417  001D3C  6E2C               	movwf	___flge@ff2,c
  1418  001D3E  0E00               	movlw	0
  1419  001D40  6E2D               	movwf	___flge@ff2+1,c
  1420  001D42  0E20               	movlw	32
  1421  001D44  6E2E               	movwf	___flge@ff2+2,c
  1422  001D46  0E41               	movlw	65
  1423  001D48  6E2F               	movwf	___flge@ff2+3,c
  1424  001D4A  EC63  F015         	call	___flge	;wreg free
  1425  001D4E  B0D8               	btfsc	status,0,c
  1426  001D50  D013               	goto	l4424
  1427                           
  1428                           ;main.c: 76:             {;main.c: 77:                 sprintf(current_str, "I = %0.3f  
      +                           A", current);
  1429  001D52  0E66               	movlw	low _current_str
  1430  001D54  0100               	movlb	0	; () banked
  1431  001D56  6FCE               	movwf	sprintf@s& (0+255),b
  1432  001D58  0E01               	movlw	high _current_str
  1433  001D5A  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1434  001D5C  0E05               	movlw	low STR_3
  1435  001D5E  6FD0               	movwf	sprintf@fmt& (0+255),b
  1436  001D60  0E08               	movlw	high STR_3
  1437  001D62  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1438  001D64  C0E5  F0D2         	movff	_current,?_sprintf+4
  1439  001D68  C0E6  F0D3         	movff	_current+1,?_sprintf+5
  1440  001D6C  C0E7  F0D4         	movff	_current+2,?_sprintf+6
  1441  001D70  C0E8  F0D5         	movff	_current+3,?_sprintf+7
  1442  001D74  ECA4  F018         	call	_sprintf	;wreg free
  1443  001D78                     l4424:
  1444                           
  1445                           ;main.c: 79:             LCD_String_xy(2,1, current_str);
  1446  001D78  0E01               	movlw	1
  1447  001D7A  6E0B               	movwf	LCD_String_xy@pos,c
  1448  001D7C  0E66               	movlw	low _current_str
  1449  001D7E  6E0C               	movwf	LCD_String_xy@msg,c
  1450  001D80  0E01               	movlw	high _current_str
  1451  001D82  6E0D               	movwf	LCD_String_xy@msg+1,c
  1452  001D84  0E02               	movlw	2
  1453  001D86  ECC7  F019         	call	_LCD_String_xy
  1454                           
  1455                           ;main.c: 80:             counter = 0;
  1456  001D8A  0E00               	movlw	0
  1457  001D8C  0100               	movlb	0	; () banked
  1458  001D8E  6FF4               	movwf	(_counter+1)& (0+255),b
  1459  001D90  0E00               	movlw	0
  1460  001D92  6FF3               	movwf	_counter& (0+255),b
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;main.c: 81:             max_current_ant = max_current;
  1464  001D94  C0F5  F0FB         	movff	_max_current,_max_current_ant
  1465  001D98  C0F6  F0FC         	movff	_max_current+1,_max_current_ant+1
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;main.c: 82:             max_current = 0;
  1469  001D9C  0E00               	movlw	0
  1470  001D9E  6FF6               	movwf	(_max_current+1)& (0+255),b
  1471  001DA0  0E00               	movlw	0
  1472  001DA2  6FF5               	movwf	_max_current& (0+255),b
  1473  001DA4  D649               	goto	l4396
  1474  001DA6                     __end_of_main:
  1475                           	opt callstack 0
  1476                           
  1477 ;; *************** function _sqrtf *****************
  1478 ;; Defined at:
  1479 ;;		line 24 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sqrtf.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  x               4    0[BANK0 ] float 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  ix              4   45[BANK0 ] long 
  1484 ;;  r               4   41[BANK0 ] unsigned long 
  1485 ;;  m               4   37[BANK0 ] long 
  1486 ;;  z               4   33[BANK0 ] float 
  1487 ;;  t               4   29[BANK0 ] long 
  1488 ;;  q               4   25[BANK0 ] long 
  1489 ;;  __xc8_float_    4   21[BANK0 ] struct .
  1490 ;;  i               4   17[BANK0 ] long 
  1491 ;;  s               4   13[BANK0 ] long 
  1492 ;;  sign            4    0        long 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  4    0[BANK0 ] float 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1502 ;;      Params:         0       4       0       0       0       0       0       0       0
  1503 ;;      Locals:         0      40       0       0       0       0       0       0       0
  1504 ;;      Temps:          0       5       0       0       0       0       0       0       0
  1505 ;;      Totals:         0      49       0       0       0       0       0       0       0
  1506 ;;Total ram usage:       49 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    2
  1509 ;; This function calls:
  1510 ;;		___fladd
  1511 ;;		___flge
  1512 ;;		___flmul
  1513 ;;		_nanf
  1514 ;; This function is called by:
  1515 ;;		_main
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text1
  1520  0015F0                     __ptext1:
  1521                           	opt callstack 0
  1522  0015F0                     _sqrtf:
  1523                           	opt callstack 28
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;incstack = 0
  1527  0015F0  C060  F075         	movff	sqrtf@x,sqrtf@__xc8_float_word
  1528  0015F4  C061  F076         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
  1529  0015F8  C062  F077         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
  1530  0015FC  C063  F078         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
  1531  001600  C075  F08D         	movff	sqrtf@__xc8_float_word,sqrtf@ix
  1532  001604  C076  F08E         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
  1533  001608  C077  F08F         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
  1534  00160C  C078  F090         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
  1535  001610  0E00               	movlw	0
  1536  001612  0100               	movlb	0	; () banked
  1537  001614  158D               	andwf	sqrtf@ix& (0+255),w,b
  1538  001616  6F64               	movwf	??_sqrtf& (0+255),b
  1539  001618  0E00               	movlw	0
  1540  00161A  158E               	andwf	(sqrtf@ix+1)& (0+255),w,b
  1541  00161C  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  1542  00161E  0E80               	movlw	128
  1543  001620  158F               	andwf	(sqrtf@ix+2)& (0+255),w,b
  1544  001622  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  1545  001624  0E7F               	movlw	127
  1546  001626  1590               	andwf	(sqrtf@ix+3)& (0+255),w,b
  1547  001628  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  1548  00162A  0E80               	movlw	128
  1549  00162C  1966               	xorwf	(??_sqrtf+2)& (0+255),w,b
  1550  00162E  E133               	bnz	l4250
  1551  001630  0E7F               	movlw	127
  1552  001632  1967               	xorwf	(??_sqrtf+3)& (0+255),w,b
  1553  001634  1164               	iorwf	??_sqrtf& (0+255),w,b
  1554  001636  1165               	iorwf	(??_sqrtf+1)& (0+255),w,b
  1555  001638  A4D8               	btfss	status,2,c
  1556  00163A  D02D               	goto	l4250
  1557                           
  1558                           ; BSR set to: 0
  1559  00163C  C060  F013         	movff	sqrtf@x,___flmul@a
  1560  001640  C061  F014         	movff	sqrtf@x+1,___flmul@a+1
  1561  001644  C062  F015         	movff	sqrtf@x+2,___flmul@a+2
  1562  001648  C063  F016         	movff	sqrtf@x+3,___flmul@a+3
  1563  00164C  C060  F00F         	movff	sqrtf@x,___flmul@b
  1564  001650  C061  F010         	movff	sqrtf@x+1,___flmul@b+1
  1565  001654  C062  F011         	movff	sqrtf@x+2,___flmul@b+2
  1566  001658  C063  F012         	movff	sqrtf@x+3,___flmul@b+3
  1567  00165C  ECD3  F00E         	call	___flmul	;wreg free
  1568  001660  C00F  F04D         	movff	?___flmul,___fladd@b
  1569  001664  C010  F04E         	movff	?___flmul+1,___fladd@b+1
  1570  001668  C011  F04F         	movff	?___flmul+2,___fladd@b+2
  1571  00166C  C012  F050         	movff	?___flmul+3,___fladd@b+3
  1572  001670  C060  F051         	movff	sqrtf@x,___fladd@a
  1573  001674  C061  F052         	movff	sqrtf@x+1,___fladd@a+1
  1574  001678  C062  F053         	movff	sqrtf@x+2,___fladd@a+2
  1575  00167C  C063  F054         	movff	sqrtf@x+3,___fladd@a+3
  1576  001680  EC7C  F010         	call	___fladd	;wreg free
  1577  001684  C04D  F060         	movff	?___fladd,?_sqrtf
  1578  001688  C04E  F061         	movff	?___fladd+1,?_sqrtf+1
  1579  00168C  C04F  F062         	movff	?___fladd+2,?_sqrtf+2
  1580  001690  C050  F063         	movff	?___fladd+3,?_sqrtf+3
  1581  001694  0012               	return	
  1582  001696                     l4250:
  1583                           
  1584                           ; BSR set to: 0
  1585  001696  BF90               	btfsc	(sqrtf@ix+3)& (0+255),7,b
  1586  001698  D007               	goto	u5110
  1587  00169A  5190               	movf	(sqrtf@ix+3)& (0+255),w,b
  1588  00169C  118F               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  1589  00169E  118E               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  1590  0016A0  E133               	bnz	l4264
  1591  0016A2  058D               	decf	sqrtf@ix& (0+255),w,b
  1592  0016A4  B0D8               	btfsc	status,0,c
  1593  0016A6  D030               	goto	l4264
  1594  0016A8                     u5110:
  1595                           
  1596                           ; BSR set to: 0
  1597  0016A8  0EFF               	movlw	255
  1598  0016AA  158D               	andwf	sqrtf@ix& (0+255),w,b
  1599  0016AC  6F64               	movwf	??_sqrtf& (0+255),b
  1600  0016AE  0EFF               	movlw	255
  1601  0016B0  158E               	andwf	(sqrtf@ix+1)& (0+255),w,b
  1602  0016B2  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  1603  0016B4  0EFF               	movlw	255
  1604  0016B6  158F               	andwf	(sqrtf@ix+2)& (0+255),w,b
  1605  0016B8  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  1606  0016BA  0E7F               	movlw	127
  1607  0016BC  1590               	andwf	(sqrtf@ix+3)& (0+255),w,b
  1608  0016BE  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  1609  0016C0  5164               	movf	??_sqrtf& (0+255),w,b
  1610  0016C2  1165               	iorwf	(??_sqrtf+1)& (0+255),w,b
  1611  0016C4  1166               	iorwf	(??_sqrtf+2)& (0+255),w,b
  1612  0016C6  1167               	iorwf	(??_sqrtf+3)& (0+255),w,b
  1613  0016C8  A4D8               	btfss	status,2,c
  1614  0016CA  D009               	goto	l4256
  1615                           
  1616                           ; BSR set to: 0
  1617  0016CC  C060  F060         	movff	sqrtf@x,?_sqrtf
  1618  0016D0  C061  F061         	movff	sqrtf@x+1,?_sqrtf+1
  1619  0016D4  C062  F062         	movff	sqrtf@x+2,?_sqrtf+2
  1620  0016D8  C063  F063         	movff	sqrtf@x+3,?_sqrtf+3
  1621  0016DC  0012               	return	
  1622  0016DE                     l4256:
  1623                           
  1624                           ; BSR set to: 0
  1625  0016DE  AF90               	btfss	(sqrtf@ix+3)& (0+255),7,b
  1626  0016E0  D013               	goto	l4264
  1627                           
  1628                           ; BSR set to: 0
  1629  0016E2  0E00               	movlw	0
  1630  0016E4  6FEA               	movwf	(_errno+1)& (0+255),b
  1631  0016E6  0E21               	movlw	33
  1632  0016E8  6FE9               	movwf	_errno& (0+255),b
  1633                           
  1634                           ; BSR set to: 0
  1635  0016EA  0E12               	movlw	low (STR_3+13)
  1636  0016EC  6E01               	movwf	nanf@s,c
  1637  0016EE  0E08               	movlw	high (STR_3+13)
  1638  0016F0  6E02               	movwf	nanf@s+1,c
  1639  0016F2  ECA7  F01A         	call	_nanf	;wreg free
  1640  0016F6  C001  F060         	movff	?_nanf,?_sqrtf
  1641  0016FA  C002  F061         	movff	?_nanf+1,?_sqrtf+1
  1642  0016FE  C003  F062         	movff	?_nanf+2,?_sqrtf+2
  1643  001702  C004  F063         	movff	?_nanf+3,?_sqrtf+3
  1644  001706  0012               	return	
  1645  001708                     l4264:
  1646                           
  1647                           ; BSR set to: 0
  1648  001708  0E17               	movlw	23
  1649  00170A  6F64               	movwf	??_sqrtf& (0+255),b
  1650  00170C  C08D  F065         	movff	sqrtf@ix,??_sqrtf+1
  1651  001710  C08E  F066         	movff	sqrtf@ix+1,??_sqrtf+2
  1652  001714  C08F  F067         	movff	sqrtf@ix+2,??_sqrtf+3
  1653  001718  C090  F068         	movff	sqrtf@ix+3,??_sqrtf+4
  1654  00171C                     u5145:
  1655  00171C  6764               	tstfsz	??_sqrtf& (0+255),b
  1656  00171E  D001               	goto	u5146
  1657  001720  D007               	goto	u5147
  1658  001722                     u5146:
  1659  001722  3568               	rlcf	(??_sqrtf+4)& (0+255),w,b
  1660  001724  3368               	rrcf	(??_sqrtf+4)& (0+255),f,b
  1661  001726  3367               	rrcf	(??_sqrtf+3)& (0+255),f,b
  1662  001728  3366               	rrcf	(??_sqrtf+2)& (0+255),f,b
  1663  00172A  3365               	rrcf	(??_sqrtf+1)& (0+255),f,b
  1664  00172C  2F64               	decfsz	??_sqrtf& (0+255),f,b
  1665  00172E  D7F6               	goto	u5145
  1666  001730                     u5147:
  1667  001730  C065  F085         	movff	??_sqrtf+1,sqrtf@m
  1668  001734  C066  F086         	movff	??_sqrtf+2,sqrtf@m+1
  1669  001738  C067  F087         	movff	??_sqrtf+3,sqrtf@m+2
  1670  00173C  C068  F088         	movff	??_sqrtf+4,sqrtf@m+3
  1671  001740  0100               	movlb	0	; () banked
  1672  001742  5185               	movf	sqrtf@m& (0+255),w,b
  1673  001744  1186               	iorwf	(sqrtf@m+1)& (0+255),w,b
  1674  001746  1187               	iorwf	(sqrtf@m+2)& (0+255),w,b
  1675  001748  1188               	iorwf	(sqrtf@m+3)& (0+255),w,b
  1676  00174A  A4D8               	btfss	status,2,c
  1677  00174C  D02A               	goto	l1127
  1678                           
  1679                           ; BSR set to: 0
  1680  00174E  0E00               	movlw	0
  1681  001750  6F71               	movwf	sqrtf@i& (0+255),b
  1682  001752  0E00               	movlw	0
  1683  001754  6F72               	movwf	(sqrtf@i+1)& (0+255),b
  1684  001756  0E00               	movlw	0
  1685  001758  6F73               	movwf	(sqrtf@i+2)& (0+255),b
  1686  00175A  0E00               	movlw	0
  1687  00175C  6F74               	movwf	(sqrtf@i+3)& (0+255),b
  1688  00175E  D00B               	goto	l4272
  1689  001760                     l4268:
  1690                           
  1691                           ; BSR set to: 0
  1692  001760  90D8               	bcf	status,0,c
  1693  001762  378D               	rlcf	sqrtf@ix& (0+255),f,b
  1694  001764  378E               	rlcf	(sqrtf@ix+1)& (0+255),f,b
  1695  001766  378F               	rlcf	(sqrtf@ix+2)& (0+255),f,b
  1696  001768  3790               	rlcf	(sqrtf@ix+3)& (0+255),f,b
  1697                           
  1698                           ; BSR set to: 0
  1699  00176A  0E01               	movlw	1
  1700  00176C  2771               	addwf	sqrtf@i& (0+255),f,b
  1701  00176E  0E00               	movlw	0
  1702  001770  2372               	addwfc	(sqrtf@i+1)& (0+255),f,b
  1703  001772  2373               	addwfc	(sqrtf@i+2)& (0+255),f,b
  1704  001774  2374               	addwfc	(sqrtf@i+3)& (0+255),f,b
  1705  001776                     l4272:
  1706                           
  1707                           ; BSR set to: 0
  1708  001776  AF8F               	btfss	(sqrtf@ix+2)& (0+255),7,b
  1709  001778  D7F3               	goto	l4268
  1710                           
  1711                           ; BSR set to: 0
  1712  00177A  0EFF               	movlw	255
  1713  00177C  2571               	addwf	sqrtf@i& (0+255),w,b
  1714  00177E  6F64               	movwf	??_sqrtf& (0+255),b
  1715  001780  0EFF               	movlw	255
  1716  001782  2172               	addwfc	(sqrtf@i+1)& (0+255),w,b
  1717  001784  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  1718  001786  0EFF               	movlw	255
  1719  001788  2173               	addwfc	(sqrtf@i+2)& (0+255),w,b
  1720  00178A  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  1721  00178C  0EFF               	movlw	255
  1722  00178E  2174               	addwfc	(sqrtf@i+3)& (0+255),w,b
  1723  001790  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  1724  001792  5164               	movf	??_sqrtf& (0+255),w,b
  1725  001794  5F85               	subwf	sqrtf@m& (0+255),f,b
  1726  001796  5165               	movf	(??_sqrtf+1)& (0+255),w,b
  1727  001798  5B86               	subwfb	(sqrtf@m+1)& (0+255),f,b
  1728  00179A  5166               	movf	(??_sqrtf+2)& (0+255),w,b
  1729  00179C  5B87               	subwfb	(sqrtf@m+2)& (0+255),f,b
  1730  00179E  5167               	movf	(??_sqrtf+3)& (0+255),w,b
  1731  0017A0  5B88               	subwfb	(sqrtf@m+3)& (0+255),f,b
  1732  0017A2                     l1127:
  1733                           
  1734                           ; BSR set to: 0
  1735  0017A2  0E81               	movlw	129
  1736  0017A4  2785               	addwf	sqrtf@m& (0+255),f,b
  1737  0017A6  0EFF               	movlw	255
  1738  0017A8  2386               	addwfc	(sqrtf@m+1)& (0+255),f,b
  1739  0017AA  0EFF               	movlw	255
  1740  0017AC  2387               	addwfc	(sqrtf@m+2)& (0+255),f,b
  1741  0017AE  0EFF               	movlw	255
  1742  0017B0  2388               	addwfc	(sqrtf@m+3)& (0+255),f,b
  1743  0017B2  0EFF               	movlw	255
  1744  0017B4  158D               	andwf	sqrtf@ix& (0+255),w,b
  1745  0017B6  6F64               	movwf	??_sqrtf& (0+255),b
  1746  0017B8  0EFF               	movlw	255
  1747  0017BA  158E               	andwf	(sqrtf@ix+1)& (0+255),w,b
  1748  0017BC  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  1749  0017BE  0E7F               	movlw	127
  1750  0017C0  158F               	andwf	(sqrtf@ix+2)& (0+255),w,b
  1751  0017C2  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  1752  0017C4  0E00               	movlw	0
  1753  0017C6  1590               	andwf	(sqrtf@ix+3)& (0+255),w,b
  1754  0017C8  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  1755  0017CA  0E00               	movlw	0
  1756  0017CC  1164               	iorwf	??_sqrtf& (0+255),w,b
  1757  0017CE  6F8D               	movwf	sqrtf@ix& (0+255),b
  1758  0017D0  0E00               	movlw	0
  1759  0017D2  1165               	iorwf	(??_sqrtf+1)& (0+255),w,b
  1760  0017D4  6F8E               	movwf	(sqrtf@ix+1)& (0+255),b
  1761  0017D6  0E80               	movlw	128
  1762  0017D8  1166               	iorwf	(??_sqrtf+2)& (0+255),w,b
  1763  0017DA  6F8F               	movwf	(sqrtf@ix+2)& (0+255),b
  1764  0017DC  0E00               	movlw	0
  1765  0017DE  1167               	iorwf	(??_sqrtf+3)& (0+255),w,b
  1766  0017E0  6F90               	movwf	(sqrtf@ix+3)& (0+255),b
  1767                           
  1768                           ; BSR set to: 0
  1769  0017E2  A185               	btfss	sqrtf@m& (0+255),0,b
  1770  0017E4  D008               	goto	l1131
  1771                           
  1772                           ; BSR set to: 0
  1773  0017E6  518D               	movf	sqrtf@ix& (0+255),w,b
  1774  0017E8  278D               	addwf	sqrtf@ix& (0+255),f,b
  1775  0017EA  518E               	movf	(sqrtf@ix+1)& (0+255),w,b
  1776  0017EC  238E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  1777  0017EE  518F               	movf	(sqrtf@ix+2)& (0+255),w,b
  1778  0017F0  238F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  1779  0017F2  5190               	movf	(sqrtf@ix+3)& (0+255),w,b
  1780  0017F4  2390               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  1781  0017F6                     l1131:
  1782                           
  1783                           ; BSR set to: 0
  1784  0017F6  3588               	rlcf	(sqrtf@m+3)& (0+255),w,b
  1785  0017F8  3388               	rrcf	(sqrtf@m+3)& (0+255),f,b
  1786  0017FA  3387               	rrcf	(sqrtf@m+2)& (0+255),f,b
  1787  0017FC  3386               	rrcf	(sqrtf@m+1)& (0+255),f,b
  1788  0017FE  3385               	rrcf	sqrtf@m& (0+255),f,b
  1789  001800  518D               	movf	sqrtf@ix& (0+255),w,b
  1790  001802  278D               	addwf	sqrtf@ix& (0+255),f,b
  1791  001804  518E               	movf	(sqrtf@ix+1)& (0+255),w,b
  1792  001806  238E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  1793  001808  518F               	movf	(sqrtf@ix+2)& (0+255),w,b
  1794  00180A  238F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  1795  00180C  5190               	movf	(sqrtf@ix+3)& (0+255),w,b
  1796  00180E  2390               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  1797                           
  1798                           ; BSR set to: 0
  1799  001810  0E00               	movlw	0
  1800  001812  6F6D               	movwf	sqrtf@s& (0+255),b
  1801  001814  0E00               	movlw	0
  1802  001816  6F6E               	movwf	(sqrtf@s+1)& (0+255),b
  1803  001818  0E00               	movlw	0
  1804  00181A  6F6F               	movwf	(sqrtf@s+2)& (0+255),b
  1805  00181C  0E00               	movlw	0
  1806  00181E  6F70               	movwf	(sqrtf@s+3)& (0+255),b
  1807  001820  C06D  F079         	movff	sqrtf@s,sqrtf@q
  1808  001824  C06E  F07A         	movff	sqrtf@s+1,sqrtf@q+1
  1809  001828  C06F  F07B         	movff	sqrtf@s+2,sqrtf@q+2
  1810  00182C  C070  F07C         	movff	sqrtf@s+3,sqrtf@q+3
  1811                           
  1812                           ; BSR set to: 0
  1813  001830  0E00               	movlw	0
  1814  001832  6F89               	movwf	sqrtf@r& (0+255),b
  1815  001834  0E00               	movlw	0
  1816  001836  6F8A               	movwf	(sqrtf@r+1)& (0+255),b
  1817  001838  0E00               	movlw	0
  1818  00183A  6F8B               	movwf	(sqrtf@r+2)& (0+255),b
  1819  00183C  0E01               	movlw	1
  1820  00183E  6F8C               	movwf	(sqrtf@r+3)& (0+255),b
  1821  001840  D043               	goto	l4290
  1822  001842                     l4284:
  1823                           
  1824                           ; BSR set to: 0
  1825  001842  5189               	movf	sqrtf@r& (0+255),w,b
  1826  001844  256D               	addwf	sqrtf@s& (0+255),w,b
  1827  001846  6F7D               	movwf	sqrtf@t& (0+255),b
  1828  001848  518A               	movf	(sqrtf@r+1)& (0+255),w,b
  1829  00184A  216E               	addwfc	(sqrtf@s+1)& (0+255),w,b
  1830  00184C  6F7E               	movwf	(sqrtf@t+1)& (0+255),b
  1831  00184E  518B               	movf	(sqrtf@r+2)& (0+255),w,b
  1832  001850  216F               	addwfc	(sqrtf@s+2)& (0+255),w,b
  1833  001852  6F7F               	movwf	(sqrtf@t+2)& (0+255),b
  1834  001854  518C               	movf	(sqrtf@r+3)& (0+255),w,b
  1835  001856  2170               	addwfc	(sqrtf@s+3)& (0+255),w,b
  1836  001858  6F80               	movwf	(sqrtf@t+3)& (0+255),b
  1837  00185A  517D               	movf	sqrtf@t& (0+255),w,b
  1838  00185C  5D8D               	subwf	sqrtf@ix& (0+255),w,b
  1839  00185E  517E               	movf	(sqrtf@t+1)& (0+255),w,b
  1840  001860  598E               	subwfb	(sqrtf@ix+1)& (0+255),w,b
  1841  001862  517F               	movf	(sqrtf@t+2)& (0+255),w,b
  1842  001864  598F               	subwfb	(sqrtf@ix+2)& (0+255),w,b
  1843  001866  5190               	movf	(sqrtf@ix+3)& (0+255),w,b
  1844  001868  0A80               	xorlw	128
  1845  00186A  6F64               	movwf	??_sqrtf& (0+255),b
  1846  00186C  5180               	movf	(sqrtf@t+3)& (0+255),w,b
  1847  00186E  0A80               	xorlw	128
  1848  001870  5964               	subwfb	??_sqrtf& (0+255),w,b
  1849  001872  A0D8               	btfss	status,0,c
  1850  001874  D01C               	goto	l1134
  1851                           
  1852                           ; BSR set to: 0
  1853  001876  5189               	movf	sqrtf@r& (0+255),w,b
  1854  001878  257D               	addwf	sqrtf@t& (0+255),w,b
  1855  00187A  6F6D               	movwf	sqrtf@s& (0+255),b
  1856  00187C  518A               	movf	(sqrtf@r+1)& (0+255),w,b
  1857  00187E  217E               	addwfc	(sqrtf@t+1)& (0+255),w,b
  1858  001880  6F6E               	movwf	(sqrtf@s+1)& (0+255),b
  1859  001882  518B               	movf	(sqrtf@r+2)& (0+255),w,b
  1860  001884  217F               	addwfc	(sqrtf@t+2)& (0+255),w,b
  1861  001886  6F6F               	movwf	(sqrtf@s+2)& (0+255),b
  1862  001888  518C               	movf	(sqrtf@r+3)& (0+255),w,b
  1863  00188A  2180               	addwfc	(sqrtf@t+3)& (0+255),w,b
  1864  00188C  6F70               	movwf	(sqrtf@s+3)& (0+255),b
  1865  00188E  517D               	movf	sqrtf@t& (0+255),w,b
  1866  001890  5F8D               	subwf	sqrtf@ix& (0+255),f,b
  1867  001892  517E               	movf	(sqrtf@t+1)& (0+255),w,b
  1868  001894  5B8E               	subwfb	(sqrtf@ix+1)& (0+255),f,b
  1869  001896  517F               	movf	(sqrtf@t+2)& (0+255),w,b
  1870  001898  5B8F               	subwfb	(sqrtf@ix+2)& (0+255),f,b
  1871  00189A  5180               	movf	(sqrtf@t+3)& (0+255),w,b
  1872  00189C  5B90               	subwfb	(sqrtf@ix+3)& (0+255),f,b
  1873  00189E  5189               	movf	sqrtf@r& (0+255),w,b
  1874  0018A0  2779               	addwf	sqrtf@q& (0+255),f,b
  1875  0018A2  518A               	movf	(sqrtf@r+1)& (0+255),w,b
  1876  0018A4  237A               	addwfc	(sqrtf@q+1)& (0+255),f,b
  1877  0018A6  518B               	movf	(sqrtf@r+2)& (0+255),w,b
  1878  0018A8  237B               	addwfc	(sqrtf@q+2)& (0+255),f,b
  1879  0018AA  518C               	movf	(sqrtf@r+3)& (0+255),w,b
  1880  0018AC  237C               	addwfc	(sqrtf@q+3)& (0+255),f,b
  1881  0018AE                     l1134:
  1882                           
  1883                           ; BSR set to: 0
  1884  0018AE  518D               	movf	sqrtf@ix& (0+255),w,b
  1885  0018B0  278D               	addwf	sqrtf@ix& (0+255),f,b
  1886  0018B2  518E               	movf	(sqrtf@ix+1)& (0+255),w,b
  1887  0018B4  238E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  1888  0018B6  518F               	movf	(sqrtf@ix+2)& (0+255),w,b
  1889  0018B8  238F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  1890  0018BA  5190               	movf	(sqrtf@ix+3)& (0+255),w,b
  1891  0018BC  2390               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  1892                           
  1893                           ; BSR set to: 0
  1894  0018BE  90D8               	bcf	status,0,c
  1895  0018C0  338C               	rrcf	(sqrtf@r+3)& (0+255),f,b
  1896  0018C2  338B               	rrcf	(sqrtf@r+2)& (0+255),f,b
  1897  0018C4  338A               	rrcf	(sqrtf@r+1)& (0+255),f,b
  1898  0018C6  3389               	rrcf	sqrtf@r& (0+255),f,b
  1899  0018C8                     l4290:
  1900                           
  1901                           ; BSR set to: 0
  1902  0018C8  5189               	movf	sqrtf@r& (0+255),w,b
  1903  0018CA  118A               	iorwf	(sqrtf@r+1)& (0+255),w,b
  1904  0018CC  118B               	iorwf	(sqrtf@r+2)& (0+255),w,b
  1905  0018CE  118C               	iorwf	(sqrtf@r+3)& (0+255),w,b
  1906  0018D0  A4D8               	btfss	status,2,c
  1907  0018D2  D7B7               	goto	l4284
  1908                           
  1909                           ; BSR set to: 0
  1910  0018D4  518D               	movf	sqrtf@ix& (0+255),w,b
  1911  0018D6  118E               	iorwf	(sqrtf@ix+1)& (0+255),w,b
  1912  0018D8  118F               	iorwf	(sqrtf@ix+2)& (0+255),w,b
  1913  0018DA  1190               	iorwf	(sqrtf@ix+3)& (0+255),w,b
  1914  0018DC  B4D8               	btfsc	status,2,c
  1915  0018DE  D055               	goto	l1136
  1916                           
  1917                           ; BSR set to: 0
  1918  0018E0  0E00               	movlw	0
  1919  0018E2  6F81               	movwf	sqrtf@z& (0+255),b
  1920  0018E4  0E00               	movlw	0
  1921  0018E6  6F82               	movwf	(sqrtf@z+1)& (0+255),b
  1922  0018E8  0E80               	movlw	128
  1923  0018EA  6F83               	movwf	(sqrtf@z+2)& (0+255),b
  1924  0018EC  0E3F               	movlw	63
  1925  0018EE  6F84               	movwf	(sqrtf@z+3)& (0+255),b
  1926                           
  1927                           ; BSR set to: 0
  1928  0018F0  C081  F028         	movff	sqrtf@z,___flge@ff1
  1929  0018F4  C082  F029         	movff	sqrtf@z+1,___flge@ff1+1
  1930  0018F8  C083  F02A         	movff	sqrtf@z+2,___flge@ff1+2
  1931  0018FC  C084  F02B         	movff	sqrtf@z+3,___flge@ff1+3
  1932  001900  0E00               	movlw	0
  1933  001902  6E2C               	movwf	___flge@ff2,c
  1934  001904  0E00               	movlw	0
  1935  001906  6E2D               	movwf	___flge@ff2+1,c
  1936  001908  0E80               	movlw	128
  1937  00190A  6E2E               	movwf	___flge@ff2+2,c
  1938  00190C  0E3F               	movlw	63
  1939  00190E  6E2F               	movwf	___flge@ff2+3,c
  1940  001910  EC63  F015         	call	___flge	;wreg free
  1941  001914  A0D8               	btfss	status,0,c
  1942  001916  D039               	goto	l1136
  1943  001918  0E00               	movlw	0
  1944  00191A  0100               	movlb	0	; () banked
  1945  00191C  6F81               	movwf	sqrtf@z& (0+255),b
  1946  00191E  0E00               	movlw	0
  1947  001920  6F82               	movwf	(sqrtf@z+1)& (0+255),b
  1948  001922  0E80               	movlw	128
  1949  001924  6F83               	movwf	(sqrtf@z+2)& (0+255),b
  1950  001926  0E3F               	movlw	63
  1951  001928  6F84               	movwf	(sqrtf@z+3)& (0+255),b
  1952                           
  1953                           ; BSR set to: 0
  1954  00192A  0E00               	movlw	0
  1955  00192C  6E28               	movwf	___flge@ff1,c
  1956  00192E  0E00               	movlw	0
  1957  001930  6E29               	movwf	___flge@ff1+1,c
  1958  001932  0E80               	movlw	128
  1959  001934  6E2A               	movwf	___flge@ff1+2,c
  1960  001936  0E3F               	movlw	63
  1961  001938  6E2B               	movwf	___flge@ff1+3,c
  1962  00193A  C081  F02C         	movff	sqrtf@z,___flge@ff2
  1963  00193E  C082  F02D         	movff	sqrtf@z+1,___flge@ff2+1
  1964  001942  C083  F02E         	movff	sqrtf@z+2,___flge@ff2+2
  1965  001946  C084  F02F         	movff	sqrtf@z+3,___flge@ff2+3
  1966  00194A  EC63  F015         	call	___flge	;wreg free
  1967  00194E  B0D8               	btfsc	status,0,c
  1968  001950  D007               	goto	l4304
  1969  001952  0E02               	movlw	2
  1970  001954  0100               	movlb	0	; () banked
  1971  001956  2779               	addwf	sqrtf@q& (0+255),f,b
  1972  001958  0E00               	movlw	0
  1973  00195A  237A               	addwfc	(sqrtf@q+1)& (0+255),f,b
  1974  00195C  237B               	addwfc	(sqrtf@q+2)& (0+255),f,b
  1975  00195E  D014               	goto	L1
  1976  001960                     l4304:
  1977  001960  0E01               	movlw	1
  1978  001962  0100               	movlb	0	; () banked
  1979  001964  1579               	andwf	sqrtf@q& (0+255),w,b
  1980  001966  6F64               	movwf	??_sqrtf& (0+255),b
  1981  001968  0E00               	movlw	0
  1982  00196A  157A               	andwf	(sqrtf@q+1)& (0+255),w,b
  1983  00196C  6F65               	movwf	(??_sqrtf+1)& (0+255),b
  1984  00196E  0E00               	movlw	0
  1985  001970  157B               	andwf	(sqrtf@q+2)& (0+255),w,b
  1986  001972  6F66               	movwf	(??_sqrtf+2)& (0+255),b
  1987  001974  0E00               	movlw	0
  1988  001976  157C               	andwf	(sqrtf@q+3)& (0+255),w,b
  1989  001978  6F67               	movwf	(??_sqrtf+3)& (0+255),b
  1990  00197A  5164               	movf	??_sqrtf& (0+255),w,b
  1991  00197C  2779               	addwf	sqrtf@q& (0+255),f,b
  1992  00197E  5165               	movf	(??_sqrtf+1)& (0+255),w,b
  1993  001980  237A               	addwfc	(sqrtf@q+1)& (0+255),f,b
  1994  001982  5166               	movf	(??_sqrtf+2)& (0+255),w,b
  1995  001984  237B               	addwfc	(sqrtf@q+2)& (0+255),f,b
  1996  001986  5167               	movf	(??_sqrtf+3)& (0+255),w,b
  1997  001988                     L1:
  1998  001988  237C               	addwfc	(sqrtf@q+3)& (0+255),f,b
  1999  00198A                     l1136:
  2000  00198A  C079  F064         	movff	sqrtf@q,??_sqrtf
  2001  00198E  C07A  F065         	movff	sqrtf@q+1,??_sqrtf+1
  2002  001992  C07B  F066         	movff	sqrtf@q+2,??_sqrtf+2
  2003  001996  C07C  F067         	movff	sqrtf@q+3,??_sqrtf+3
  2004  00199A  0100               	movlb	0	; () banked
  2005  00199C  3567               	rlcf	(??_sqrtf+3)& (0+255),w,b
  2006  00199E  3367               	rrcf	(??_sqrtf+3)& (0+255),f,b
  2007  0019A0  3366               	rrcf	(??_sqrtf+2)& (0+255),f,b
  2008  0019A2  3365               	rrcf	(??_sqrtf+1)& (0+255),f,b
  2009  0019A4  3364               	rrcf	??_sqrtf& (0+255),f,b
  2010  0019A6  0E00               	movlw	0
  2011  0019A8  2564               	addwf	??_sqrtf& (0+255),w,b
  2012  0019AA  6F8D               	movwf	sqrtf@ix& (0+255),b
  2013  0019AC  0E00               	movlw	0
  2014  0019AE  2165               	addwfc	(??_sqrtf+1)& (0+255),w,b
  2015  0019B0  6F8E               	movwf	(sqrtf@ix+1)& (0+255),b
  2016  0019B2  0E00               	movlw	0
  2017  0019B4  2166               	addwfc	(??_sqrtf+2)& (0+255),w,b
  2018  0019B6  6F8F               	movwf	(sqrtf@ix+2)& (0+255),b
  2019  0019B8  0E3F               	movlw	63
  2020  0019BA  2167               	addwfc	(??_sqrtf+3)& (0+255),w,b
  2021  0019BC  6F90               	movwf	(sqrtf@ix+3)& (0+255),b
  2022  0019BE  C085  F064         	movff	sqrtf@m,??_sqrtf
  2023  0019C2  C086  F065         	movff	sqrtf@m+1,??_sqrtf+1
  2024  0019C6  C087  F066         	movff	sqrtf@m+2,??_sqrtf+2
  2025  0019CA  C088  F067         	movff	sqrtf@m+3,??_sqrtf+3
  2026  0019CE  0E17               	movlw	23
  2027  0019D0                     u5235:
  2028  0019D0  90D8               	bcf	status,0,c
  2029  0019D2  3764               	rlcf	??_sqrtf& (0+255),f,b
  2030  0019D4  3765               	rlcf	(??_sqrtf+1)& (0+255),f,b
  2031  0019D6  3766               	rlcf	(??_sqrtf+2)& (0+255),f,b
  2032  0019D8  3767               	rlcf	(??_sqrtf+3)& (0+255),f,b
  2033  0019DA  2EE8               	decfsz	wreg,f,c
  2034  0019DC  D7F9               	goto	u5235
  2035  0019DE  5164               	movf	??_sqrtf& (0+255),w,b
  2036  0019E0  278D               	addwf	sqrtf@ix& (0+255),f,b
  2037  0019E2  5165               	movf	(??_sqrtf+1)& (0+255),w,b
  2038  0019E4  238E               	addwfc	(sqrtf@ix+1)& (0+255),f,b
  2039  0019E6  5166               	movf	(??_sqrtf+2)& (0+255),w,b
  2040  0019E8  238F               	addwfc	(sqrtf@ix+2)& (0+255),f,b
  2041  0019EA  5167               	movf	(??_sqrtf+3)& (0+255),w,b
  2042  0019EC  2390               	addwfc	(sqrtf@ix+3)& (0+255),f,b
  2043                           
  2044                           ; BSR set to: 0
  2045  0019EE  C08D  F075         	movff	sqrtf@ix,sqrtf@__xc8_float_word
  2046  0019F2  C08E  F076         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
  2047  0019F6  C08F  F077         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
  2048  0019FA  C090  F078         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
  2049                           
  2050                           ; BSR set to: 0
  2051  0019FE  C075  F081         	movff	sqrtf@__xc8_float_word,sqrtf@z
  2052  001A02  C076  F082         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
  2053  001A06  C077  F083         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
  2054  001A0A  C078  F084         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
  2055                           
  2056                           ; BSR set to: 0
  2057  001A0E  C081  F060         	movff	sqrtf@z,?_sqrtf
  2058  001A12  C082  F061         	movff	sqrtf@z+1,?_sqrtf+1
  2059  001A16  C083  F062         	movff	sqrtf@z+2,?_sqrtf+2
  2060  001A1A  C084  F063         	movff	sqrtf@z+3,?_sqrtf+3
  2061  001A1E  0012               	return		;funcret
  2062  001A20                     __end_of_sqrtf:
  2063                           	opt callstack 0
  2064                           
  2065 ;; *************** function _nanf *****************
  2066 ;; Defined at:
  2067 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nanf.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2070 ;;		 -> STR_17(1), 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  u               4    4[COMRAM] struct .
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  4    0[COMRAM] float 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2082 ;;      Params:         4       0       0       0       0       0       0       0       0
  2083 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2085 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2086 ;;Total ram usage:        8 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    1
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_sqrtf
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text2
  2097  00354E                     __ptext2:
  2098                           	opt callstack 0
  2099  00354E                     _nanf:
  2100                           	opt callstack 28
  2101                           
  2102                           ;incstack = 0
  2103  00354E  0EFF               	movlw	255
  2104  003550  6E05               	movwf	nanf@u,c
  2105  003552  0EFF               	movlw	255
  2106  003554  6E06               	movwf	nanf@u+1,c
  2107  003556  0EFF               	movlw	255
  2108  003558  6E07               	movwf	nanf@u+2,c
  2109  00355A  0E7F               	movlw	127
  2110  00355C  6E08               	movwf	nanf@u+3,c
  2111  00355E  C005  F001         	movff	nanf@u,?_nanf
  2112  003562  C006  F002         	movff	nanf@u+1,?_nanf+1
  2113  003566  C007  F003         	movff	nanf@u+2,?_nanf+2
  2114  00356A  C008  F004         	movff	nanf@u+3,?_nanf+3
  2115  00356E  0012               	return		;funcret
  2116  003570                     __end_of_nanf:
  2117                           	opt callstack 0
  2118                           
  2119 ;; *************** function _sprintf *****************
  2120 ;; Defined at:
  2121 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  s               2  110[BANK0 ] PTR unsigned char 
  2124 ;;		 -> current_str(10), 
  2125 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  2126 ;;		 -> STR_3(14), STR_2(12), STR_1(13), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  f               6  122[BANK0 ] struct _IO_FILE
  2129 ;;  ap              2  120[BANK0 ] PTR void [1]
  2130 ;;		 -> ?_sprintf(2), 
  2131 ;;  ret             2    0        int 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  2  110[BANK0 ] int 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2141 ;;      Params:         0       8       0       0       0       0       0       0       0
  2142 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2144 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2145 ;;Total ram usage:       18 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    8
  2148 ;; This function calls:
  2149 ;;		_vfprintf
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text3
  2156  003148                     __ptext3:
  2157                           	opt callstack 0
  2158  003148                     _sprintf:
  2159                           	opt callstack 22
  2160                           
  2161                           ;incstack = 0
  2162  003148  0ED2               	movlw	low (?_sprintf+4)
  2163  00314A  0100               	movlb	0	; () banked
  2164  00314C  6FD8               	movwf	sprintf@ap& (0+255),b
  2165  00314E  0E00               	movlw	high (?_sprintf+4)
  2166  003150  6FD9               	movwf	(sprintf@ap+1)& (0+255),b
  2167  003152  C0CE  F0DA         	movff	sprintf@s,sprintf@f
  2168  003156  C0CF  F0DB         	movff	sprintf@s+1,sprintf@f+1
  2169                           
  2170                           ; BSR set to: 0
  2171  00315A  0E00               	movlw	0
  2172  00315C  6FDD               	movwf	(sprintf@f+3)& (0+255),b
  2173  00315E  0E00               	movlw	0
  2174  003160  6FDC               	movwf	(sprintf@f+2)& (0+255),b
  2175                           
  2176                           ; BSR set to: 0
  2177  003162  0E00               	movlw	0
  2178  003164  6FDF               	movwf	(sprintf@f+5)& (0+255),b
  2179  003166  0E00               	movlw	0
  2180  003168  6FDE               	movwf	(sprintf@f+4)& (0+255),b
  2181                           
  2182                           ; BSR set to: 0
  2183  00316A  0EDA               	movlw	low sprintf@f
  2184  00316C  6FC6               	movwf	vfprintf@fp& (0+255),b
  2185  00316E  0E00               	movlw	high sprintf@f
  2186  003170  6FC7               	movwf	(vfprintf@fp+1)& (0+255),b
  2187  003172  C0D0  F0C8         	movff	sprintf@fmt,vfprintf@fmt
  2188  003176  C0D1  F0C9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2189  00317A  0ED8               	movlw	low sprintf@ap
  2190  00317C  6FCA               	movwf	vfprintf@ap& (0+255),b
  2191  00317E  0E00               	movlw	high sprintf@ap
  2192  003180  6FCB               	movwf	(vfprintf@ap+1)& (0+255),b
  2193  003182  EC79  F018         	call	_vfprintf	;wreg free
  2194  003186  0100               	movlb	0	; () banked
  2195  003188  51DC               	movf	(sprintf@f+2)& (0+255),w,b
  2196  00318A  25CE               	addwf	sprintf@s& (0+255),w,b
  2197  00318C  6ED9               	movwf	fsr2l,c
  2198  00318E  51DD               	movf	(sprintf@f+3)& (0+255),w,b
  2199  003190  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  2200  003192  6EDA               	movwf	fsr2h,c
  2201  003194  0E00               	movlw	0
  2202  003196  6EDF               	movwf	indf2,c
  2203                           
  2204                           ; BSR set to: 0
  2205  003198  0012               	return		;funcret
  2206  00319A                     __end_of_sprintf:
  2207                           	opt callstack 0
  2208                           
  2209 ;; *************** function _vfprintf *****************
  2210 ;; Defined at:
  2211 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  fp              2  102[BANK0 ] PTR struct _IO_FILE
  2214 ;;		 -> sprintf@f(6), 
  2215 ;;  fmt             2  104[BANK0 ] PTR const unsigned char 
  2216 ;;		 -> STR_3(14), STR_2(12), STR_1(13), 
  2217 ;;  ap              2  106[BANK0 ] PTR PTR void 
  2218 ;;		 -> sprintf@ap(2), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  2221 ;;		 -> STR_3(14), STR_2(12), STR_1(13), 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  2  102[BANK0 ] int 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2231 ;;      Params:         0       6       0       0       0       0       0       0       0
  2232 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2234 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2235 ;;Total ram usage:        8 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    7
  2238 ;; This function calls:
  2239 ;;		_vfpfcnvrt
  2240 ;; This function is called by:
  2241 ;;		_sprintf
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text4
  2246  0030F2                     __ptext4:
  2247                           	opt callstack 0
  2248  0030F2                     _vfprintf:
  2249                           	opt callstack 22
  2250                           
  2251                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;incstack = 0
  2255  0030F2  C0C8  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  2256  0030F6  C0C9  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2257                           
  2258                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2259  0030FA  0E00               	movlw	0
  2260  0030FC  0100               	movlb	0	; () banked
  2261  0030FE  6FEC               	movwf	(_nout+1)& (0+255),b
  2262  003100  0E00               	movlw	0
  2263  003102  6FEB               	movwf	_nout& (0+255),b
  2264                           
  2265                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2266  003104  D013               	goto	l4196
  2267  003106                     l4194:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2271  003106  C0C6  F0AE         	movff	vfprintf@fp,vfpfcnvrt@fp
  2272  00310A  C0C7  F0AF         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2273  00310E  0ECC               	movlw	low vfprintf@cfmt
  2274  003110  6FB0               	movwf	vfpfcnvrt@fmt& (0+255),b
  2275  003112  0E00               	movlw	high vfprintf@cfmt
  2276  003114  6FB1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2277  003116  C0CA  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2278  00311A  C0CB  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2279  00311E  ECDE  F008         	call	_vfpfcnvrt	;wreg free
  2280  003122  0100               	movlb	0	; () banked
  2281  003124  51AE               	movf	?_vfpfcnvrt& (0+255),w,b
  2282  003126  27EB               	addwf	_nout& (0+255),f,b
  2283  003128  51AF               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2284  00312A  23EC               	addwfc	(_nout+1)& (0+255),f,b
  2285  00312C                     l4196:
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2289  00312C  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  2290  003130  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2291  003134                     	if	0	;tblptru may be non-zero
  2292  003134                     	endif
  2293  003134                     	if	0	;tblptru may be non-zero
  2294  003134                     	endif
  2295  003134  0008               	tblrd		*
  2296  003136  50F5               	movf	tablat,w,c
  2297  003138  0900               	iorlw	0
  2298  00313A  A4D8               	btfss	status,2,c
  2299  00313C  D7E4               	goto	l4194
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2303  00313E  C0EB  F0C6         	movff	_nout,?_vfprintf
  2304  003142  C0EC  F0C7         	movff	_nout+1,?_vfprintf+1
  2305                           
  2306                           ; BSR set to: 0
  2307  003146  0012               	return		;funcret
  2308  003148                     __end_of_vfprintf:
  2309                           	opt callstack 0
  2310                           
  2311 ;; *************** function _vfpfcnvrt *****************
  2312 ;; Defined at:
  2313 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  fp              2   78[BANK0 ] PTR struct _IO_FILE
  2316 ;;		 -> sprintf@f(6), 
  2317 ;;  fmt             2   80[BANK0 ] PTR PTR unsigned char 
  2318 ;;		 -> vfprintf@cfmt(2), 
  2319 ;;  ap              2   82[BANK0 ] PTR PTR void 
  2320 ;;		 -> sprintf@ap(2), 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  llu             8    0        unsigned long long 
  2323 ;;  ll              8    0        long long 
  2324 ;;  f               4   94[BANK0 ] long long 
  2325 ;;  ct              3   98[BANK0 ] unsigned char [3]
  2326 ;;  vp              3    0        PTR void 
  2327 ;;  cp              3    0        PTR unsigned char 
  2328 ;;  done            2   88[BANK0 ] int 
  2329 ;;  i               2    0        int 
  2330 ;;  c               1  101[BANK0 ] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  2   78[BANK0 ] int 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2340 ;;      Params:         0       6       0       0       0       0       0       0       0
  2341 ;;      Locals:         0      14       0       0       0       0       0       0       0
  2342 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2343 ;;      Totals:         0      24       0       0       0       0       0       0       0
  2344 ;;Total ram usage:       24 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    6
  2347 ;; This function calls:
  2348 ;;		_atoi
  2349 ;;		_efgtoa
  2350 ;;		_fputc
  2351 ;;		_isdigit
  2352 ;;		_isupper
  2353 ;;		_strncmp
  2354 ;;		_tolower
  2355 ;; This function is called by:
  2356 ;;		_vfprintf
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text5
  2361  0011BC                     __ptext5:
  2362                           	opt callstack 0
  2363  0011BC                     _vfpfcnvrt:
  2364                           	opt callstack 22
  2365                           
  2366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;incstack = 0
  2370  0011BC  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2371  0011C0  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2372  0011C4  CFDE FFF6          	movff	postinc2,tblptrl
  2373  0011C8  CFDD FFF7          	movff	postdec2,tblptrh
  2374  0011CC                     	if	0	;tblptru may be non-zero
  2375  0011CC                     	endif
  2376  0011CC                     	if	0	;tblptru may be non-zero
  2377  0011CC                     	endif
  2378  0011CC  0008               	tblrd		*
  2379  0011CE  50F5               	movf	tablat,w,c
  2380  0011D0  0A25               	xorlw	37
  2381  0011D2  A4D8               	btfss	status,2,c
  2382  0011D4  D1F3               	goto	l4148
  2383                           
  2384                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2385  0011D6  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2386  0011DA  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2387  0011DE  2ADE               	incf	postinc2,f,c
  2388  0011E0  0E00               	movlw	0
  2389  0011E2  22DD               	addwfc	postdec2,f,c
  2390                           
  2391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2392  0011E4  0E00               	movlw	0
  2393  0011E6  0100               	movlb	0	; () banked
  2394  0011E8  6FEE               	movwf	(_width+1)& (0+255),b
  2395  0011EA  0E00               	movlw	0
  2396  0011EC  6FED               	movwf	_width& (0+255),b
  2397  0011EE  C0ED  F0F1         	movff	_width,_flags
  2398  0011F2  C0EE  F0F2         	movff	_width+1,_flags+1
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2402  0011F6  69EF               	setf	_prec& (0+255),b
  2403  0011F8  69F0               	setf	(_prec+1)& (0+255),b
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  2407  0011FA  0E00               	movlw	0
  2408  0011FC  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2409  0011FE  0E00               	movlw	0
  2410  001200  D014               	goto	L2
  2411  001202                     l4044:
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  2415  001202  81F1               	bsf	_flags& (0+255),0,b
  2416  001204                     l4046:
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  2420  001204  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2421  001208  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2422  00120C  2ADE               	incf	postinc2,f,c
  2423  00120E  0E00               	movlw	0
  2424  001210  22DD               	addwfc	postdec2,f,c
  2425                           
  2426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  2427  001212  D02E               	goto	l4070
  2428  001214                     l4048:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  2432  001214  83F1               	bsf	_flags& (0+255),1,b
  2433  001216  D7F6               	goto	l4046
  2434  001218                     l4052:
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  2438  001218  85F1               	bsf	_flags& (0+255),2,b
  2439  00121A  D7F4               	goto	l4046
  2440  00121C                     l4056:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  2444  00121C  87F1               	bsf	_flags& (0+255),3,b
  2445  00121E  D7F2               	goto	l4046
  2446  001220                     l4060:
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  2450  001220  89F1               	bsf	_flags& (0+255),4,b
  2451  001222  D7F0               	goto	l4046
  2452  001224                     l4064:
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  2456  001224  0E00               	movlw	0
  2457  001226  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2458  001228  0E01               	movlw	1
  2459  00122A                     L2:
  2460  00122A  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  2461                           
  2462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  2463  00122C  D021               	goto	l4070
  2464  00122E                     l4068:
  2465                           
  2466                           ; BSR set to: 0
  2467  00122E  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2468  001232  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2469  001236  CFDE FFF6          	movff	postinc2,tblptrl
  2470  00123A  CFDD FFF7          	movff	postdec2,tblptrh
  2471  00123E                     	if	0	;tblptru may be non-zero
  2472  00123E                     	endif
  2473  00123E                     	if	0	;tblptru may be non-zero
  2474  00123E                     	endif
  2475  00123E  0008               	tblrd		*
  2476  001240  50F5               	movf	tablat,w,c
  2477  001242  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2478  001244  6BB5               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2479                           
  2480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2481                           ; Switch size 1, requested type "simple"
  2482                           ; Number of cases is 1, Range of values is 0 to 0
  2483                           ; switch strategies available:
  2484                           ; Name         Instructions Cycles
  2485                           ; simple_byte            4     3 (average)
  2486                           ;	Chosen strategy is simple_byte
  2487  001246  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2488  001248  0A00               	xorlw	0	; case 0
  2489  00124A  A4D8               	btfss	status,2,c
  2490  00124C  D7EB               	goto	l4064
  2491                           
  2492                           ; BSR set to: 0
  2493                           ; Switch size 1, requested type "simple"
  2494                           ; Number of cases is 5, Range of values is 32 to 48
  2495                           ; switch strategies available:
  2496                           ; Name         Instructions Cycles
  2497                           ; simple_byte           16     9 (average)
  2498                           ;	Chosen strategy is simple_byte
  2499  00124E  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2500  001250  0A20               	xorlw	32	; case 32
  2501  001252  B4D8               	btfsc	status,2,c
  2502  001254  D7E3               	goto	l4056
  2503  001256  0A03               	xorlw	3	; case 35
  2504  001258  B4D8               	btfsc	status,2,c
  2505  00125A  D7E2               	goto	l4060
  2506  00125C  0A08               	xorlw	8	; case 43
  2507  00125E  B4D8               	btfsc	status,2,c
  2508  001260  D7DB               	goto	l4052
  2509  001262  0A06               	xorlw	6	; case 45
  2510  001264  B4D8               	btfsc	status,2,c
  2511  001266  D7CD               	goto	l4044
  2512  001268  0A1D               	xorlw	29	; case 48
  2513  00126A  B4D8               	btfsc	status,2,c
  2514  00126C  D7D3               	goto	l4048
  2515  00126E  D7DA               	goto	l4064
  2516  001270                     l4070:
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  2520  001270  51B8               	movf	vfpfcnvrt@done& (0+255),w,b
  2521  001272  11B9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2522  001274  B4D8               	btfsc	status,2,c
  2523  001276  D7DB               	goto	l4068
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  2527  001278  B1F1               	btfsc	_flags& (0+255),0,b
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  2531  00127A  93F1               	bcf	_flags& (0+255),1,b
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  2535  00127C  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2536  001280  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2537  001284  CFDE FFF6          	movff	postinc2,tblptrl
  2538  001288  CFDD FFF7          	movff	postdec2,tblptrh
  2539  00128C                     	if	0	;tblptru may be non-zero
  2540  00128C                     	endif
  2541  00128C                     	if	0	;tblptru may be non-zero
  2542  00128C                     	endif
  2543  00128C  0008               	tblrd		*
  2544  00128E  50F5               	movf	tablat,w,c
  2545  001290  0A2E               	xorlw	46
  2546  001292  A4D8               	btfss	status,2,c
  2547  001294  D06E               	goto	u4920
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  2551  001296  0E00               	movlw	0
  2552  001298  6FF0               	movwf	(_prec+1)& (0+255),b
  2553  00129A  0E00               	movlw	0
  2554  00129C  6FEF               	movwf	_prec& (0+255),b
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  2558  00129E  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2559  0012A2  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2560  0012A6  2ADE               	incf	postinc2,f,c
  2561  0012A8  0E00               	movlw	0
  2562  0012AA  22DD               	addwfc	postdec2,f,c
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  2566  0012AC  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2567  0012B0  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2568  0012B4  CFDE FFF6          	movff	postinc2,tblptrl
  2569  0012B8  CFDD FFF7          	movff	postdec2,tblptrh
  2570  0012BC                     	if	0	;tblptru may be non-zero
  2571  0012BC                     	endif
  2572  0012BC                     	if	0	;tblptru may be non-zero
  2573  0012BC                     	endif
  2574  0012BC  0008               	tblrd		*
  2575  0012BE  50F5               	movf	tablat,w,c
  2576  0012C0  0A2A               	xorlw	42
  2577  0012C2  A4D8               	btfss	status,2,c
  2578  0012C4  D01C               	goto	l4084
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  2582  0012C6  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2583  0012CA  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2584  0012CE  2ADE               	incf	postinc2,f,c
  2585  0012D0  0E00               	movlw	0
  2586  0012D2  22DD               	addwfc	postdec2,f,c
  2587                           
  2588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  2589  0012D4  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2590  0012D8  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2591  0012DC  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  2592  0012E0  0E02               	movlw	2
  2593  0012E2  26DE               	addwf	postinc2,f,c
  2594  0012E4  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  2595  0012E8  0E00               	movlw	0
  2596  0012EA  22DD               	addwfc	postdec2,f,c
  2597  0012EC  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2598  0012F0  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2599  0012F4  CFDE F0EF          	movff	postinc2,_prec
  2600  0012F8  CFDD F0F0          	movff	postdec2,_prec+1
  2601                           
  2602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  2603  0012FC  D03A               	goto	u4920
  2604  0012FE                     l4084:
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  2608  0012FE  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2609  001302  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2610  001306  CFDE F008          	movff	postinc2,atoi@s
  2611  00130A  CFDD F009          	movff	postdec2,atoi@s+1
  2612  00130E  EC23  F014         	call	_atoi	;wreg free
  2613  001312  C008  F0EF         	movff	?_atoi,_prec
  2614  001316  C009  F0F0         	movff	?_atoi+1,_prec+1
  2615                           
  2616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2617  00131A  D007               	goto	l4088
  2618  00131C                     l4086:
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  2622  00131C  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2623  001320  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2624  001324  2ADE               	incf	postinc2,f,c
  2625  001326  0E00               	movlw	0
  2626  001328  22DD               	addwfc	postdec2,f,c
  2627  00132A                     l4088:
  2628  00132A  0ED0               	movlw	208
  2629  00132C  0100               	movlb	0	; () banked
  2630  00132E  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2631  001330  0EFF               	movlw	255
  2632  001332  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2633  001334  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2634  001338  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2635  00133C  CFDE FFF6          	movff	postinc2,tblptrl
  2636  001340  CFDD FFF7          	movff	postdec2,tblptrh
  2637  001344                     	if	0	;tblptru may be non-zero
  2638  001344                     	endif
  2639  001344                     	if	0	;tblptru may be non-zero
  2640  001344                     	endif
  2641  001344  0008               	tblrd		*
  2642  001346  50F5               	movf	tablat,w,c
  2643  001348  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2644  00134A  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2645  00134C  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2646  00134E  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2647  001350  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2648  001352  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2649  001354  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2650  001356  E106               	bnz	u4900
  2651  001358  0E0A               	movlw	10
  2652  00135A  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2653  00135C  B0D8               	btfsc	status,0,c
  2654  00135E  D002               	goto	u4900
  2655  001360  0E01               	movlw	1
  2656  001362  D001               	goto	u4910
  2657  001364                     u4900:
  2658  001364  0E00               	movlw	0
  2659  001366                     u4910:
  2660  001366  6FBA               	movwf	_vfpfcnvrt$383& (0+255),b
  2661  001368  6BBB               	clrf	(_vfpfcnvrt$383+1)& (0+255),b
  2662                           
  2663                           ; BSR set to: 0
  2664  00136A  51BA               	movf	_vfpfcnvrt$383& (0+255),w,b
  2665  00136C  11BB               	iorwf	(_vfpfcnvrt$383+1)& (0+255),w,b
  2666  00136E  A4D8               	btfss	status,2,c
  2667  001370  D7D5               	goto	l4086
  2668  001372                     u4920:
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  2672  001372  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2673  001376  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2674  00137A  CFDE FFF6          	movff	postinc2,tblptrl
  2675  00137E  CFDD FFF7          	movff	postdec2,tblptrh
  2676  001382                     	if	0	;tblptru may be non-zero
  2677  001382                     	endif
  2678  001382                     	if	0	;tblptru may be non-zero
  2679  001382                     	endif
  2680  001382  0008               	tblrd		*
  2681  001384  50F5               	movf	tablat,w,c
  2682  001386  6E07               	movwf	tolower@c,c
  2683  001388  6A08               	clrf	tolower@c+1,c
  2684  00138A  ECF6  F018         	call	_tolower	;wreg free
  2685  00138E  5007               	movf	?_tolower,w,c
  2686  001390  0100               	movlb	0	; () banked
  2687  001392  6FC2               	movwf	vfpfcnvrt@ct& (0+255),b
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  2691  001394  51C2               	movf	vfpfcnvrt@ct& (0+255),w,b
  2692  001396  B4D8               	btfsc	status,2,c
  2693  001398  D035               	goto	l4104
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  2697  00139A  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2698  00139E  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2699  0013A2  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  2700  0013A6  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  2701  0013AA  0E01               	movlw	1
  2702  0013AC  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  2703  0013AE  0E00               	movlw	0
  2704  0013B0  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2705  0013B2  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2706  0013B6  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2707  0013BA                     	if	0	;tblptru may be non-zero
  2708  0013BA                     	endif
  2709  0013BA                     	if	0	;tblptru may be non-zero
  2710  0013BA                     	endif
  2711  0013BA  0008               	tblrd		*
  2712  0013BC  50F5               	movf	tablat,w,c
  2713  0013BE  6E07               	movwf	tolower@c,c
  2714  0013C0  6A08               	clrf	tolower@c+1,c
  2715  0013C2  ECF6  F018         	call	_tolower	;wreg free
  2716  0013C6  5007               	movf	?_tolower,w,c
  2717  0013C8  0100               	movlb	0	; () banked
  2718  0013CA  6FC3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  2722  0013CC  51C3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2723  0013CE  B4D8               	btfsc	status,2,c
  2724  0013D0  D019               	goto	l4104
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  2728  0013D2  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2729  0013D6  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2730  0013DA  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  2731  0013DE  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  2732  0013E2  0E02               	movlw	2
  2733  0013E4  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  2734  0013E6  0E00               	movlw	0
  2735  0013E8  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2736  0013EA  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2737  0013EE  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2738  0013F2                     	if	0	;tblptru may be non-zero
  2739  0013F2                     	endif
  2740  0013F2                     	if	0	;tblptru may be non-zero
  2741  0013F2                     	endif
  2742  0013F2  0008               	tblrd		*
  2743  0013F4  50F5               	movf	tablat,w,c
  2744  0013F6  6E07               	movwf	tolower@c,c
  2745  0013F8  6A08               	clrf	tolower@c+1,c
  2746  0013FA  ECF6  F018         	call	_tolower	;wreg free
  2747  0013FE  5007               	movf	?_tolower,w,c
  2748  001400  0100               	movlb	0	; () banked
  2749  001402  6FC4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2750  001404                     l4104:
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  2754  001404  0E66               	movlw	102
  2755  001406  19C2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2756  001408  A4D8               	btfss	status,2,c
  2757  00140A  D03F               	goto	l4116
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  2761  00140C  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2762  001410  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2763  001414  CFDE FFF6          	movff	postinc2,tblptrl
  2764  001418  CFDD FFF7          	movff	postdec2,tblptrh
  2765  00141C                     	if	0	;tblptru may be non-zero
  2766  00141C                     	endif
  2767  00141C                     	if	0	;tblptru may be non-zero
  2768  00141C                     	endif
  2769  00141C  0008               	tblrd		*
  2770  00141E  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  2774  001422  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2775  001426  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2776  00142A  2ADE               	incf	postinc2,f,c
  2777  00142C  0E00               	movlw	0
  2778  00142E  22DD               	addwfc	postdec2,f,c
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  2782  001430  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2783  001434  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2784  001438  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  2785  00143C  0E04               	movlw	4
  2786  00143E  26DE               	addwf	postinc2,f,c
  2787  001440  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  2788  001444  0E00               	movlw	0
  2789  001446  22DD               	addwfc	postdec2,f,c
  2790  001448  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2791  00144C  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2792  001450  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  2793  001454  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  2794  001458  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  2795  00145C  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  2796  001460                     l4112:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  2800  001460  C0AE  F06A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2801  001464  C0AF  F06B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2802  001468  C0BE  F06C         	movff	vfpfcnvrt@f,efgtoa@f
  2803  00146C  C0BF  F06D         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2804  001470  C0C0  F06E         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2805  001474  C0C1  F06F         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2806  001478  C0C5  F070         	movff	vfpfcnvrt@c,efgtoa@c
  2807  00147C  EC20  F004         	call	_efgtoa	;wreg free
  2808  001480  C06A  F0AE         	movff	?_efgtoa,?_vfpfcnvrt
  2809  001484  C06B  F0AF         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2810  001488  0012               	return	
  2811  00148A                     l4116:
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2815  00148A  0EC2               	movlw	low vfpfcnvrt@ct
  2816  00148C  6E01               	movwf	strncmp@_l,c
  2817  00148E  0E00               	movlw	high vfpfcnvrt@ct
  2818  001490  6E02               	movwf	strncmp@_l+1,c
  2819  001492  0E3C               	movlw	low STR_12
  2820  001494  6E03               	movwf	strncmp@_r,c
  2821  001496  0E08               	movlw	high STR_12
  2822  001498  6E04               	movwf	strncmp@_r+1,c
  2823  00149A  0E00               	movlw	0
  2824  00149C  6E06               	movwf	strncmp@n+1,c
  2825  00149E  0E02               	movlw	2
  2826  0014A0  6E05               	movwf	strncmp@n,c
  2827  0014A2  EC8F  F016         	call	_strncmp	;wreg free
  2828  0014A6  5001               	movf	?_strncmp,w,c
  2829  0014A8  1002               	iorwf	?_strncmp+1,w,c
  2830  0014AA  A4D8               	btfss	status,2,c
  2831  0014AC  D056               	goto	l4132
  2832                           
  2833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2834  0014AE  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2835  0014B2  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2836  0014B6  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  2837  0014BA  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  2838  0014BE  0E01               	movlw	1
  2839  0014C0  0100               	movlb	0	; () banked
  2840  0014C2  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  2841  0014C4  0E00               	movlw	0
  2842  0014C6  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2843  0014C8  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2844  0014CC  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2845  0014D0                     	if	0	;tblptru may be non-zero
  2846  0014D0                     	endif
  2847  0014D0                     	if	0	;tblptru may be non-zero
  2848  0014D0                     	endif
  2849  0014D0  0008               	tblrd		*
  2850  0014D2  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  2851  0014D6  0EBF               	movlw	191
  2852  0014D8  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2853  0014DA  0EFF               	movlw	255
  2854  0014DC  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2855  0014DE  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2856  0014E2  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2857  0014E6  CFDE FFF6          	movff	postinc2,tblptrl
  2858  0014EA  CFDD FFF7          	movff	postdec2,tblptrh
  2859  0014EE                     	if	0	;tblptru may be non-zero
  2860  0014EE                     	endif
  2861  0014EE                     	if	0	;tblptru may be non-zero
  2862  0014EE                     	endif
  2863  0014EE  0008               	tblrd		*
  2864  0014F0  50F5               	movf	tablat,w,c
  2865  0014F2  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2866  0014F4  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2867  0014F6  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2868  0014F8  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2869  0014FA  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2870  0014FC  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2871  0014FE  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2872  001500  E106               	bnz	u4970
  2873  001502  0E1A               	movlw	26
  2874  001504  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2875  001506  B0D8               	btfsc	status,0,c
  2876  001508  D002               	goto	u4970
  2877  00150A  0E01               	movlw	1
  2878  00150C  D001               	goto	u4980
  2879  00150E                     u4970:
  2880  00150E  0E00               	movlw	0
  2881  001510                     u4980:
  2882  001510  6FBC               	movwf	_vfpfcnvrt$387& (0+255),b
  2883  001512  6BBD               	clrf	(_vfpfcnvrt$387+1)& (0+255),b
  2884                           
  2885                           ; BSR set to: 0
  2886  001514  51BC               	movf	_vfpfcnvrt$387& (0+255),w,b
  2887  001516  11BD               	iorwf	(_vfpfcnvrt$387+1)& (0+255),w,b
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2891                           
  2892                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } else {
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  2896  001518  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2897  00151C  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2898  001520  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  2899  001524  0E04               	movlw	4
  2900  001526  26DE               	addwf	postinc2,f,c
  2901  001528  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  2902  00152C  0E00               	movlw	0
  2903  00152E  22DD               	addwfc	postdec2,f,c
  2904  001530  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2905  001534  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2906  001538  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  2907  00153C  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  2908  001540  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  2909  001544  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  2913                           
  2914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  2915  001548  0E02               	movlw	2
  2916  00154A  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2917  00154E  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2918  001552  26DE               	addwf	postinc2,f,c
  2919  001554  0E00               	movlw	0
  2920  001556  22DD               	addwfc	postdec2,f,c
  2921  001558  D783               	goto	l4112
  2922  00155A                     l4132:
  2923                           
  2924                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2925  00155A  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2926  00155E  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2927  001562  CFDE FFF6          	movff	postinc2,tblptrl
  2928  001566  CFDD FFF7          	movff	postdec2,tblptrh
  2929  00156A                     	if	0	;tblptru may be non-zero
  2930  00156A                     	endif
  2931  00156A                     	if	0	;tblptru may be non-zero
  2932  00156A                     	endif
  2933  00156A  0008               	tblrd		*
  2934  00156C  50F5               	movf	tablat,w,c
  2935  00156E  0A25               	xorlw	37
  2936  001570  A4D8               	btfss	status,2,c
  2937  001572  D017               	goto	l4142
  2938                           
  2939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2940  001574  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2941  001578  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2942  00157C  2ADE               	incf	postinc2,f,c
  2943  00157E  0E00               	movlw	0
  2944  001580  22DD               	addwfc	postdec2,f,c
  2945                           
  2946                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2947  001582  0E00               	movlw	0
  2948  001584  6E02               	movwf	fputc@c+1,c
  2949  001586  0E25               	movlw	37
  2950  001588  6E01               	movwf	fputc@c,c
  2951  00158A  C0AE  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2952  00158E  C0AF  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2953  001592  ECE0  F016         	call	_fputc	;wreg free
  2954  001596                     l4138:
  2955                           
  2956                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2957  001596  0E00               	movlw	0
  2958  001598  0100               	movlb	0	; () banked
  2959  00159A  6FAF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2960  00159C  0E01               	movlw	1
  2961  00159E  6FAE               	movwf	?_vfpfcnvrt& (0+255),b
  2962  0015A0  0012               	return	
  2963  0015A2                     l4142:
  2964                           
  2965                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2966  0015A2  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2967  0015A6  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2968  0015AA  2ADE               	incf	postinc2,f,c
  2969  0015AC  0E00               	movlw	0
  2970  0015AE  22DD               	addwfc	postdec2,f,c
  2971                           
  2972                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2973  0015B0  0E00               	movlw	0
  2974  0015B2  0100               	movlb	0	; () banked
  2975  0015B4  6FAF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2976  0015B6  0E00               	movlw	0
  2977  0015B8  6FAE               	movwf	?_vfpfcnvrt& (0+255),b
  2978  0015BA  0012               	return	
  2979  0015BC                     l4148:
  2980                           
  2981                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  2982  0015BC  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2983  0015C0  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2984  0015C4  CFDE FFF6          	movff	postinc2,tblptrl
  2985  0015C8  CFDD FFF7          	movff	postdec2,tblptrh
  2986  0015CC                     	if	0	;tblptru may be non-zero
  2987  0015CC                     	endif
  2988  0015CC                     	if	0	;tblptru may be non-zero
  2989  0015CC                     	endif
  2990  0015CC  0008               	tblrd		*
  2991  0015CE  50F5               	movf	tablat,w,c
  2992  0015D0  6E01               	movwf	fputc@c,c
  2993  0015D2  6A02               	clrf	fputc@c+1,c
  2994  0015D4  C0AE  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2995  0015D8  C0AF  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2996  0015DC  ECE0  F016         	call	_fputc	;wreg free
  2997                           
  2998                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2999  0015E0  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3000  0015E4  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3001  0015E8  2ADE               	incf	postinc2,f,c
  3002  0015EA  0E00               	movlw	0
  3003  0015EC  22DD               	addwfc	postdec2,f,c
  3004  0015EE  D7D3               	goto	l4138
  3005  0015F0                     __end_of_vfpfcnvrt:
  3006                           	opt callstack 0
  3007                           
  3008 ;; *************** function _strncmp *****************
  3009 ;; Defined at:
  3010 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3013 ;;		 -> vfpfcnvrt@ct(3), 
  3014 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3015 ;;		 -> STR_14(3), 
  3016 ;;  n               2    4[COMRAM] unsigned int 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3019 ;;		 -> STR_14(3), 
  3020 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3021 ;;		 -> vfpfcnvrt@ct(3), 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  2    0[COMRAM] int 
  3024 ;; Registers used:
  3025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3031 ;;      Params:         6       0       0       0       0       0       0       0       0
  3032 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3033 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3034 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3035 ;;Total ram usage:       11 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    1
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_vfpfcnvrt
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text6
  3046  002D1E                     __ptext6:
  3047                           	opt callstack 0
  3048  002D1E                     _strncmp:
  3049                           	opt callstack 26
  3050                           
  3051                           ;incstack = 0
  3052  002D1E  C001  F008         	movff	strncmp@_l,strncmp@l
  3053  002D22  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3054  002D26  C003  F00A         	movff	strncmp@_r,strncmp@r
  3055  002D2A  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3056  002D2E  0605               	decf	strncmp@n,f,c
  3057  002D30  A0D8               	btfss	status,0,c
  3058  002D32  0606               	decf	strncmp@n+1,f,c
  3059  002D34  2805               	incf	strncmp@n,w,c
  3060  002D36  E10F               	bnz	l4002
  3061  002D38  2806               	incf	strncmp@n+1,w,c
  3062  002D3A  A4D8               	btfss	status,2,c
  3063  002D3C  D00C               	goto	l4002
  3064  002D3E  0E00               	movlw	0
  3065  002D40  6E02               	movwf	?_strncmp+1,c
  3066  002D42  0E00               	movlw	0
  3067  002D44  6E01               	movwf	?_strncmp,c
  3068  002D46  0012               	return	
  3069  002D48                     l4000:
  3070  002D48  4A08               	infsnz	strncmp@l,f,c
  3071  002D4A  2A09               	incf	strncmp@l+1,f,c
  3072  002D4C  4A0A               	infsnz	strncmp@r,f,c
  3073  002D4E  2A0B               	incf	strncmp@r+1,f,c
  3074  002D50  0605               	decf	strncmp@n,f,c
  3075  002D52  A0D8               	btfss	status,0,c
  3076  002D54  0606               	decf	strncmp@n+1,f,c
  3077  002D56                     l4002:
  3078  002D56  C008  FFD9         	movff	strncmp@l,fsr2l
  3079  002D5A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3080  002D5E  50DF               	movf	indf2,w,c
  3081  002D60  B4D8               	btfsc	status,2,c
  3082  002D62  D01C               	goto	u4840
  3083  002D64  C00A  FFF6         	movff	strncmp@r,tblptrl
  3084  002D68  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3085  002D6C                     	if	0	;tblptru may be non-zero
  3086  002D6C                     	endif
  3087  002D6C                     	if	0	;tblptru may be non-zero
  3088  002D6C                     	endif
  3089  002D6C  0008               	tblrd		*
  3090  002D6E  50F5               	movf	tablat,w,c
  3091  002D70  0900               	iorlw	0
  3092  002D72  B4D8               	btfsc	status,2,c
  3093  002D74  D013               	goto	u4840
  3094  002D76  5005               	movf	strncmp@n,w,c
  3095  002D78  1006               	iorwf	strncmp@n+1,w,c
  3096  002D7A  B4D8               	btfsc	status,2,c
  3097  002D7C  D00F               	goto	u4840
  3098  002D7E  C008  FFD9         	movff	strncmp@l,fsr2l
  3099  002D82  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3100  002D86  50DF               	movf	indf2,w,c
  3101  002D88  6E07               	movwf	??_strncmp& (0+255),c
  3102  002D8A  C00A  FFF6         	movff	strncmp@r,tblptrl
  3103  002D8E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3104  002D92                     	if	0	;tblptru may be non-zero
  3105  002D92                     	endif
  3106  002D92                     	if	0	;tblptru may be non-zero
  3107  002D92                     	endif
  3108  002D92  0008               	tblrd		*
  3109  002D94  50F5               	movf	tablat,w,c
  3110  002D96  1807               	xorwf	??_strncmp,w,c
  3111  002D98  B4D8               	btfsc	status,2,c
  3112  002D9A  D7D6               	goto	l4000
  3113  002D9C                     u4840:
  3114  002D9C  C008  FFD9         	movff	strncmp@l,fsr2l
  3115  002DA0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3116  002DA4  50DF               	movf	indf2,w,c
  3117  002DA6  6E07               	movwf	??_strncmp& (0+255),c
  3118  002DA8  C00A  FFF6         	movff	strncmp@r,tblptrl
  3119  002DAC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3120  002DB0                     	if	0	;tblptru may be non-zero
  3121  002DB0                     	endif
  3122  002DB0                     	if	0	;tblptru may be non-zero
  3123  002DB0                     	endif
  3124  002DB0  0008               	tblrd		*
  3125  002DB2  50F5               	movf	tablat,w,c
  3126  002DB4  5C07               	subwf	??_strncmp,w,c
  3127  002DB6  6E01               	movwf	?_strncmp,c
  3128  002DB8  6A02               	clrf	?_strncmp+1,c
  3129  002DBA  A0D8               	btfss	status,0,c
  3130  002DBC  0602               	decf	?_strncmp+1,f,c
  3131  002DBE  0012               	return		;funcret
  3132  002DC0                     __end_of_strncmp:
  3133                           	opt callstack 0
  3134                           
  3135 ;; *************** function _efgtoa *****************
  3136 ;; Defined at:
  3137 ;;		line 319 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  3140 ;;		 -> sprintf@f(6), 
  3141 ;;  f               4   12[BANK0 ] PTR struct _IO_FILE
  3142 ;;  c               1   16[BANK0 ] unsigned char 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  u               4   74[BANK0 ] unsigned char 
  3145 ;;  g               4   66[BANK0 ] unsigned char 
  3146 ;;  l               4   60[BANK0 ] unsigned char 
  3147 ;;  h               4   56[BANK0 ] unsigned char 
  3148 ;;  ou              4   22[BANK0 ] unsigned char 
  3149 ;;  n               2   72[BANK0 ] int 
  3150 ;;  e               2   70[BANK0 ] int 
  3151 ;;  i               2   64[BANK0 ] int 
  3152 ;;  w               2   53[BANK0 ] int 
  3153 ;;  p               2   50[BANK0 ] int 
  3154 ;;  sign            2   48[BANK0 ] int 
  3155 ;;  d               2   46[BANK0 ] int 
  3156 ;;  ne              2   44[BANK0 ] int 
  3157 ;;  m               2   42[BANK0 ] int 
  3158 ;;  pp              2   40[BANK0 ] int 
  3159 ;;  t               2   38[BANK0 ] int 
  3160 ;;  mode            1   55[BANK0 ] unsigned char 
  3161 ;;  nmode           1   52[BANK0 ] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  2   10[BANK0 ] int 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3171 ;;      Params:         0       7       0       0       0       0       0       0       0
  3172 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3173 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3174 ;;      Totals:         0      68       0       0       0       0       0       0       0
  3175 ;;Total ram usage:       68 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    5
  3178 ;; This function calls:
  3179 ;;		___awdiv
  3180 ;;		___awmod
  3181 ;;		___fladd
  3182 ;;		___fldiv
  3183 ;;		___fleq
  3184 ;;		___flge
  3185 ;;		___flmul
  3186 ;;		___flneg
  3187 ;;		___flsub
  3188 ;;		___fltol
  3189 ;;		___fpclassifyf
  3190 ;;		_floorf
  3191 ;;		_isupper
  3192 ;;		_pad
  3193 ;;		_strcpy
  3194 ;;		_tolower
  3195 ;; This function is called by:
  3196 ;;		_vfpfcnvrt
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text7
  3201  000840                     __ptext7:
  3202                           	opt callstack 0
  3203  000840                     _efgtoa:
  3204                           	opt callstack 22
  3205                           
  3206                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  3207                           
  3208                           ;incstack = 0
  3209  000840  0E00               	movlw	0
  3210  000842  0100               	movlb	0	; () banked
  3211  000844  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  3212  000846  0E00               	movlw	0
  3213  000848  6F90               	movwf	efgtoa@sign& (0+255),b
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  3217  00084A  C06C  F0A2         	movff	efgtoa@f,efgtoa@g
  3218  00084E  C06D  F0A3         	movff	efgtoa@f+1,efgtoa@g+1
  3219  000852  C06E  F0A4         	movff	efgtoa@f+2,efgtoa@g+2
  3220  000856  C06F  F0A5         	movff	efgtoa@f+3,efgtoa@g+3
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  3224  00085A  AFA5               	btfss	(efgtoa@g+3)& (0+255),7,b
  3225  00085C  D016               	goto	l3664
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  3229  00085E  0E00               	movlw	0
  3230  000860  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  3231  000862  0E01               	movlw	1
  3232  000864  6F90               	movwf	efgtoa@sign& (0+255),b
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  3236  000866  C0A2  F001         	movff	efgtoa@g,___flneg@f1
  3237  00086A  C0A3  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3238  00086E  C0A4  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3239  000872  C0A5  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3240  000876  EC43  F01A         	call	___flneg	;wreg free
  3241  00087A  C001  F0A2         	movff	?___flneg,efgtoa@g
  3242  00087E  C002  F0A3         	movff	?___flneg+1,efgtoa@g+1
  3243  000882  C003  F0A4         	movff	?___flneg+2,efgtoa@g+2
  3244  000886  C004  F0A5         	movff	?___flneg+3,efgtoa@g+3
  3245  00088A                     l3664:
  3246                           
  3247                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  3248  00088A  0E00               	movlw	0
  3249  00088C  0100               	movlb	0	; () banked
  3250  00088E  6FA9               	movwf	(efgtoa@n+1)& (0+255),b
  3251  000890  0E00               	movlw	0
  3252  000892  6FA8               	movwf	efgtoa@n& (0+255),b
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  3256  000894  C0ED  F095         	movff	_width,efgtoa@w
  3257  000898  C0EE  F096         	movff	_width+1,efgtoa@w+1
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  3261  00089C  5190               	movf	efgtoa@sign& (0+255),w,b
  3262  00089E  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3263  0008A0  A4D8               	btfss	status,2,c
  3264  0008A2  D002               	goto	u4230
  3265                           
  3266                           ; BSR set to: 0
  3267  0008A4  A5F1               	btfss	_flags& (0+255),2,b
  3268  0008A6  D013               	goto	l3684
  3269  0008A8                     u4230:
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  3273  0008A8  5190               	movf	efgtoa@sign& (0+255),w,b
  3274  0008AA  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3275  0008AC  A4D8               	btfss	status,2,c
  3276  0008AE  D004               	goto	l3676
  3277                           
  3278                           ; BSR set to: 0
  3279  0008B0  0E00               	movlw	0
  3280  0008B2  6F7B               	movwf	(_efgtoa$357+1)& (0+255),b
  3281  0008B4  0E2B               	movlw	43
  3282  0008B6  D003               	goto	L3
  3283  0008B8                     l3676:
  3284                           
  3285                           ; BSR set to: 0
  3286  0008B8  0E00               	movlw	0
  3287  0008BA  6F7B               	movwf	(_efgtoa$357+1)& (0+255),b
  3288  0008BC  0E2D               	movlw	45
  3289  0008BE                     L3:
  3290  0008BE  6F7A               	movwf	_efgtoa$357& (0+255),b
  3291                           
  3292                           ; BSR set to: 0
  3293  0008C0  C07A  F116         	movff	_efgtoa$357,_dbuf
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  3297  0008C4  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  3298  0008C6  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  3302  0008C8  0795               	decf	efgtoa@w& (0+255),f,b
  3303  0008CA  A0D8               	btfss	status,0,c
  3304  0008CC  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  3305  0008CE                     l3684:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3309  0008CE  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  3310  0008D2  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3311  0008D6  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3312  0008DA  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3313  0008DE  ECCB  F015         	call	___fpclassifyf	;wreg free
  3314  0008E2  0401               	decf	?___fpclassifyf,w,c
  3315  0008E4  1002               	iorwf	?___fpclassifyf+1,w,c
  3316  0008E6  A4D8               	btfss	status,2,c
  3317  0008E8  D04C               	goto	l3702
  3318  0008EA  0EBF               	movlw	191
  3319  0008EC  0100               	movlb	0	; () banked
  3320  0008EE  6F71               	movwf	??_efgtoa& (0+255),b
  3321  0008F0  0EFF               	movlw	255
  3322  0008F2  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  3323  0008F4  5170               	movf	efgtoa@c& (0+255),w,b
  3324  0008F6  6F73               	movwf	(??_efgtoa+2)& (0+255),b
  3325  0008F8  6B74               	clrf	(??_efgtoa+3)& (0+255),b
  3326  0008FA  5171               	movf	??_efgtoa& (0+255),w,b
  3327  0008FC  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  3328  0008FE  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  3329  000900  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3330  000902  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  3331  000904  E106               	bnz	u4260
  3332  000906  0E1A               	movlw	26
  3333  000908  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  3334  00090A  B0D8               	btfsc	status,0,c
  3335  00090C  D002               	goto	u4260
  3336  00090E  0E01               	movlw	1
  3337  000910  D001               	goto	u4270
  3338  000912                     u4260:
  3339  000912  0E00               	movlw	0
  3340  000914                     u4270:
  3341  000914  6F7C               	movwf	_efgtoa$358& (0+255),b
  3342  000916  6B7D               	clrf	(_efgtoa$358+1)& (0+255),b
  3343                           
  3344                           ; BSR set to: 0
  3345  000918  517C               	movf	_efgtoa$358& (0+255),w,b
  3346  00091A  117D               	iorwf	(_efgtoa$358+1)& (0+255),w,b
  3347  00091C  B4D8               	btfsc	status,2,c
  3348  00091E  D00D               	goto	l3694
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  3352  000920  0E16               	movlw	low _dbuf
  3353  000922  25A8               	addwf	efgtoa@n& (0+255),w,b
  3354  000924  6E01               	movwf	strcpy@dest,c
  3355  000926  0E01               	movlw	high _dbuf
  3356  000928  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3357  00092A  6E02               	movwf	strcpy@dest+1,c
  3358  00092C  0E2C               	movlw	low STR_4
  3359  00092E  6E03               	movwf	strcpy@src,c
  3360  000930  0E08               	movlw	high STR_4
  3361  000932  6E04               	movwf	strcpy@src+1,c
  3362  000934  ECCD  F018         	call	_strcpy	;wreg free
  3363                           
  3364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else {
  3365  000938  D00C               	goto	l3696
  3366  00093A                     l3694:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  3370  00093A  0E16               	movlw	low _dbuf
  3371  00093C  25A8               	addwf	efgtoa@n& (0+255),w,b
  3372  00093E  6E01               	movwf	strcpy@dest,c
  3373  000940  0E01               	movlw	high _dbuf
  3374  000942  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3375  000944  6E02               	movwf	strcpy@dest+1,c
  3376  000946  0E34               	movlw	low STR_5
  3377  000948  6E03               	movwf	strcpy@src,c
  3378  00094A  0E08               	movlw	high STR_5
  3379  00094C  6E04               	movwf	strcpy@src+1,c
  3380  00094E  ECCD  F018         	call	_strcpy	;wreg free
  3381  000952                     l3696:
  3382                           
  3383                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  3384  000952  0100               	movlb	0	; () banked
  3385  000954  0EFD               	movlw	253
  3386  000956  2795               	addwf	efgtoa@w& (0+255),f,b
  3387  000958  0EFF               	movlw	255
  3388  00095A  2396               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3389  00095C                     l3698:
  3390                           
  3391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  3392  00095C  C06A  F011         	movff	efgtoa@fp,pad@fp
  3393  000960  C06B  F012         	movff	efgtoa@fp+1,pad@fp+1
  3394  000964  0E16               	movlw	low _dbuf
  3395  000966  6E13               	movwf	pad@buf,c
  3396  000968  0E01               	movlw	high _dbuf
  3397  00096A  6E14               	movwf	pad@buf+1,c
  3398  00096C  C095  F015         	movff	efgtoa@w,pad@p
  3399  000970  C096  F016         	movff	efgtoa@w+1,pad@p+1
  3400  000974  EC30  F017         	call	_pad	;wreg free
  3401  000978  C011  F06A         	movff	?_pad,?_efgtoa
  3402  00097C  C012  F06B         	movff	?_pad+1,?_efgtoa+1
  3403  000980  0012               	return	
  3404  000982                     l3702:
  3405                           
  3406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3407  000982  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  3408  000986  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3409  00098A  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3410  00098E  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3411  000992  ECCB  F015         	call	___fpclassifyf	;wreg free
  3412  000996  5001               	movf	?___fpclassifyf,w,c
  3413  000998  1002               	iorwf	?___fpclassifyf+1,w,c
  3414  00099A  A4D8               	btfss	status,2,c
  3415  00099C  D035               	goto	l3720
  3416  00099E  0EBF               	movlw	191
  3417  0009A0  0100               	movlb	0	; () banked
  3418  0009A2  6F71               	movwf	??_efgtoa& (0+255),b
  3419  0009A4  0EFF               	movlw	255
  3420  0009A6  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  3421  0009A8  5170               	movf	efgtoa@c& (0+255),w,b
  3422  0009AA  6F73               	movwf	(??_efgtoa+2)& (0+255),b
  3423  0009AC  6B74               	clrf	(??_efgtoa+3)& (0+255),b
  3424  0009AE  5171               	movf	??_efgtoa& (0+255),w,b
  3425  0009B0  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  3426  0009B2  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  3427  0009B4  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3428  0009B6  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  3429  0009B8  E106               	bnz	u4300
  3430  0009BA  0E1A               	movlw	26
  3431  0009BC  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  3432  0009BE  B0D8               	btfsc	status,0,c
  3433  0009C0  D002               	goto	u4300
  3434  0009C2  0E01               	movlw	1
  3435  0009C4  D001               	goto	u4310
  3436  0009C6                     u4300:
  3437  0009C6  0E00               	movlw	0
  3438  0009C8                     u4310:
  3439  0009C8  6F7E               	movwf	_efgtoa$363& (0+255),b
  3440  0009CA  6B7F               	clrf	(_efgtoa$363+1)& (0+255),b
  3441                           
  3442                           ; BSR set to: 0
  3443  0009CC  517E               	movf	_efgtoa$363& (0+255),w,b
  3444  0009CE  117F               	iorwf	(_efgtoa$363+1)& (0+255),w,b
  3445  0009D0  B4D8               	btfsc	status,2,c
  3446  0009D2  D00D               	goto	l3712
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  3450  0009D4  0E16               	movlw	low _dbuf
  3451  0009D6  25A8               	addwf	efgtoa@n& (0+255),w,b
  3452  0009D8  6E01               	movwf	strcpy@dest,c
  3453  0009DA  0E01               	movlw	high _dbuf
  3454  0009DC  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3455  0009DE  6E02               	movwf	strcpy@dest+1,c
  3456  0009E0  0E30               	movlw	low STR_8
  3457  0009E2  6E03               	movwf	strcpy@src,c
  3458  0009E4  0E08               	movlw	high STR_8
  3459  0009E6  6E04               	movwf	strcpy@src+1,c
  3460  0009E8  ECCD  F018         	call	_strcpy	;wreg free
  3461                           
  3462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else {
  3463  0009EC  D7B2               	goto	l3696
  3464  0009EE                     l3712:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  3468  0009EE  0E16               	movlw	low _dbuf
  3469  0009F0  25A8               	addwf	efgtoa@n& (0+255),w,b
  3470  0009F2  6E01               	movwf	strcpy@dest,c
  3471  0009F4  0E01               	movlw	high _dbuf
  3472  0009F6  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3473  0009F8  6E02               	movwf	strcpy@dest+1,c
  3474  0009FA  0E38               	movlw	low STR_9
  3475  0009FC  6E03               	movwf	strcpy@src,c
  3476  0009FE  0E08               	movlw	high STR_9
  3477  000A00  6E04               	movwf	strcpy@src+1,c
  3478  000A02  ECCD  F018         	call	_strcpy	;wreg free
  3479  000A06  D7A5               	goto	l3696
  3480  000A08                     l3720:
  3481                           
  3482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  3483  000A08  0E00               	movlw	0
  3484  000A0A  0100               	movlb	0	; () banked
  3485  000A0C  6FAA               	movwf	efgtoa@u& (0+255),b
  3486  000A0E  0E00               	movlw	0
  3487  000A10  6FAB               	movwf	(efgtoa@u+1)& (0+255),b
  3488  000A12  0E80               	movlw	128
  3489  000A14  6FAC               	movwf	(efgtoa@u+2)& (0+255),b
  3490  000A16  0E3F               	movlw	63
  3491  000A18  6FAD               	movwf	(efgtoa@u+3)& (0+255),b
  3492                           
  3493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  3494  000A1A  0E00               	movlw	0
  3495  000A1C  6FA7               	movwf	(efgtoa@e+1)& (0+255),b
  3496  000A1E  0E00               	movlw	0
  3497  000A20  6FA6               	movwf	efgtoa@e& (0+255),b
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  3501  000A22  C0A2  F001         	movff	efgtoa@g,___fleq@ff1
  3502  000A26  C0A3  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3503  000A2A  C0A4  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3504  000A2E  C0A5  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3505  000A32  0E00               	movlw	0
  3506  000A34  6E05               	movwf	___fleq@ff2,c
  3507  000A36  0E00               	movlw	0
  3508  000A38  6E06               	movwf	___fleq@ff2+1,c
  3509  000A3A  0E00               	movlw	0
  3510  000A3C  6E07               	movwf	___fleq@ff2+2,c
  3511  000A3E  0E00               	movlw	0
  3512  000A40  6E08               	movwf	___fleq@ff2+3,c
  3513  000A42  EC7D  F017         	call	___fleq	;wreg free
  3514  000A46  A0D8               	btfss	status,0,c
  3515  000A48  D01E               	goto	l3730
  3516  000A4A  D076               	goto	u4350
  3517  000A4C                     l3726:
  3518                           
  3519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  3520  000A4C  C0AA  F00F         	movff	efgtoa@u,___flmul@b
  3521  000A50  C0AB  F010         	movff	efgtoa@u+1,___flmul@b+1
  3522  000A54  C0AC  F011         	movff	efgtoa@u+2,___flmul@b+2
  3523  000A58  C0AD  F012         	movff	efgtoa@u+3,___flmul@b+3
  3524  000A5C  0E00               	movlw	0
  3525  000A5E  6E13               	movwf	___flmul@a,c
  3526  000A60  0E00               	movlw	0
  3527  000A62  6E14               	movwf	___flmul@a+1,c
  3528  000A64  0E20               	movlw	32
  3529  000A66  6E15               	movwf	___flmul@a+2,c
  3530  000A68  0E41               	movlw	65
  3531  000A6A  6E16               	movwf	___flmul@a+3,c
  3532  000A6C  ECD3  F00E         	call	___flmul	;wreg free
  3533  000A70  C00F  F0AA         	movff	?___flmul,efgtoa@u
  3534  000A74  C010  F0AB         	movff	?___flmul+1,efgtoa@u+1
  3535  000A78  C011  F0AC         	movff	?___flmul+2,efgtoa@u+2
  3536  000A7C  C012  F0AD         	movff	?___flmul+3,efgtoa@u+3
  3537                           
  3538                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e;
  3539  000A80  0100               	movlb	0	; () banked
  3540  000A82  4BA6               	infsnz	efgtoa@e& (0+255),f,b
  3541  000A84  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  3542  000A86                     l3730:
  3543                           
  3544                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  3545  000A86  C0A2  F028         	movff	efgtoa@g,___flge@ff1
  3546  000A8A  C0A3  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3547  000A8E  C0A4  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3548  000A92  C0A5  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3549  000A96  0E00               	movlw	0
  3550  000A98  6E13               	movwf	___flmul@a,c
  3551  000A9A  0E00               	movlw	0
  3552  000A9C  6E14               	movwf	___flmul@a+1,c
  3553  000A9E  0E20               	movlw	32
  3554  000AA0  6E15               	movwf	___flmul@a+2,c
  3555  000AA2  0E41               	movlw	65
  3556  000AA4  6E16               	movwf	___flmul@a+3,c
  3557  000AA6  C0AA  F00F         	movff	efgtoa@u,___flmul@b
  3558  000AAA  C0AB  F010         	movff	efgtoa@u+1,___flmul@b+1
  3559  000AAE  C0AC  F011         	movff	efgtoa@u+2,___flmul@b+2
  3560  000AB2  C0AD  F012         	movff	efgtoa@u+3,___flmul@b+3
  3561  000AB6  ECD3  F00E         	call	___flmul	;wreg free
  3562  000ABA  C00F  F02C         	movff	?___flmul,___flge@ff2
  3563  000ABE  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3564  000AC2  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3565  000AC6  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3566  000ACA  EC63  F015         	call	___flge	;wreg free
  3567  000ACE  A0D8               	btfss	status,0,c
  3568  000AD0  D01F               	goto	l3736
  3569  000AD2  D7BC               	goto	l3726
  3570  000AD4                     l3732:
  3571                           
  3572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  3573  000AD4  C0AA  F034         	movff	efgtoa@u,___fldiv@b
  3574  000AD8  C0AB  F035         	movff	efgtoa@u+1,___fldiv@b+1
  3575  000ADC  C0AC  F036         	movff	efgtoa@u+2,___fldiv@b+2
  3576  000AE0  C0AD  F037         	movff	efgtoa@u+3,___fldiv@b+3
  3577  000AE4  0E00               	movlw	0
  3578  000AE6  6E38               	movwf	___fldiv@a,c
  3579  000AE8  0E00               	movlw	0
  3580  000AEA  6E39               	movwf	___fldiv@a+1,c
  3581  000AEC  0E20               	movlw	32
  3582  000AEE  6E3A               	movwf	___fldiv@a+2,c
  3583  000AF0  0E41               	movlw	65
  3584  000AF2  6E3B               	movwf	___fldiv@a+3,c
  3585  000AF4  EC02  F012         	call	___fldiv	;wreg free
  3586  000AF8  C034  F0AA         	movff	?___fldiv,efgtoa@u
  3587  000AFC  C035  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  3588  000B00  C036  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  3589  000B04  C037  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  3590                           
  3591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e;
  3592  000B08  0100               	movlb	0	; () banked
  3593  000B0A  07A6               	decf	efgtoa@e& (0+255),f,b
  3594  000B0C  A0D8               	btfss	status,0,c
  3595  000B0E  07A7               	decf	(efgtoa@e+1)& (0+255),f,b
  3596  000B10                     l3736:
  3597                           
  3598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  3599  000B10  C0A2  F028         	movff	efgtoa@g,___flge@ff1
  3600  000B14  C0A3  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3601  000B18  C0A4  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3602  000B1C  C0A5  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3603  000B20  C0AA  F02C         	movff	efgtoa@u,___flge@ff2
  3604  000B24  C0AB  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3605  000B28  C0AC  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3606  000B2C  C0AD  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3607  000B30  EC63  F015         	call	___flge	;wreg free
  3608  000B34  A0D8               	btfss	status,0,c
  3609  000B36  D7CE               	goto	l3732
  3610  000B38                     u4350:
  3611                           
  3612                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  3613  000B38  C070  F007         	movff	efgtoa@c,tolower@c
  3614  000B3C  6A08               	clrf	tolower@c+1,c
  3615  000B3E  ECF6  F018         	call	_tolower	;wreg free
  3616  000B42  5007               	movf	?_tolower,w,c
  3617  000B44  0100               	movlb	0	; () banked
  3618  000B46  6F97               	movwf	efgtoa@mode& (0+255),b
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  3622  000B48  C097  F094         	movff	efgtoa@mode,efgtoa@nmode
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  3626  000B4C  0E67               	movlw	103
  3627  000B4E  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3628  000B50  A4D8               	btfss	status,2,c
  3629  000B52  D019               	goto	l3752
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  3633  000B54  51EF               	movf	_prec& (0+255),w,b
  3634  000B56  11F0               	iorwf	(_prec+1)& (0+255),w,b
  3635  000B58  A4D8               	btfss	status,2,c
  3636  000B5A  D004               	goto	l3748
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  3640  000B5C  0E00               	movlw	0
  3641  000B5E  6FF0               	movwf	(_prec+1)& (0+255),b
  3642  000B60  0E01               	movlw	1
  3643  000B62  6FEF               	movwf	_prec& (0+255),b
  3644  000B64                     l3748:
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  3648  000B64  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  3649  000B66  D005               	goto	u4380
  3650  000B68  51F0               	movf	(_prec+1)& (0+255),w,b
  3651  000B6A  E108               	bnz	l234
  3652  000B6C  05EF               	decf	_prec& (0+255),w,b
  3653  000B6E  B0D8               	btfsc	status,0,c
  3654  000B70  D005               	goto	l234
  3655  000B72                     u4380:
  3656                           
  3657                           ; BSR set to: 0
  3658  000B72  0E00               	movlw	0
  3659  000B74  6F93               	movwf	(efgtoa@p+1)& (0+255),b
  3660  000B76  0E06               	movlw	6
  3661  000B78  6F92               	movwf	efgtoa@p& (0+255),b
  3662  000B7A  D008               	goto	l3758
  3663  000B7C                     l234:
  3664                           
  3665                           ; BSR set to: 0
  3666  000B7C  C0EF  F092         	movff	_prec,efgtoa@p
  3667  000B80  C0F0  F093         	movff	_prec+1,efgtoa@p+1
  3668  000B84  D003               	goto	l3758
  3669  000B86                     l3752:
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  3673  000B86  AFF0               	btfss	(_prec+1)& (0+255),7,b
  3674  000B88  D7F9               	goto	l234
  3675  000B8A  D7F3               	goto	u4380
  3676  000B8C                     l3758:
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  3680  000B8C  0E67               	movlw	103
  3681  000B8E  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3682  000B90  A4D8               	btfss	status,2,c
  3683  000B92  D022               	goto	l3768
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  3687  000B94  AFA7               	btfss	(efgtoa@e+1)& (0+255),7,b
  3688  000B96  D006               	goto	u4410
  3689  000B98  0EFC               	movlw	252
  3690  000B9A  5DA6               	subwf	efgtoa@e& (0+255),w,b
  3691  000B9C  0EFF               	movlw	255
  3692  000B9E  59A7               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3693  000BA0  A0D8               	btfss	status,0,c
  3694  000BA2  D018               	goto	l3766
  3695  000BA4                     u4410:
  3696                           
  3697                           ; BSR set to: 0
  3698  000BA4  0EFF               	movlw	255
  3699  000BA6  6F71               	movwf	??_efgtoa& (0+255),b
  3700  000BA8  0EFF               	movlw	255
  3701  000BAA  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  3702  000BAC  C092  F073         	movff	efgtoa@p,??_efgtoa+2
  3703  000BB0  C093  F074         	movff	efgtoa@p+1,??_efgtoa+3
  3704  000BB4  5171               	movf	??_efgtoa& (0+255),w,b
  3705  000BB6  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  3706  000BB8  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  3707  000BBA  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3708  000BBC  51A6               	movf	efgtoa@e& (0+255),w,b
  3709  000BBE  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  3710  000BC0  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  3711  000BC2  0A80               	xorlw	128
  3712  000BC4  6F75               	movwf	(??_efgtoa+4)& (0+255),b
  3713  000BC6  51A7               	movf	(efgtoa@e+1)& (0+255),w,b
  3714  000BC8  0A80               	xorlw	128
  3715  000BCA  5975               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3716  000BCC  A0D8               	btfss	status,0,c
  3717  000BCE  D002               	goto	l3766
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  3721  000BD0  0E66               	movlw	102
  3722  000BD2  D001               	goto	L4
  3723  000BD4                     l3766:
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  3727  000BD4  0E65               	movlw	101
  3728  000BD6                     L4:
  3729  000BD6  6F94               	movwf	efgtoa@nmode& (0+255),b
  3730  000BD8                     l3768:
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  3734  000BD8  C092  F08A         	movff	efgtoa@p,efgtoa@m
  3735  000BDC  C093  F08B         	movff	efgtoa@p+1,efgtoa@m+1
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  3739  000BE0  0E67               	movlw	103
  3740  000BE2  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3741  000BE4  A4D8               	btfss	status,2,c
  3742  000BE6  D005               	goto	u4450
  3743                           
  3744                           ; BSR set to: 0
  3745  000BE8  0E66               	movlw	102
  3746  000BEA  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  3747  000BEC  B4D8               	btfsc	status,2,c
  3748                           
  3749                           ; BSR set to: 0
  3750  000BEE  AFA7               	btfss	(efgtoa@e+1)& (0+255),7,b
  3751  000BF0  D002               	goto	l3778
  3752  000BF2                     u4450:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  3756  000BF2  4B8A               	infsnz	efgtoa@m& (0+255),f,b
  3757  000BF4  2B8B               	incf	(efgtoa@m+1)& (0+255),f,b
  3758  000BF6                     l3778:
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  3762  000BF6  0E66               	movlw	102
  3763  000BF8  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  3764  000BFA  A4D8               	btfss	status,2,c
  3765  000BFC  D016               	goto	l3788
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  3769  000BFE  AFA7               	btfss	(efgtoa@e+1)& (0+255),7,b
  3770  000C00  D00C               	goto	l3784
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  3774  000C02  0E00               	movlw	0
  3775  000C04  6FAA               	movwf	efgtoa@u& (0+255),b
  3776  000C06  0E00               	movlw	0
  3777  000C08  6FAB               	movwf	(efgtoa@u+1)& (0+255),b
  3778  000C0A  0E80               	movlw	128
  3779  000C0C  6FAC               	movwf	(efgtoa@u+2)& (0+255),b
  3780  000C0E  0E3F               	movlw	63
  3781  000C10  6FAD               	movwf	(efgtoa@u+3)& (0+255),b
  3782                           
  3783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  3784  000C12  0E00               	movlw	0
  3785  000C14  6FA7               	movwf	(efgtoa@e+1)& (0+255),b
  3786  000C16  0E00               	movlw	0
  3787  000C18  6FA6               	movwf	efgtoa@e& (0+255),b
  3788  000C1A                     l3784:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  3792  000C1A  0E67               	movlw	103
  3793  000C1C  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3794  000C1E  B4D8               	btfsc	status,2,c
  3795  000C20  D004               	goto	l3788
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m += e;
  3799  000C22  51A6               	movf	efgtoa@e& (0+255),w,b
  3800  000C24  278A               	addwf	efgtoa@m& (0+255),f,b
  3801  000C26  51A7               	movf	(efgtoa@e+1)& (0+255),w,b
  3802  000C28  238B               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3803  000C2A                     l3788:
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  3807  000C2A  0E00               	movlw	0
  3808  000C2C  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  3809  000C2E  0E00               	movlw	0
  3810  000C30  6FA0               	movwf	efgtoa@i& (0+255),b
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  3814  000C32  C0A2  F098         	movff	efgtoa@g,efgtoa@h
  3815  000C36  C0A3  F099         	movff	efgtoa@g+1,efgtoa@h+1
  3816  000C3A  C0A4  F09A         	movff	efgtoa@g+2,efgtoa@h+2
  3817  000C3E  C0A5  F09B         	movff	efgtoa@g+3,efgtoa@h+3
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  3821  000C42  C0AA  F076         	movff	efgtoa@u,efgtoa@ou
  3822  000C46  C0AB  F077         	movff	efgtoa@u+1,efgtoa@ou+1
  3823  000C4A  C0AC  F078         	movff	efgtoa@u+2,efgtoa@ou+2
  3824  000C4E  C0AD  F079         	movff	efgtoa@u+3,efgtoa@ou+3
  3825                           
  3826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3827  000C52  D07B               	goto	l3802
  3828  000C54                     l3794:
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  3832  000C54  C098  F034         	movff	efgtoa@h,___fldiv@b
  3833  000C58  C099  F035         	movff	efgtoa@h+1,___fldiv@b+1
  3834  000C5C  C09A  F036         	movff	efgtoa@h+2,___fldiv@b+2
  3835  000C60  C09B  F037         	movff	efgtoa@h+3,___fldiv@b+3
  3836  000C64  C0AA  F038         	movff	efgtoa@u,___fldiv@a
  3837  000C68  C0AB  F039         	movff	efgtoa@u+1,___fldiv@a+1
  3838  000C6C  C0AC  F03A         	movff	efgtoa@u+2,___fldiv@a+2
  3839  000C70  C0AD  F03B         	movff	efgtoa@u+3,___fldiv@a+3
  3840  000C74  EC02  F012         	call	___fldiv	;wreg free
  3841  000C78  C034  F04D         	movff	?___fldiv,floorf@x
  3842  000C7C  C035  F04E         	movff	?___fldiv+1,floorf@x+1
  3843  000C80  C036  F04F         	movff	?___fldiv+2,floorf@x+2
  3844  000C84  C037  F050         	movff	?___fldiv+3,floorf@x+3
  3845  000C88  EC46  F013         	call	_floorf	;wreg free
  3846  000C8C  C04D  F09C         	movff	?_floorf,efgtoa@l
  3847  000C90  C04E  F09D         	movff	?_floorf+1,efgtoa@l+1
  3848  000C94  C04F  F09E         	movff	?_floorf+2,efgtoa@l+2
  3849  000C98  C050  F09F         	movff	?_floorf+3,efgtoa@l+3
  3850                           
  3851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  3852  000C9C  C09C  F060         	movff	efgtoa@l,___fltol@f1
  3853  000CA0  C09D  F061         	movff	efgtoa@l+1,___fltol@f1+1
  3854  000CA4  C09E  F062         	movff	efgtoa@l+2,___fltol@f1+2
  3855  000CA8  C09F  F063         	movff	efgtoa@l+3,___fltol@f1+3
  3856  000CAC  EC31  F016         	call	___fltol	;wreg free
  3857  000CB0  C060  F08E         	movff	?___fltol,efgtoa@d
  3858  000CB4  C061  F08F         	movff	?___fltol+1,efgtoa@d+1
  3859                           
  3860                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  3861  000CB8  C098  F060         	movff	efgtoa@h,___flsub@b
  3862  000CBC  C099  F061         	movff	efgtoa@h+1,___flsub@b+1
  3863  000CC0  C09A  F062         	movff	efgtoa@h+2,___flsub@b+2
  3864  000CC4  C09B  F063         	movff	efgtoa@h+3,___flsub@b+3
  3865  000CC8  C0AA  F013         	movff	efgtoa@u,___flmul@a
  3866  000CCC  C0AB  F014         	movff	efgtoa@u+1,___flmul@a+1
  3867  000CD0  C0AC  F015         	movff	efgtoa@u+2,___flmul@a+2
  3868  000CD4  C0AD  F016         	movff	efgtoa@u+3,___flmul@a+3
  3869  000CD8  C09C  F00F         	movff	efgtoa@l,___flmul@b
  3870  000CDC  C09D  F010         	movff	efgtoa@l+1,___flmul@b+1
  3871  000CE0  C09E  F011         	movff	efgtoa@l+2,___flmul@b+2
  3872  000CE4  C09F  F012         	movff	efgtoa@l+3,___flmul@b+3
  3873  000CE8  ECD3  F00E         	call	___flmul	;wreg free
  3874  000CEC  C00F  F064         	movff	?___flmul,___flsub@a
  3875  000CF0  C010  F065         	movff	?___flmul+1,___flsub@a+1
  3876  000CF4  C011  F066         	movff	?___flmul+2,___flsub@a+2
  3877  000CF8  C012  F067         	movff	?___flmul+3,___flsub@a+3
  3878  000CFC  EC68  F019         	call	___flsub	;wreg free
  3879  000D00  C060  F098         	movff	?___flsub,efgtoa@h
  3880  000D04  C061  F099         	movff	?___flsub+1,efgtoa@h+1
  3881  000D08  C062  F09A         	movff	?___flsub+2,efgtoa@h+2
  3882  000D0C  C063  F09B         	movff	?___flsub+3,efgtoa@h+3
  3883                           
  3884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  3885  000D10  C0AA  F034         	movff	efgtoa@u,___fldiv@b
  3886  000D14  C0AB  F035         	movff	efgtoa@u+1,___fldiv@b+1
  3887  000D18  C0AC  F036         	movff	efgtoa@u+2,___fldiv@b+2
  3888  000D1C  C0AD  F037         	movff	efgtoa@u+3,___fldiv@b+3
  3889  000D20  0E00               	movlw	0
  3890  000D22  6E38               	movwf	___fldiv@a,c
  3891  000D24  0E00               	movlw	0
  3892  000D26  6E39               	movwf	___fldiv@a+1,c
  3893  000D28  0E20               	movlw	32
  3894  000D2A  6E3A               	movwf	___fldiv@a+2,c
  3895  000D2C  0E41               	movlw	65
  3896  000D2E  6E3B               	movwf	___fldiv@a+3,c
  3897  000D30  EC02  F012         	call	___fldiv	;wreg free
  3898  000D34  C034  F0AA         	movff	?___fldiv,efgtoa@u
  3899  000D38  C035  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  3900  000D3C  C036  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  3901  000D40  C037  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  3902                           
  3903                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  3904  000D44  0100               	movlb	0	; () banked
  3905  000D46  4BA0               	infsnz	efgtoa@i& (0+255),f,b
  3906  000D48  2BA1               	incf	(efgtoa@i+1)& (0+255),f,b
  3907  000D4A                     l3802:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3911  000D4A  518A               	movf	efgtoa@m& (0+255),w,b
  3912  000D4C  5DA0               	subwf	efgtoa@i& (0+255),w,b
  3913  000D4E  51A1               	movf	(efgtoa@i+1)& (0+255),w,b
  3914  000D50  0A80               	xorlw	128
  3915  000D52  6F71               	movwf	??_efgtoa& (0+255),b
  3916  000D54  518B               	movf	(efgtoa@m+1)& (0+255),w,b
  3917  000D56  0A80               	xorlw	128
  3918  000D58  5971               	subwfb	??_efgtoa& (0+255),w,b
  3919  000D5A  A0D8               	btfss	status,0,c
  3920  000D5C  D77B               	goto	l3794
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  3924  000D5E  C0AA  F00F         	movff	efgtoa@u,___flmul@b
  3925  000D62  C0AB  F010         	movff	efgtoa@u+1,___flmul@b+1
  3926  000D66  C0AC  F011         	movff	efgtoa@u+2,___flmul@b+2
  3927  000D6A  C0AD  F012         	movff	efgtoa@u+3,___flmul@b+3
  3928  000D6E  0E00               	movlw	0
  3929  000D70  6E13               	movwf	___flmul@a,c
  3930  000D72  0E00               	movlw	0
  3931  000D74  6E14               	movwf	___flmul@a+1,c
  3932  000D76  0EA0               	movlw	160
  3933  000D78  6E15               	movwf	___flmul@a+2,c
  3934  000D7A  0E40               	movlw	64
  3935  000D7C  6E16               	movwf	___flmul@a+3,c
  3936  000D7E  ECD3  F00E         	call	___flmul	;wreg free
  3937  000D82  C00F  F09C         	movff	?___flmul,efgtoa@l
  3938  000D86  C010  F09D         	movff	?___flmul+1,efgtoa@l+1
  3939  000D8A  C011  F09E         	movff	?___flmul+2,efgtoa@l+2
  3940  000D8E  C012  F09F         	movff	?___flmul+3,efgtoa@l+3
  3941                           
  3942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  3943  000D92  C098  F028         	movff	efgtoa@h,___flge@ff1
  3944  000D96  C099  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3945  000D9A  C09A  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3946  000D9E  C09B  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3947  000DA2  C09C  F02C         	movff	efgtoa@l,___flge@ff2
  3948  000DA6  C09D  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3949  000DAA  C09E  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3950  000DAE  C09F  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3951  000DB2  EC63  F015         	call	___flge	;wreg free
  3952  000DB6  B0D8               	btfsc	status,0,c
  3953  000DB8  D003               	goto	l3810
  3954                           
  3955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  3956  000DBA  0E00               	movlw	0
  3957  000DBC  0100               	movlb	0	; () banked
  3958  000DBE  D018               	goto	L5
  3959  000DC0                     l3810:
  3960                           
  3961                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  3962  000DC0  C098  F001         	movff	efgtoa@h,___fleq@ff1
  3963  000DC4  C099  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3964  000DC8  C09A  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3965  000DCC  C09B  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3966  000DD0  C09C  F005         	movff	efgtoa@l,___fleq@ff2
  3967  000DD4  C09D  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3968  000DD8  C09E  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3969  000DDC  C09F  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3970  000DE0  EC7D  F017         	call	___fleq	;wreg free
  3971  000DE4  A0D8               	btfss	status,0,c
  3972  000DE6  D00B               	goto	l3816
  3973  000DE8  0100               	movlb	0	; () banked
  3974  000DEA  B18E               	btfsc	efgtoa@d& (0+255),0,b
  3975  000DEC  D008               	goto	l3816
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  3979  000DEE  0E00               	movlw	0
  3980  000DF0                     L5:
  3981  000DF0  6F9C               	movwf	efgtoa@l& (0+255),b
  3982  000DF2  0E00               	movlw	0
  3983  000DF4  6F9D               	movwf	(efgtoa@l+1)& (0+255),b
  3984  000DF6  0E00               	movlw	0
  3985  000DF8  6F9E               	movwf	(efgtoa@l+2)& (0+255),b
  3986  000DFA  0E00               	movlw	0
  3987  000DFC  6F9F               	movwf	(efgtoa@l+3)& (0+255),b
  3988  000DFE                     l3816:
  3989                           
  3990                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  3991  000DFE  C0A2  F04D         	movff	efgtoa@g,___fladd@b
  3992  000E02  C0A3  F04E         	movff	efgtoa@g+1,___fladd@b+1
  3993  000E06  C0A4  F04F         	movff	efgtoa@g+2,___fladd@b+2
  3994  000E0A  C0A5  F050         	movff	efgtoa@g+3,___fladd@b+3
  3995  000E0E  C09C  F051         	movff	efgtoa@l,___fladd@a
  3996  000E12  C09D  F052         	movff	efgtoa@l+1,___fladd@a+1
  3997  000E16  C09E  F053         	movff	efgtoa@l+2,___fladd@a+2
  3998  000E1A  C09F  F054         	movff	efgtoa@l+3,___fladd@a+3
  3999  000E1E  EC7C  F010         	call	___fladd	;wreg free
  4000  000E22  C04D  F098         	movff	?___fladd,efgtoa@h
  4001  000E26  C04E  F099         	movff	?___fladd+1,efgtoa@h+1
  4002  000E2A  C04F  F09A         	movff	?___fladd+2,efgtoa@h+2
  4003  000E2E  C050  F09B         	movff	?___fladd+3,efgtoa@h+3
  4004                           
  4005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  4006  000E32  C076  F0AA         	movff	efgtoa@ou,efgtoa@u
  4007  000E36  C077  F0AB         	movff	efgtoa@ou+1,efgtoa@u+1
  4008  000E3A  C078  F0AC         	movff	efgtoa@ou+2,efgtoa@u+2
  4009  000E3E  C079  F0AD         	movff	efgtoa@ou+3,efgtoa@u+3
  4010                           
  4011                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  4012  000E42  0E65               	movlw	101
  4013  000E44  0100               	movlb	0	; () banked
  4014  000E46  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  4015  000E48  B4D8               	btfsc	status,2,c
  4016  000E4A  D005               	goto	l3824
  4017                           
  4018                           ; BSR set to: 0
  4019  000E4C  C0A6  F08C         	movff	efgtoa@e,efgtoa@ne
  4020  000E50  C0A7  F08D         	movff	efgtoa@e+1,efgtoa@ne+1
  4021  000E54  D004               	goto	l260
  4022  000E56                     l3824:
  4023                           
  4024                           ; BSR set to: 0
  4025  000E56  0E00               	movlw	0
  4026  000E58  6F8D               	movwf	(efgtoa@ne+1)& (0+255),b
  4027  000E5A  0E00               	movlw	0
  4028  000E5C  6F8C               	movwf	efgtoa@ne& (0+255),b
  4029  000E5E                     l260:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  4033  000E5E  0E00               	movlw	0
  4034  000E60  6F89               	movwf	(efgtoa@pp+1)& (0+255),b
  4035  000E62  0E00               	movlw	0
  4036  000E64  6F88               	movwf	efgtoa@pp& (0+255),b
  4037                           
  4038                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  4039  000E66  0E00               	movlw	0
  4040  000E68  6F87               	movwf	(efgtoa@t+1)& (0+255),b
  4041  000E6A  0E00               	movlw	0
  4042  000E6C  6F86               	movwf	efgtoa@t& (0+255),b
  4043                           
  4044                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  4045  000E6E  0E00               	movlw	0
  4046  000E70  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  4047  000E72  0E00               	movlw	0
  4048  000E74  6FA0               	movwf	efgtoa@i& (0+255),b
  4049                           
  4050                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  4051  000E76  D0C6               	goto	l3874
  4052  000E78                     l3826:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  4056  000E78  C098  F034         	movff	efgtoa@h,___fldiv@b
  4057  000E7C  C099  F035         	movff	efgtoa@h+1,___fldiv@b+1
  4058  000E80  C09A  F036         	movff	efgtoa@h+2,___fldiv@b+2
  4059  000E84  C09B  F037         	movff	efgtoa@h+3,___fldiv@b+3
  4060  000E88  C0AA  F038         	movff	efgtoa@u,___fldiv@a
  4061  000E8C  C0AB  F039         	movff	efgtoa@u+1,___fldiv@a+1
  4062  000E90  C0AC  F03A         	movff	efgtoa@u+2,___fldiv@a+2
  4063  000E94  C0AD  F03B         	movff	efgtoa@u+3,___fldiv@a+3
  4064  000E98  EC02  F012         	call	___fldiv	;wreg free
  4065  000E9C  C034  F04D         	movff	?___fldiv,floorf@x
  4066  000EA0  C035  F04E         	movff	?___fldiv+1,floorf@x+1
  4067  000EA4  C036  F04F         	movff	?___fldiv+2,floorf@x+2
  4068  000EA8  C037  F050         	movff	?___fldiv+3,floorf@x+3
  4069  000EAC  EC46  F013         	call	_floorf	;wreg free
  4070  000EB0  C04D  F09C         	movff	?_floorf,efgtoa@l
  4071  000EB4  C04E  F09D         	movff	?_floorf+1,efgtoa@l+1
  4072  000EB8  C04F  F09E         	movff	?_floorf+2,efgtoa@l+2
  4073  000EBC  C050  F09F         	movff	?_floorf+3,efgtoa@l+3
  4074                           
  4075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  4076  000EC0  C09C  F060         	movff	efgtoa@l,___fltol@f1
  4077  000EC4  C09D  F061         	movff	efgtoa@l+1,___fltol@f1+1
  4078  000EC8  C09E  F062         	movff	efgtoa@l+2,___fltol@f1+2
  4079  000ECC  C09F  F063         	movff	efgtoa@l+3,___fltol@f1+3
  4080  000ED0  EC31  F016         	call	___fltol	;wreg free
  4081  000ED4  C060  F08E         	movff	?___fltol,efgtoa@d
  4082  000ED8  C061  F08F         	movff	?___fltol+1,efgtoa@d+1
  4083                           
  4084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4085  000EDC  0100               	movlb	0	; () banked
  4086  000EDE  B9F1               	btfsc	_flags& (0+255),4,b
  4087  000EE0  D00C               	goto	l3838
  4088                           
  4089                           ; BSR set to: 0
  4090  000EE2  518E               	movf	efgtoa@d& (0+255),w,b
  4091  000EE4  118F               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4092  000EE6  A4D8               	btfss	status,2,c
  4093  000EE8  D008               	goto	l3838
  4094                           
  4095                           ; BSR set to: 0
  4096  000EEA  0E67               	movlw	103
  4097  000EEC  1997               	xorwf	efgtoa@mode& (0+255),w,b
  4098  000EEE  B4D8               	btfsc	status,2,c
  4099                           
  4100                           ; BSR set to: 0
  4101  000EF0  AF8D               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4102  000EF2  D003               	goto	l3838
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t;
  4106  000EF4  4B86               	infsnz	efgtoa@t& (0+255),f,b
  4107  000EF6  2B87               	incf	(efgtoa@t+1)& (0+255),f,b
  4108                           
  4109                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else {
  4110  000EF8  D039               	goto	l3866
  4111  000EFA                     l3838:
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  4115  000EFA  5188               	movf	efgtoa@pp& (0+255),w,b
  4116  000EFC  1189               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4117  000EFE  B4D8               	btfsc	status,2,c
  4118                           
  4119                           ; BSR set to: 0
  4120  000F00  AF8D               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4121  000F02  D022               	goto	l3858
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  4125  000F04  0E16               	movlw	low _dbuf
  4126  000F06  25A8               	addwf	efgtoa@n& (0+255),w,b
  4127  000F08  6ED9               	movwf	fsr2l,c
  4128  000F0A  0E01               	movlw	high _dbuf
  4129  000F0C  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4130  000F0E  6EDA               	movwf	fsr2h,c
  4131  000F10  0E2E               	movlw	46
  4132  000F12  6EDF               	movwf	indf2,c
  4133                           
  4134                           ; BSR set to: 0
  4135  000F14  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  4136  000F16  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                 --w;
  4140  000F18  0795               	decf	efgtoa@w& (0+255),f,b
  4141  000F1A  A0D8               	btfss	status,0,c
  4142  000F1C  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  4146  000F1E  0E00               	movlw	0
  4147  000F20  6F89               	movwf	(efgtoa@pp+1)& (0+255),b
  4148  000F22  0E01               	movlw	1
  4149  000F24  6F88               	movwf	efgtoa@pp& (0+255),b
  4150  000F26  D010               	goto	l3858
  4151  000F28                     l3850:
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  4155  000F28  0E16               	movlw	low _dbuf
  4156  000F2A  25A8               	addwf	efgtoa@n& (0+255),w,b
  4157  000F2C  6ED9               	movwf	fsr2l,c
  4158  000F2E  0E01               	movlw	high _dbuf
  4159  000F30  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4160  000F32  6EDA               	movwf	fsr2h,c
  4161  000F34  0E30               	movlw	48
  4162  000F36  6EDF               	movwf	indf2,c
  4163                           
  4164                           ; BSR set to: 0
  4165  000F38  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  4166  000F3A  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                 --w;
  4170  000F3C  0795               	decf	efgtoa@w& (0+255),f,b
  4171  000F3E  A0D8               	btfss	status,0,c
  4172  000F40  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                 --t;
  4176  000F42  0786               	decf	efgtoa@t& (0+255),f,b
  4177  000F44  A0D8               	btfss	status,0,c
  4178  000F46  0787               	decf	(efgtoa@t+1)& (0+255),f,b
  4179  000F48                     l3858:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  4183  000F48  5186               	movf	efgtoa@t& (0+255),w,b
  4184  000F4A  1187               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4185  000F4C  A4D8               	btfss	status,2,c
  4186  000F4E  D7EC               	goto	l3850
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  4190  000F50  0E16               	movlw	low _dbuf
  4191  000F52  25A8               	addwf	efgtoa@n& (0+255),w,b
  4192  000F54  6ED9               	movwf	fsr2l,c
  4193  000F56  0E01               	movlw	high _dbuf
  4194  000F58  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4195  000F5A  6EDA               	movwf	fsr2h,c
  4196  000F5C  518E               	movf	efgtoa@d& (0+255),w,b
  4197  000F5E  0F30               	addlw	48
  4198  000F60  6EDF               	movwf	indf2,c
  4199                           
  4200                           ; BSR set to: 0
  4201  000F62  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  4202  000F64  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w;
  4206  000F66  0795               	decf	efgtoa@w& (0+255),f,b
  4207  000F68  A0D8               	btfss	status,0,c
  4208  000F6A  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  4209  000F6C                     l3866:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  4213  000F6C  C098  F060         	movff	efgtoa@h,___flsub@b
  4214  000F70  C099  F061         	movff	efgtoa@h+1,___flsub@b+1
  4215  000F74  C09A  F062         	movff	efgtoa@h+2,___flsub@b+2
  4216  000F78  C09B  F063         	movff	efgtoa@h+3,___flsub@b+3
  4217  000F7C  C0AA  F013         	movff	efgtoa@u,___flmul@a
  4218  000F80  C0AB  F014         	movff	efgtoa@u+1,___flmul@a+1
  4219  000F84  C0AC  F015         	movff	efgtoa@u+2,___flmul@a+2
  4220  000F88  C0AD  F016         	movff	efgtoa@u+3,___flmul@a+3
  4221  000F8C  C09C  F00F         	movff	efgtoa@l,___flmul@b
  4222  000F90  C09D  F010         	movff	efgtoa@l+1,___flmul@b+1
  4223  000F94  C09E  F011         	movff	efgtoa@l+2,___flmul@b+2
  4224  000F98  C09F  F012         	movff	efgtoa@l+3,___flmul@b+3
  4225  000F9C  ECD3  F00E         	call	___flmul	;wreg free
  4226  000FA0  C00F  F064         	movff	?___flmul,___flsub@a
  4227  000FA4  C010  F065         	movff	?___flmul+1,___flsub@a+1
  4228  000FA8  C011  F066         	movff	?___flmul+2,___flsub@a+2
  4229  000FAC  C012  F067         	movff	?___flmul+3,___flsub@a+3
  4230  000FB0  EC68  F019         	call	___flsub	;wreg free
  4231  000FB4  C060  F098         	movff	?___flsub,efgtoa@h
  4232  000FB8  C061  F099         	movff	?___flsub+1,efgtoa@h+1
  4233  000FBC  C062  F09A         	movff	?___flsub+2,efgtoa@h+2
  4234  000FC0  C063  F09B         	movff	?___flsub+3,efgtoa@h+3
  4235                           
  4236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  4237  000FC4  C0AA  F034         	movff	efgtoa@u,___fldiv@b
  4238  000FC8  C0AB  F035         	movff	efgtoa@u+1,___fldiv@b+1
  4239  000FCC  C0AC  F036         	movff	efgtoa@u+2,___fldiv@b+2
  4240  000FD0  C0AD  F037         	movff	efgtoa@u+3,___fldiv@b+3
  4241  000FD4  0E00               	movlw	0
  4242  000FD6  6E38               	movwf	___fldiv@a,c
  4243  000FD8  0E00               	movlw	0
  4244  000FDA  6E39               	movwf	___fldiv@a+1,c
  4245  000FDC  0E20               	movlw	32
  4246  000FDE  6E3A               	movwf	___fldiv@a+2,c
  4247  000FE0  0E41               	movlw	65
  4248  000FE2  6E3B               	movwf	___fldiv@a+3,c
  4249  000FE4  EC02  F012         	call	___fldiv	;wreg free
  4250  000FE8  C034  F0AA         	movff	?___fldiv,efgtoa@u
  4251  000FEC  C035  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  4252  000FF0  C036  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  4253  000FF4  C037  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  4254                           
  4255                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  4256  000FF8  0100               	movlb	0	; () banked
  4257  000FFA  078C               	decf	efgtoa@ne& (0+255),f,b
  4258  000FFC  A0D8               	btfss	status,0,c
  4259  000FFE  078D               	decf	(efgtoa@ne+1)& (0+255),f,b
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  4263  001000  4BA0               	infsnz	efgtoa@i& (0+255),f,b
  4264  001002  2BA1               	incf	(efgtoa@i+1)& (0+255),f,b
  4265  001004                     l3874:
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  4269  001004  518A               	movf	efgtoa@m& (0+255),w,b
  4270  001006  5DA0               	subwf	efgtoa@i& (0+255),w,b
  4271  001008  51A1               	movf	(efgtoa@i+1)& (0+255),w,b
  4272  00100A  0A80               	xorlw	128
  4273  00100C  6F71               	movwf	??_efgtoa& (0+255),b
  4274  00100E  518B               	movf	(efgtoa@m+1)& (0+255),w,b
  4275  001010  0A80               	xorlw	128
  4276  001012  5971               	subwfb	??_efgtoa& (0+255),w,b
  4277  001014  B0D8               	btfsc	status,0,c
  4278  001016  D008               	goto	u4620
  4279                           
  4280                           ; BSR set to: 0
  4281  001018  BFA9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4282  00101A  D72E               	goto	l3826
  4283  00101C  51A9               	movf	(efgtoa@n+1)& (0+255),w,b
  4284  00101E  E104               	bnz	u4620
  4285  001020  0E4B               	movlw	75
  4286  001022  5DA8               	subwf	efgtoa@n& (0+255),w,b
  4287  001024  A0D8               	btfss	status,0,c
  4288  001026  D728               	goto	l3826
  4289  001028                     u4620:
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  4293  001028  5188               	movf	efgtoa@pp& (0+255),w,b
  4294  00102A  1189               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4295  00102C  B4D8               	btfsc	status,2,c
  4296                           
  4297                           ; BSR set to: 0
  4298  00102E  A9F1               	btfss	_flags& (0+255),4,b
  4299  001030  D00A               	goto	l3886
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  4303  001032  0E16               	movlw	low _dbuf
  4304  001034  25A8               	addwf	efgtoa@n& (0+255),w,b
  4305  001036  6ED9               	movwf	fsr2l,c
  4306  001038  0E01               	movlw	high _dbuf
  4307  00103A  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4308  00103C  6EDA               	movwf	fsr2h,c
  4309  00103E  0E2E               	movlw	46
  4310  001040  6EDF               	movwf	indf2,c
  4311                           
  4312                           ; BSR set to: 0
  4313  001042  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  4314  001044  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  4315  001046                     l3886:
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  4319  001046  0E16               	movlw	low _dbuf
  4320  001048  25A8               	addwf	efgtoa@n& (0+255),w,b
  4321  00104A  6ED9               	movwf	fsr2l,c
  4322  00104C  0E01               	movlw	high _dbuf
  4323  00104E  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4324  001050  6EDA               	movwf	fsr2h,c
  4325  001052  0E00               	movlw	0
  4326  001054  6EDF               	movwf	indf2,c
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  4330  001056  0E65               	movlw	101
  4331  001058  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  4332  00105A  A4D8               	btfss	status,2,c
  4333  00105C  D47F               	goto	l3698
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  4337  00105E  0E00               	movlw	0
  4338  001060  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  4339  001062  0E4F               	movlw	79
  4340  001064  6FA0               	movwf	efgtoa@i& (0+255),b
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  4344  001066  0E16               	movlw	low _dbuf
  4345  001068  25A0               	addwf	efgtoa@i& (0+255),w,b
  4346  00106A  6ED9               	movwf	fsr2l,c
  4347  00106C  0E01               	movlw	high _dbuf
  4348  00106E  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4349  001070  6EDA               	movwf	fsr2h,c
  4350  001072  0E00               	movlw	0
  4351  001074  6EDF               	movwf	indf2,c
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  4355  001076  0E00               	movlw	0
  4356  001078  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  4357  00107A  0E00               	movlw	0
  4358  00107C  6F90               	movwf	efgtoa@sign& (0+255),b
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  4362  00107E  AFA7               	btfss	(efgtoa@e+1)& (0+255),7,b
  4363  001080  D008               	goto	l3902
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  4367  001082  0E00               	movlw	0
  4368  001084  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  4369  001086  0E01               	movlw	1
  4370  001088  6F90               	movwf	efgtoa@sign& (0+255),b
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  4374  00108A  6DA6               	negf	efgtoa@e& (0+255),b
  4375  00108C  1FA7               	comf	(efgtoa@e+1)& (0+255),f,b
  4376  00108E  B0D8               	btfsc	status,0,c
  4377  001090  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  4378  001092                     l3902:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  4382  001092  0E00               	movlw	0
  4383  001094  6F93               	movwf	(efgtoa@p+1)& (0+255),b
  4384  001096  0E02               	movlw	2
  4385  001098  6F92               	movwf	efgtoa@p& (0+255),b
  4386                           
  4387                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  4388  00109A  D02B               	goto	l3914
  4389  00109C                     l3904:
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i;
  4393  00109C  07A0               	decf	efgtoa@i& (0+255),f,b
  4394  00109E  A0D8               	btfss	status,0,c
  4395  0010A0  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  4399  0010A2  0E16               	movlw	low _dbuf
  4400  0010A4  25A0               	addwf	efgtoa@i& (0+255),w,b
  4401  0010A6  6ED9               	movwf	fsr2l,c
  4402  0010A8  0E01               	movlw	high _dbuf
  4403  0010AA  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4404  0010AC  6EDA               	movwf	fsr2h,c
  4405  0010AE  C0A6  F001         	movff	efgtoa@e,___awmod@dividend
  4406  0010B2  C0A7  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4407  0010B6  0E00               	movlw	0
  4408  0010B8  6E04               	movwf	___awmod@divisor+1,c
  4409  0010BA  0E0A               	movlw	10
  4410  0010BC  6E03               	movwf	___awmod@divisor,c
  4411  0010BE  EC41  F018         	call	___awmod	;wreg free
  4412  0010C2  5001               	movf	?___awmod,w,c
  4413  0010C4  0F30               	addlw	48
  4414  0010C6  6EDF               	movwf	indf2,c
  4415                           
  4416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  4417  0010C8  C0A6  F001         	movff	efgtoa@e,___awdiv@dividend
  4418  0010CC  C0A7  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4419  0010D0  0E00               	movlw	0
  4420  0010D2  6E04               	movwf	___awdiv@divisor+1,c
  4421  0010D4  0E0A               	movlw	10
  4422  0010D6  6E03               	movwf	___awdiv@divisor,c
  4423  0010D8  ECC2  F017         	call	___awdiv	;wreg free
  4424  0010DC  C001  F0A6         	movff	?___awdiv,efgtoa@e
  4425  0010E0  C002  F0A7         	movff	?___awdiv+1,efgtoa@e+1
  4426                           
  4427                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p;
  4428  0010E4  0100               	movlb	0	; () banked
  4429  0010E6  0792               	decf	efgtoa@p& (0+255),f,b
  4430  0010E8  A0D8               	btfss	status,0,c
  4431  0010EA  0793               	decf	(efgtoa@p+1)& (0+255),f,b
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w;
  4435  0010EC  0795               	decf	efgtoa@w& (0+255),f,b
  4436  0010EE  A0D8               	btfss	status,0,c
  4437  0010F0  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  4438  0010F2                     l3914:
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  4442  0010F2  51A6               	movf	efgtoa@e& (0+255),w,b
  4443  0010F4  11A7               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4444  0010F6  A4D8               	btfss	status,2,c
  4445  0010F8  D7D1               	goto	l3904
  4446                           
  4447                           ; BSR set to: 0
  4448  0010FA  BF93               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4449  0010FC  D005               	goto	u4680
  4450  0010FE  5193               	movf	(efgtoa@p+1)& (0+255),w,b
  4451  001100  E1CD               	bnz	l3904
  4452  001102  0592               	decf	efgtoa@p& (0+255),w,b
  4453  001104  B0D8               	btfsc	status,0,c
  4454  001106  D7CA               	goto	l3904
  4455  001108                     u4680:
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  4459  001108  07A0               	decf	efgtoa@i& (0+255),f,b
  4460  00110A  A0D8               	btfss	status,0,c
  4461  00110C  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  4465  00110E  5190               	movf	efgtoa@sign& (0+255),w,b
  4466  001110  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4467  001112  A4D8               	btfss	status,2,c
  4468  001114  D004               	goto	l3924
  4469                           
  4470                           ; BSR set to: 0
  4471  001116  0E00               	movlw	0
  4472  001118  6F81               	movwf	(_efgtoa$367+1)& (0+255),b
  4473  00111A  0E2B               	movlw	43
  4474  00111C  D003               	goto	L6
  4475  00111E                     l3924:
  4476                           
  4477                           ; BSR set to: 0
  4478  00111E  0E00               	movlw	0
  4479  001120  6F81               	movwf	(_efgtoa$367+1)& (0+255),b
  4480  001122  0E2D               	movlw	45
  4481  001124                     L6:
  4482  001124  6F80               	movwf	_efgtoa$367& (0+255),b
  4483                           
  4484                           ; BSR set to: 0
  4485  001126  0E16               	movlw	low _dbuf
  4486  001128  25A0               	addwf	efgtoa@i& (0+255),w,b
  4487  00112A  6ED9               	movwf	fsr2l,c
  4488  00112C  0E01               	movlw	high _dbuf
  4489  00112E  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4490  001130  6EDA               	movwf	fsr2h,c
  4491  001132  C080  FFDF         	movff	_efgtoa$367,indf2
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  4495  001136  0795               	decf	efgtoa@w& (0+255),f,b
  4496  001138  A0D8               	btfss	status,0,c
  4497  00113A  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4501  00113C  07A0               	decf	efgtoa@i& (0+255),f,b
  4502  00113E  A0D8               	btfss	status,0,c
  4503  001140  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  4504                           
  4505                           ; BSR set to: 0
  4506  001142  0EBF               	movlw	191
  4507  001144  6F71               	movwf	??_efgtoa& (0+255),b
  4508  001146  0EFF               	movlw	255
  4509  001148  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  4510  00114A  5170               	movf	efgtoa@c& (0+255),w,b
  4511  00114C  6F73               	movwf	(??_efgtoa+2)& (0+255),b
  4512  00114E  6B74               	clrf	(??_efgtoa+3)& (0+255),b
  4513  001150  5171               	movf	??_efgtoa& (0+255),w,b
  4514  001152  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  4515  001154  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  4516  001156  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4517  001158  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  4518  00115A  E106               	bnz	u4700
  4519  00115C  0E1A               	movlw	26
  4520  00115E  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  4521  001160  B0D8               	btfsc	status,0,c
  4522  001162  D002               	goto	u4700
  4523  001164  0E01               	movlw	1
  4524  001166  D001               	goto	u4710
  4525  001168                     u4700:
  4526  001168  0E00               	movlw	0
  4527  00116A                     u4710:
  4528  00116A  6F84               	movwf	_efgtoa$369& (0+255),b
  4529  00116C  6B85               	clrf	(_efgtoa$369+1)& (0+255),b
  4530                           
  4531                           ; BSR set to: 0
  4532  00116E  5184               	movf	_efgtoa$369& (0+255),w,b
  4533  001170  1185               	iorwf	(_efgtoa$369+1)& (0+255),w,b
  4534  001172  A4D8               	btfss	status,2,c
  4535  001174  D004               	goto	l3940
  4536                           
  4537                           ; BSR set to: 0
  4538  001176  0E00               	movlw	0
  4539  001178  6F83               	movwf	(_efgtoa$368+1)& (0+255),b
  4540  00117A  0E65               	movlw	101
  4541  00117C  D003               	goto	L7
  4542  00117E                     l3940:
  4543                           
  4544                           ; BSR set to: 0
  4545  00117E  0E00               	movlw	0
  4546  001180  6F83               	movwf	(_efgtoa$368+1)& (0+255),b
  4547  001182  0E45               	movlw	69
  4548  001184                     L7:
  4549  001184  6F82               	movwf	_efgtoa$368& (0+255),b
  4550                           
  4551                           ; BSR set to: 0
  4552  001186  0E16               	movlw	low _dbuf
  4553  001188  25A0               	addwf	efgtoa@i& (0+255),w,b
  4554  00118A  6ED9               	movwf	fsr2l,c
  4555  00118C  0E01               	movlw	high _dbuf
  4556  00118E  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4557  001190  6EDA               	movwf	fsr2h,c
  4558  001192  C082  FFDF         	movff	_efgtoa$368,indf2
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  4562  001196  0795               	decf	efgtoa@w& (0+255),f,b
  4563  001198  A0D8               	btfss	status,0,c
  4564  00119A  0796               	decf	(efgtoa@w+1)& (0+255),f,b
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  4568  00119C  0E16               	movlw	low _dbuf
  4569  00119E  25A8               	addwf	efgtoa@n& (0+255),w,b
  4570  0011A0  6E01               	movwf	strcpy@dest,c
  4571  0011A2  0E01               	movlw	high _dbuf
  4572  0011A4  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4573  0011A6  6E02               	movwf	strcpy@dest+1,c
  4574  0011A8  0E16               	movlw	low _dbuf
  4575  0011AA  25A0               	addwf	efgtoa@i& (0+255),w,b
  4576  0011AC  6E03               	movwf	strcpy@src,c
  4577  0011AE  0E01               	movlw	high _dbuf
  4578  0011B0  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4579  0011B2  6E04               	movwf	strcpy@src+1,c
  4580  0011B4  ECCD  F018         	call	_strcpy	;wreg free
  4581  0011B8  EFAE  F004         	goto	l3698
  4582  0011BC                     __end_of_efgtoa:
  4583                           	opt callstack 0
  4584                           
  4585 ;; *************** function _tolower *****************
  4586 ;; Defined at:
  4587 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  c               2    6[COMRAM] int 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;		None
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  2    6[COMRAM] int 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4601 ;;      Params:         2       0       0       0       0       0       0       0       0
  4602 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4603 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4604 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4605 ;;Total ram usage:        8 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:    2
  4608 ;; This function calls:
  4609 ;;		_isupper
  4610 ;; This function is called by:
  4611 ;;		_efgtoa
  4612 ;;		_vfpfcnvrt
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text8
  4617  0031EC                     __ptext8:
  4618                           	opt callstack 0
  4619  0031EC                     _tolower:
  4620                           	opt callstack 25
  4621                           
  4622                           ;incstack = 0
  4623  0031EC  0EBF               	movlw	191
  4624  0031EE  6E09               	movwf	??_tolower& (0+255),c
  4625  0031F0  0EFF               	movlw	255
  4626  0031F2  6E0A               	movwf	(??_tolower+1)& (0+255),c
  4627  0031F4  C007  F00B         	movff	tolower@c,??_tolower+2
  4628  0031F8  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4629  0031FC  5009               	movf	??_tolower,w,c
  4630  0031FE  260B               	addwf	??_tolower+2,f,c
  4631  003200  500A               	movf	??_tolower+1,w,c
  4632  003202  220C               	addwfc	??_tolower+3,f,c
  4633  003204  500C               	movf	??_tolower+3,w,c
  4634  003206  E106               	bnz	u3320
  4635  003208  0E1A               	movlw	26
  4636  00320A  5C0B               	subwf	??_tolower+2,w,c
  4637  00320C  B0D8               	btfsc	status,0,c
  4638  00320E  D002               	goto	u3320
  4639  003210  0E01               	movlw	1
  4640  003212  D001               	goto	u3330
  4641  003214                     u3320:
  4642  003214  0E00               	movlw	0
  4643  003216                     u3330:
  4644  003216  6E0D               	movwf	_tolower$999,c
  4645  003218  6A0E               	clrf	_tolower$999+1,c
  4646  00321A  500D               	movf	_tolower$999,w,c
  4647  00321C  100E               	iorwf	_tolower$999+1,w,c
  4648  00321E  B4D8               	btfsc	status,2,c
  4649  003220  D006               	goto	l1167
  4650  003222  0E20               	movlw	32
  4651  003224  1007               	iorwf	tolower@c,w,c
  4652  003226  6E07               	movwf	?_tolower,c
  4653  003228  5008               	movf	tolower@c+1,w,c
  4654  00322A  6E08               	movwf	?_tolower+1,c
  4655  00322C  0012               	return	
  4656  00322E                     l1167:
  4657  00322E  C007  F007         	movff	tolower@c,?_tolower
  4658  003232  C008  F008         	movff	tolower@c+1,?_tolower+1
  4659  003236  0012               	return		;funcret
  4660  003238                     __end_of_tolower:
  4661                           	opt callstack 0
  4662                           
  4663 ;; *************** function _isupper *****************
  4664 ;; Defined at:
  4665 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  c               2    0[COMRAM] int 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  2    0[COMRAM] int 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4679 ;;      Params:         2       0       0       0       0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4681 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4682 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4683 ;;Total ram usage:        6 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    1
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_efgtoa
  4690 ;;		_vfpfcnvrt
  4691 ;;		_tolower
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text9
  4696  0033F6                     __ptext9:
  4697                           	opt callstack 0
  4698  0033F6                     _isupper:
  4699                           	opt callstack 25
  4700                           
  4701                           ;incstack = 0
  4702  0033F6  0EBF               	movlw	191
  4703  0033F8  6E03               	movwf	??_isupper& (0+255),c
  4704  0033FA  0EFF               	movlw	255
  4705  0033FC  6E04               	movwf	(??_isupper+1)& (0+255),c
  4706  0033FE  C001  F005         	movff	isupper@c,??_isupper+2
  4707  003402  C002  F006         	movff	isupper@c+1,??_isupper+3
  4708  003406  5003               	movf	??_isupper,w,c
  4709  003408  2605               	addwf	??_isupper+2,f,c
  4710  00340A  5004               	movf	??_isupper+1,w,c
  4711  00340C  2206               	addwfc	??_isupper+3,f,c
  4712  00340E  5006               	movf	??_isupper+3,w,c
  4713  003410  E106               	bnz	u2780
  4714  003412  0E1A               	movlw	26
  4715  003414  5C05               	subwf	??_isupper+2,w,c
  4716  003416  B0D8               	btfsc	status,0,c
  4717  003418  D002               	goto	u2780
  4718  00341A  0E01               	movlw	1
  4719  00341C  D001               	goto	u2790
  4720  00341E                     u2780:
  4721  00341E  0E00               	movlw	0
  4722  003420                     u2790:
  4723  003420  6E01               	movwf	?_isupper,c
  4724  003422  6A02               	clrf	?_isupper+1,c
  4725  003424  0012               	return		;funcret
  4726  003426                     __end_of_isupper:
  4727                           	opt callstack 0
  4728                           
  4729 ;; *************** function _strcpy *****************
  4730 ;; Defined at:
  4731 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4734 ;;		 -> dbuf(80), 
  4735 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4736 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4737 ;;		 -> dbuf(80), 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  d               2    8[COMRAM] PTR unsigned char 
  4740 ;;		 -> dbuf(80), 
  4741 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4742 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4743 ;;		 -> dbuf(80), 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  2    0[COMRAM] PTR unsigned char 
  4746 ;; Registers used:
  4747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4753 ;;      Params:         4       0       0       0       0       0       0       0       0
  4754 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4755 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4756 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4757 ;;Total ram usage:       10 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_efgtoa
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text10
  4768  00319A                     __ptext10:
  4769                           	opt callstack 0
  4770  00319A                     _strcpy:
  4771                           	opt callstack 25
  4772                           
  4773                           ;incstack = 0
  4774  00319A  C003  F007         	movff	strcpy@src,strcpy@s
  4775  00319E  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4776  0031A2  C001  F009         	movff	strcpy@dest,strcpy@d
  4777  0031A6  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4778  0031AA                     l3132:
  4779  0031AA  5007               	movf	strcpy@s,w,c
  4780  0031AC  6E05               	movwf	??_strcpy& (0+255),c
  4781  0031AE  5008               	movf	strcpy@s+1,w,c
  4782  0031B0  6E06               	movwf	(??_strcpy+1)& (0+255),c
  4783  0031B2  4A07               	infsnz	strcpy@s,f,c
  4784  0031B4  2A08               	incf	strcpy@s+1,f,c
  4785  0031B6  C005  FFF6         	movff	??_strcpy,tblptrl
  4786  0031BA  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4787  0031BE  6AF8               	clrf	tblptru,c
  4788  0031C0  C009  FFD9         	movff	strcpy@d,fsr2l
  4789  0031C4  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4790  0031C8  4A09               	infsnz	strcpy@d,f,c
  4791  0031CA  2A0A               	incf	strcpy@d+1,f,c
  4792  0031CC  0E07               	movlw	(high __ramtop+-1)
  4793  0031CE  64F7               	cpfsgt	tblptrh,c
  4794  0031D0  D003               	bra	u3307
  4795  0031D2  0008               	tblrd		*
  4796  0031D4  50F5               	movf	tablat,w,c
  4797  0031D6  D005               	bra	u3300
  4798  0031D8                     u3307:
  4799  0031D8  CFF6 FFE1          	movff	tblptrl,fsr1l
  4800  0031DC  CFF7 FFE2          	movff	tblptrh,fsr1h
  4801  0031E0  50E7               	movf	indf1,w,c
  4802  0031E2                     u3300:
  4803  0031E2  6EDF               	movwf	indf2,c
  4804  0031E4  50DF               	movf	indf2,w,c
  4805  0031E6  B4D8               	btfsc	status,2,c
  4806  0031E8  0012               	return	
  4807  0031EA  D7DF               	goto	l3132
  4808  0031EC                     __end_of_strcpy:
  4809                           	opt callstack 0
  4810                           
  4811 ;; *************** function _pad *****************
  4812 ;; Defined at:
  4813 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4816 ;;		 -> sprintf@f(6), 
  4817 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4818 ;;		 -> dbuf(80), 
  4819 ;;  p               2   20[COMRAM] int 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  w               2   25[COMRAM] int 
  4822 ;;  i               2   23[COMRAM] int 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  2   16[COMRAM] int 
  4825 ;; Registers used:
  4826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4832 ;;      Params:         6       0       0       0       0       0       0       0       0
  4833 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4834 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4835 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4836 ;;Total ram usage:       11 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    4
  4839 ;; This function calls:
  4840 ;;		_fputc
  4841 ;;		_fputs
  4842 ;;		_strlen
  4843 ;; This function is called by:
  4844 ;;		_efgtoa
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text11
  4849  002E60                     __ptext11:
  4850                           	opt callstack 0
  4851  002E60                     _pad:
  4852                           	opt callstack 22
  4853                           
  4854                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  4855                           
  4856                           ;incstack = 0
  4857  002E60  0100               	movlb	0	; () banked
  4858  002E62  A1F1               	btfss	_flags& (0+255),0,b
  4859  002E64  D00A               	goto	l3090
  4860                           
  4861                           ; BSR set to: 0
  4862                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  4863  002E66  C013  F00A         	movff	pad@buf,fputs@s
  4864  002E6A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4865  002E6E  C011  F00C         	movff	pad@fp,fputs@fp
  4866  002E72  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4867  002E76  ECAB  F019         	call	_fputs	;wreg free
  4868  002E7A                     l3090:
  4869                           
  4870                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4871  002E7A  BE16               	btfsc	pad@p+1,7,c
  4872  002E7C  D005               	goto	l3094
  4873  002E7E  C015  F01A         	movff	pad@p,pad@w
  4874  002E82  C016  F01B         	movff	pad@p+1,pad@w+1
  4875  002E86  D004               	goto	l193
  4876  002E88                     l3094:
  4877  002E88  0E00               	movlw	0
  4878  002E8A  6E1B               	movwf	pad@w+1,c
  4879  002E8C  0E00               	movlw	0
  4880  002E8E  6E1A               	movwf	pad@w,c
  4881  002E90                     l193:
  4882                           
  4883                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4884  002E90  0E00               	movlw	0
  4885  002E92  6E19               	movwf	pad@i+1,c
  4886  002E94  0E00               	movlw	0
  4887  002E96  6E18               	movwf	pad@i,c
  4888                           
  4889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4890  002E98  D00C               	goto	l3100
  4891  002E9A                     l3096:
  4892                           
  4893                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  4894  002E9A  0E00               	movlw	0
  4895  002E9C  6E02               	movwf	fputc@c+1,c
  4896  002E9E  0E20               	movlw	32
  4897  002EA0  6E01               	movwf	fputc@c,c
  4898  002EA2  C011  F003         	movff	pad@fp,fputc@fp
  4899  002EA6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4900  002EAA  ECE0  F016         	call	_fputc	;wreg free
  4901                           
  4902                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4903  002EAE  4A18               	infsnz	pad@i,f,c
  4904  002EB0  2A19               	incf	pad@i+1,f,c
  4905  002EB2                     l3100:
  4906                           
  4907                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4908  002EB2  501A               	movf	pad@w,w,c
  4909  002EB4  5C18               	subwf	pad@i,w,c
  4910  002EB6  5019               	movf	pad@i+1,w,c
  4911  002EB8  0A80               	xorlw	128
  4912  002EBA  6E17               	movwf	??_pad& (0+255),c
  4913  002EBC  501B               	movf	pad@w+1,w,c
  4914  002EBE  0A80               	xorlw	128
  4915  002EC0  5817               	subwfb	??_pad& (0+255),w,c
  4916  002EC2  A0D8               	btfss	status,0,c
  4917  002EC4  D7EA               	goto	l3096
  4918                           
  4919                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  4920  002EC6  0100               	movlb	0	; () banked
  4921  002EC8  B1F1               	btfsc	_flags& (0+255),0,b
  4922  002ECA  D00A               	goto	l3104
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  4926  002ECC  C013  F00A         	movff	pad@buf,fputs@s
  4927  002ED0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4928  002ED4  C011  F00C         	movff	pad@fp,fputs@fp
  4929  002ED8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4930  002EDC  ECAB  F019         	call	_fputs	;wreg free
  4931  002EE0                     l3104:
  4932                           
  4933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  4934  002EE0  C013  F001         	movff	pad@buf,strlen@s
  4935  002EE4  C014  F002         	movff	pad@buf+1,strlen@s+1
  4936  002EE8  EC5A  F01A         	call	_strlen	;wreg free
  4937  002EEC  501A               	movf	pad@w,w,c
  4938  002EEE  2401               	addwf	?_strlen,w,c
  4939  002EF0  6E11               	movwf	?_pad,c
  4940  002EF2  501B               	movf	pad@w+1,w,c
  4941  002EF4  2002               	addwfc	?_strlen+1,w,c
  4942  002EF6  6E12               	movwf	?_pad+1,c
  4943  002EF8  0012               	return		;funcret
  4944  002EFA                     __end_of_pad:
  4945                           	opt callstack 0
  4946                           
  4947 ;; *************** function _strlen *****************
  4948 ;; Defined at:
  4949 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4952 ;;		 -> dbuf(80), 
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4955 ;;		 -> dbuf(80), 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  2    0[COMRAM] unsigned int 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4965 ;;      Params:         2       0       0       0       0       0       0       0       0
  4966 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4968 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4969 ;;Total ram usage:        4 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    1
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_pad
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text12
  4980  0034B4                     __ptext12:
  4981                           	opt callstack 0
  4982  0034B4                     _strlen:
  4983                           	opt callstack 24
  4984                           
  4985                           ;incstack = 0
  4986  0034B4  C001  F003         	movff	strlen@s,strlen@a
  4987  0034B8  C002  F004         	movff	strlen@s+1,strlen@a+1
  4988  0034BC  D002               	goto	l2874
  4989  0034BE                     l2872:
  4990  0034BE  4A01               	infsnz	strlen@s,f,c
  4991  0034C0  2A02               	incf	strlen@s+1,f,c
  4992  0034C2                     l2874:
  4993  0034C2  C001  FFD9         	movff	strlen@s,fsr2l
  4994  0034C6  C002  FFDA         	movff	strlen@s+1,fsr2h
  4995  0034CA  50DF               	movf	indf2,w,c
  4996  0034CC  A4D8               	btfss	status,2,c
  4997  0034CE  D7F7               	goto	l2872
  4998  0034D0  5003               	movf	strlen@a,w,c
  4999  0034D2  5C01               	subwf	strlen@s,w,c
  5000  0034D4  6E01               	movwf	?_strlen,c
  5001  0034D6  5004               	movf	strlen@a+1,w,c
  5002  0034D8  5802               	subwfb	strlen@s+1,w,c
  5003  0034DA  6E02               	movwf	?_strlen+1,c
  5004  0034DC  0012               	return		;funcret
  5005  0034DE                     __end_of_strlen:
  5006                           	opt callstack 0
  5007                           
  5008 ;; *************** function _fputs *****************
  5009 ;; Defined at:
  5010 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5013 ;;		 -> dbuf(80), 
  5014 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5015 ;;		 -> sprintf@f(6), 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  i               2   14[COMRAM] int 
  5018 ;;  c               1   13[COMRAM] unsigned char 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  2    9[COMRAM] int 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5028 ;;      Params:         4       0       0       0       0       0       0       0       0
  5029 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5031 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5032 ;;Total ram usage:        7 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    3
  5035 ;; This function calls:
  5036 ;;		_fputc
  5037 ;; This function is called by:
  5038 ;;		_pad
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text13
  5043  003356                     __ptext13:
  5044                           	opt callstack 0
  5045  003356                     _fputs:
  5046                           	opt callstack 22
  5047                           
  5048                           ;incstack = 0
  5049  003356  0E00               	movlw	0
  5050  003358  6E10               	movwf	fputs@i+1,c
  5051  00335A  0E00               	movlw	0
  5052  00335C  6E0F               	movwf	fputs@i,c
  5053  00335E  D00B               	goto	l2868
  5054  003360                     l2864:
  5055  003360  C00E  F001         	movff	fputs@c,fputc@c
  5056  003364  6A02               	clrf	fputc@c+1,c
  5057  003366  C00C  F003         	movff	fputs@fp,fputc@fp
  5058  00336A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5059  00336E  ECE0  F016         	call	_fputc	;wreg free
  5060  003372  4A0F               	infsnz	fputs@i,f,c
  5061  003374  2A10               	incf	fputs@i+1,f,c
  5062  003376                     l2868:
  5063  003376  500F               	movf	fputs@i,w,c
  5064  003378  240A               	addwf	fputs@s,w,c
  5065  00337A  6ED9               	movwf	fsr2l,c
  5066  00337C  5010               	movf	fputs@i+1,w,c
  5067  00337E  200B               	addwfc	fputs@s+1,w,c
  5068  003380  6EDA               	movwf	fsr2h,c
  5069  003382  50DF               	movf	indf2,w,c
  5070  003384  6E0E               	movwf	fputs@c,c
  5071  003386  500E               	movf	fputs@c,w,c
  5072  003388  B4D8               	btfsc	status,2,c
  5073  00338A  0012               	return	
  5074  00338C  D7E9               	goto	l2864
  5075  00338E                     __end_of_fputs:
  5076                           	opt callstack 0
  5077                           
  5078 ;; *************** function _fputc *****************
  5079 ;; Defined at:
  5080 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  c               2    0[COMRAM] int 
  5083 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5084 ;;		 -> sprintf@f(6), 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  2    0[COMRAM] int 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5096 ;;      Params:         4       0       0       0       0       0       0       0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5098 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5099 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5100 ;;Total ram usage:        9 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    2
  5103 ;; This function calls:
  5104 ;;		_putch
  5105 ;; This function is called by:
  5106 ;;		_pad
  5107 ;;		_vfpfcnvrt
  5108 ;;		_fputs
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text14
  5113  002DC0                     __ptext14:
  5114                           	opt callstack 0
  5115  002DC0                     _fputc:
  5116                           	opt callstack 25
  5117                           
  5118                           ;incstack = 0
  5119  002DC0  5003               	movf	fputc@fp,w,c
  5120  002DC2  1004               	iorwf	fputc@fp+1,w,c
  5121  002DC4  B4D8               	btfsc	status,2,c
  5122  002DC6  D004               	goto	u2730
  5123  002DC8  5003               	movf	fputc@fp,w,c
  5124  002DCA  1004               	iorwf	fputc@fp+1,w,c
  5125  002DCC  A4D8               	btfss	status,2,c
  5126  002DCE  D004               	goto	l2854
  5127  002DD0                     u2730:
  5128  002DD0  5001               	movf	fputc@c,w,c
  5129  002DD2  ECE3  F01A         	call	_putch
  5130  002DD6  0012               	return	
  5131  002DD8                     l2854:
  5132  002DD8  EE20 F004          	lfsr	2,4
  5133  002DDC  5003               	movf	fputc@fp,w,c
  5134  002DDE  26D9               	addwf	fsr2l,f,c
  5135  002DE0  5004               	movf	fputc@fp+1,w,c
  5136  002DE2  22DA               	addwfc	fsr2h,f,c
  5137  002DE4  50DE               	movf	postinc2,w,c
  5138  002DE6  10DE               	iorwf	postinc2,w,c
  5139  002DE8  B4D8               	btfsc	status,2,c
  5140  002DEA  D016               	goto	u2750
  5141  002DEC  EE20 F004          	lfsr	2,4
  5142  002DF0  5003               	movf	fputc@fp,w,c
  5143  002DF2  26D9               	addwf	fsr2l,f,c
  5144  002DF4  5004               	movf	fputc@fp+1,w,c
  5145  002DF6  22DA               	addwfc	fsr2h,f,c
  5146  002DF8  EE10 F002          	lfsr	1,2
  5147  002DFC  5003               	movf	fputc@fp,w,c
  5148  002DFE  26E1               	addwf	fsr1l,f,c
  5149  002E00  5004               	movf	fputc@fp+1,w,c
  5150  002E02  22E2               	addwfc	fsr1h,f,c
  5151  002E04  50DE               	movf	postinc2,w,c
  5152  002E06  5CE6               	subwf	postinc1,w,c
  5153  002E08  50E6               	movf	postinc1,w,c
  5154  002E0A  0A80               	xorlw	128
  5155  002E0C  6E09               	movwf	(??_fputc+4)& (0+255),c
  5156  002E0E  50DE               	movf	postinc2,w,c
  5157  002E10  0A80               	xorlw	128
  5158  002E12  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  5159  002E14  B0D8               	btfsc	status,0,c
  5160  002E16  0012               	return	
  5161  002E18                     u2750:
  5162  002E18  EE20 F002          	lfsr	2,2
  5163  002E1C  5003               	movf	fputc@fp,w,c
  5164  002E1E  26D9               	addwf	fsr2l,f,c
  5165  002E20  5004               	movf	fputc@fp+1,w,c
  5166  002E22  22DA               	addwfc	fsr2h,f,c
  5167  002E24  CFDE F005          	movff	postinc2,??_fputc
  5168  002E28  CFDD F006          	movff	postdec2,??_fputc+1
  5169  002E2C  C003  FFD9         	movff	fputc@fp,fsr2l
  5170  002E30  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5171  002E34  CFDE F007          	movff	postinc2,??_fputc+2
  5172  002E38  CFDD F008          	movff	postdec2,??_fputc+3
  5173  002E3C  5005               	movf	??_fputc,w,c
  5174  002E3E  2407               	addwf	??_fputc+2,w,c
  5175  002E40  6ED9               	movwf	fsr2l,c
  5176  002E42  5006               	movf	??_fputc+1,w,c
  5177  002E44  2008               	addwfc	??_fputc+3,w,c
  5178  002E46  6EDA               	movwf	fsr2h,c
  5179  002E48  C001  FFDF         	movff	fputc@c,indf2
  5180  002E4C  EE20 F002          	lfsr	2,2
  5181  002E50  5003               	movf	fputc@fp,w,c
  5182  002E52  26D9               	addwf	fsr2l,f,c
  5183  002E54  5004               	movf	fputc@fp+1,w,c
  5184  002E56  22DA               	addwfc	fsr2h,f,c
  5185  002E58  2ADE               	incf	postinc2,f,c
  5186  002E5A  0E00               	movlw	0
  5187  002E5C  22DD               	addwfc	postdec2,f,c
  5188  002E5E  0012               	return		;funcret
  5189  002E60                     __end_of_fputc:
  5190                           	opt callstack 0
  5191                           
  5192 ;; *************** function _putch *****************
  5193 ;; Defined at:
  5194 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  c               1    wreg     unsigned char 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  c               1    0[COMRAM] unsigned char 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      void 
  5201 ;; Registers used:
  5202 ;;		wreg
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5208 ;;      Params:         0       0       0       0       0       0       0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5211 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5212 ;;Total ram usage:        0 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    1
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_fputc
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text15
  5223  0035C6                     __ptext15:
  5224                           	opt callstack 0
  5225  0035C6                     _putch:
  5226                           	opt callstack 25
  5227                           
  5228                           ;incstack = 0
  5229  0035C6  0012               	return		;funcret
  5230  0035C8                     __end_of_putch:
  5231                           	opt callstack 0
  5232                           
  5233 ;; *************** function _floorf *****************
  5234 ;; Defined at:
  5235 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  x               4   76[COMRAM] float 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  u               4    6[BANK0 ] struct .
  5240 ;;  m               4    0[BANK0 ] unsigned long 
  5241 ;;  e               2    4[BANK0 ] int 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  4   76[COMRAM] float 
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5251 ;;      Params:         4       0       0       0       0       0       0       0       0
  5252 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5253 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5254 ;;      Totals:        10      10       0       0       0       0       0       0       0
  5255 ;;Total ram usage:       20 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    1
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_efgtoa
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text16
  5266  00268C                     __ptext16:
  5267                           	opt callstack 0
  5268  00268C                     _floorf:
  5269                           	opt callstack 25
  5270                           
  5271                           ;incstack = 0
  5272  00268C  C10A  F066         	movff	floorf@F524,floorf@u
  5273  002690  C10B  F067         	movff	floorf@F524+1,floorf@u+1
  5274  002694  C10C  F068         	movff	floorf@F524+2,floorf@u+2
  5275  002698  C10D  F069         	movff	floorf@F524+3,floorf@u+3
  5276  00269C  C04D  F066         	movff	floorf@x,floorf@u
  5277  0026A0  C04E  F067         	movff	floorf@x+1,floorf@u+1
  5278  0026A4  C04F  F068         	movff	floorf@x+2,floorf@u+2
  5279  0026A8  C050  F069         	movff	floorf@x+3,floorf@u+3
  5280  0026AC  0E81               	movlw	129
  5281  0026AE  6E51               	movwf	??_floorf& (0+255),c
  5282  0026B0  0EFF               	movlw	255
  5283  0026B2  6E52               	movwf	(??_floorf+1)& (0+255),c
  5284  0026B4  C066  F053         	movff	floorf@u,??_floorf+2
  5285  0026B8  C067  F054         	movff	floorf@u+1,??_floorf+3
  5286  0026BC  C068  F055         	movff	floorf@u+2,??_floorf+4
  5287  0026C0  C069  F056         	movff	floorf@u+3,??_floorf+5
  5288  0026C4  0E18               	movlw	24
  5289  0026C6  D005               	goto	u3350
  5290  0026C8                     u3355:
  5291  0026C8  90D8               	bcf	status,0,c
  5292  0026CA  3256               	rrcf	??_floorf+5,f,c
  5293  0026CC  3255               	rrcf	??_floorf+4,f,c
  5294  0026CE  3254               	rrcf	??_floorf+3,f,c
  5295  0026D0  3253               	rrcf	??_floorf+2,f,c
  5296  0026D2                     u3350:
  5297  0026D2  2EE8               	decfsz	wreg,f,c
  5298  0026D4  D7F9               	goto	u3355
  5299  0026D6  5053               	movf	??_floorf+2,w,c
  5300  0026D8  2451               	addwf	??_floorf,w,c
  5301  0026DA  0100               	movlb	0	; () banked
  5302  0026DC  6F64               	movwf	floorf@e& (0+255),b
  5303  0026DE  0E00               	movlw	0
  5304  0026E0  2052               	addwfc	??_floorf+1,w,c
  5305  0026E2  6F65               	movwf	(floorf@e+1)& (0+255),b
  5306  0026E4  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  5307  0026E6  D00F               	goto	l3150
  5308  0026E8  5165               	movf	(floorf@e+1)& (0+255),w,b
  5309  0026EA  E104               	bnz	u3360
  5310  0026EC  0E17               	movlw	23
  5311  0026EE  5D64               	subwf	floorf@e& (0+255),w,b
  5312  0026F0  A0D8               	btfss	status,0,c
  5313  0026F2  D009               	goto	l3150
  5314  0026F4                     u3360:
  5315                           
  5316                           ; BSR set to: 0
  5317  0026F4  C04D  F04D         	movff	floorf@x,?_floorf
  5318  0026F8  C04E  F04E         	movff	floorf@x+1,?_floorf+1
  5319  0026FC  C04F  F04F         	movff	floorf@x+2,?_floorf+2
  5320  002700  C050  F050         	movff	floorf@x+3,?_floorf+3
  5321  002704  0012               	return	
  5322  002706                     l3150:
  5323                           
  5324                           ; BSR set to: 0
  5325  002706  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  5326  002708  D05F               	goto	l3160
  5327                           
  5328                           ; BSR set to: 0
  5329  00270A  C064  F051         	movff	floorf@e,??_floorf
  5330  00270E  0EFF               	movlw	255
  5331  002710  6E52               	movwf	(??_floorf+1)& (0+255),c
  5332  002712  0EFF               	movlw	255
  5333  002714  6E53               	movwf	(??_floorf+2)& (0+255),c
  5334  002716  0E7F               	movlw	127
  5335  002718  6E54               	movwf	(??_floorf+3)& (0+255),c
  5336  00271A  0E00               	movlw	0
  5337  00271C  6E55               	movwf	(??_floorf+4)& (0+255),c
  5338  00271E                     u3385:
  5339  00271E  6651               	tstfsz	??_floorf,c
  5340  002720  D001               	goto	u3386
  5341  002722  D007               	goto	u3387
  5342  002724                     u3386:
  5343  002724  3455               	rlcf	??_floorf+4,w,c
  5344  002726  3255               	rrcf	??_floorf+4,f,c
  5345  002728  3254               	rrcf	??_floorf+3,f,c
  5346  00272A  3253               	rrcf	??_floorf+2,f,c
  5347  00272C  3252               	rrcf	??_floorf+1,f,c
  5348  00272E  2E51               	decfsz	??_floorf,f,c
  5349  002730  D7F6               	goto	u3385
  5350  002732                     u3387:
  5351  002732  C052  F060         	movff	??_floorf+1,floorf@m
  5352  002736  C053  F061         	movff	??_floorf+2,floorf@m+1
  5353  00273A  C054  F062         	movff	??_floorf+3,floorf@m+2
  5354  00273E  C055  F063         	movff	??_floorf+4,floorf@m+3
  5355  002742  0100               	movlb	0	; () banked
  5356  002744  5160               	movf	floorf@m& (0+255),w,b
  5357  002746  1566               	andwf	floorf@u& (0+255),w,b
  5358  002748  6E51               	movwf	??_floorf& (0+255),c
  5359  00274A  5161               	movf	(floorf@m+1)& (0+255),w,b
  5360  00274C  1567               	andwf	(floorf@u+1)& (0+255),w,b
  5361  00274E  6E52               	movwf	(??_floorf+1)& (0+255),c
  5362  002750  5162               	movf	(floorf@m+2)& (0+255),w,b
  5363  002752  1568               	andwf	(floorf@u+2)& (0+255),w,b
  5364  002754  6E53               	movwf	(??_floorf+2)& (0+255),c
  5365  002756  5163               	movf	(floorf@m+3)& (0+255),w,b
  5366  002758  1569               	andwf	(floorf@u+3)& (0+255),w,b
  5367  00275A  6E54               	movwf	(??_floorf+3)& (0+255),c
  5368  00275C  5051               	movf	??_floorf,w,c
  5369  00275E  1052               	iorwf	??_floorf+1,w,c
  5370  002760  1053               	iorwf	??_floorf+2,w,c
  5371  002762  1054               	iorwf	??_floorf+3,w,c
  5372  002764  B4D8               	btfsc	status,2,c
  5373  002766  D7C6               	goto	u3360
  5374                           
  5375                           ; BSR set to: 0
  5376  002768  C066  F051         	movff	floorf@u,??_floorf
  5377  00276C  C067  F052         	movff	floorf@u+1,??_floorf+1
  5378  002770  C068  F053         	movff	floorf@u+2,??_floorf+2
  5379  002774  C069  F054         	movff	floorf@u+3,??_floorf+3
  5380  002778  0E20               	movlw	32
  5381  00277A  D005               	goto	u3400
  5382  00277C                     u3405:
  5383  00277C  90D8               	bcf	status,0,c
  5384  00277E  3254               	rrcf	??_floorf+3,f,c
  5385  002780  3253               	rrcf	??_floorf+2,f,c
  5386  002782  3252               	rrcf	??_floorf+1,f,c
  5387  002784  3251               	rrcf	??_floorf,f,c
  5388  002786                     u3400:
  5389  002786  2EE8               	decfsz	wreg,f,c
  5390  002788  D7F9               	goto	u3405
  5391  00278A  5051               	movf	??_floorf,w,c
  5392  00278C  1052               	iorwf	??_floorf+1,w,c
  5393  00278E  1053               	iorwf	??_floorf+2,w,c
  5394  002790  1054               	iorwf	??_floorf+3,w,c
  5395  002792  B4D8               	btfsc	status,2,c
  5396  002794  D008               	goto	l1057
  5397                           
  5398                           ; BSR set to: 0
  5399  002796  5160               	movf	floorf@m& (0+255),w,b
  5400  002798  2766               	addwf	floorf@u& (0+255),f,b
  5401  00279A  5161               	movf	(floorf@m+1)& (0+255),w,b
  5402  00279C  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  5403  00279E  5162               	movf	(floorf@m+2)& (0+255),w,b
  5404  0027A0  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  5405  0027A2  5163               	movf	(floorf@m+3)& (0+255),w,b
  5406  0027A4  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  5407  0027A6                     l1057:
  5408                           
  5409                           ; BSR set to: 0
  5410  0027A6  1D60               	comf	floorf@m& (0+255),w,b
  5411  0027A8  6E51               	movwf	??_floorf& (0+255),c
  5412  0027AA  1D61               	comf	(floorf@m+1)& (0+255),w,b
  5413  0027AC  6E52               	movwf	(??_floorf+1)& (0+255),c
  5414  0027AE  1D62               	comf	(floorf@m+2)& (0+255),w,b
  5415  0027B0  6E53               	movwf	(??_floorf+2)& (0+255),c
  5416  0027B2  1D63               	comf	(floorf@m+3)& (0+255),w,b
  5417  0027B4  6E54               	movwf	(??_floorf+3)& (0+255),c
  5418  0027B6  5051               	movf	??_floorf,w,c
  5419  0027B8  1766               	andwf	floorf@u& (0+255),f,b
  5420  0027BA  5052               	movf	??_floorf+1,w,c
  5421  0027BC  1767               	andwf	(floorf@u+1)& (0+255),f,b
  5422  0027BE  5053               	movf	??_floorf+2,w,c
  5423  0027C0  1768               	andwf	(floorf@u+2)& (0+255),f,b
  5424  0027C2  5054               	movf	??_floorf+3,w,c
  5425  0027C4  1769               	andwf	(floorf@u+3)& (0+255),f,b
  5426  0027C6  D036               	goto	l3168
  5427  0027C8                     l3160:
  5428                           
  5429                           ; BSR set to: 0
  5430  0027C8  C066  F051         	movff	floorf@u,??_floorf
  5431  0027CC  C067  F052         	movff	floorf@u+1,??_floorf+1
  5432  0027D0  C068  F053         	movff	floorf@u+2,??_floorf+2
  5433  0027D4  C069  F054         	movff	floorf@u+3,??_floorf+3
  5434  0027D8  0E20               	movlw	32
  5435  0027DA  D005               	goto	u3420
  5436  0027DC                     u3425:
  5437  0027DC  90D8               	bcf	status,0,c
  5438  0027DE  3254               	rrcf	??_floorf+3,f,c
  5439  0027E0  3253               	rrcf	??_floorf+2,f,c
  5440  0027E2  3252               	rrcf	??_floorf+1,f,c
  5441  0027E4  3251               	rrcf	??_floorf,f,c
  5442  0027E6                     u3420:
  5443  0027E6  2EE8               	decfsz	wreg,f,c
  5444  0027E8  D7F9               	goto	u3425
  5445  0027EA  5051               	movf	??_floorf,w,c
  5446  0027EC  1052               	iorwf	??_floorf+1,w,c
  5447  0027EE  1053               	iorwf	??_floorf+2,w,c
  5448  0027F0  1054               	iorwf	??_floorf+3,w,c
  5449  0027F2  A4D8               	btfss	status,2,c
  5450  0027F4  D008               	goto	l3164
  5451                           
  5452                           ; BSR set to: 0
  5453  0027F6  0E00               	movlw	0
  5454  0027F8  6F66               	movwf	floorf@u& (0+255),b
  5455  0027FA  0E00               	movlw	0
  5456  0027FC  6F67               	movwf	(floorf@u+1)& (0+255),b
  5457  0027FE  0E00               	movlw	0
  5458  002800  6F68               	movwf	(floorf@u+2)& (0+255),b
  5459  002802  0E00               	movlw	0
  5460  002804  D016               	goto	L8
  5461  002806                     l3164:
  5462                           
  5463                           ; BSR set to: 0
  5464  002806  90D8               	bcf	status,0,c
  5465  002808  3566               	rlcf	floorf@u& (0+255),w,b
  5466  00280A  6E51               	movwf	??_floorf& (0+255),c
  5467  00280C  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  5468  00280E  6E52               	movwf	(??_floorf+1)& (0+255),c
  5469  002810  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  5470  002812  6E53               	movwf	(??_floorf+2)& (0+255),c
  5471  002814  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  5472  002816  6E54               	movwf	(??_floorf+3)& (0+255),c
  5473  002818  5051               	movf	??_floorf,w,c
  5474  00281A  1052               	iorwf	??_floorf+1,w,c
  5475  00281C  1053               	iorwf	??_floorf+2,w,c
  5476  00281E  1054               	iorwf	??_floorf+3,w,c
  5477  002820  B4D8               	btfsc	status,2,c
  5478  002822  D008               	goto	l3168
  5479                           
  5480                           ; BSR set to: 0
  5481  002824  0E00               	movlw	0
  5482  002826  6F66               	movwf	floorf@u& (0+255),b
  5483  002828  0E00               	movlw	0
  5484  00282A  6F67               	movwf	(floorf@u+1)& (0+255),b
  5485  00282C  0E80               	movlw	128
  5486  00282E  6F68               	movwf	(floorf@u+2)& (0+255),b
  5487  002830  0EBF               	movlw	191
  5488  002832                     L8:
  5489  002832  6F69               	movwf	(floorf@u+3)& (0+255),b
  5490  002834                     l3168:
  5491                           
  5492                           ; BSR set to: 0
  5493  002834  C066  F04D         	movff	floorf@u,?_floorf
  5494  002838  C067  F04E         	movff	floorf@u+1,?_floorf+1
  5495  00283C  C068  F04F         	movff	floorf@u+2,?_floorf+2
  5496  002840  C069  F050         	movff	floorf@u+3,?_floorf+3
  5497                           
  5498                           ; BSR set to: 0
  5499  002844  0012               	return		;funcret
  5500  002846                     __end_of_floorf:
  5501                           	opt callstack 0
  5502                           
  5503 ;; *************** function ___fpclassifyf *****************
  5504 ;; Defined at:
  5505 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  x               4    0[COMRAM] float 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  u               4   10[COMRAM] struct .
  5510 ;;  e               2    8[COMRAM] int 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  2    0[COMRAM] int 
  5513 ;; Registers used:
  5514 ;;		wreg, status,2, status,0
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5520 ;;      Params:         4       0       0       0       0       0       0       0       0
  5521 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5522 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5523 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5524 ;;Total ram usage:       14 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    1
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		_efgtoa
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text17
  5535  002B96                     __ptext17:
  5536                           	opt callstack 0
  5537  002B96                     ___fpclassifyf:
  5538                           	opt callstack 25
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;incstack = 0
  5542  002B96  C10E  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5543  002B9A  C10F  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5544  002B9E  C110  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5545  002BA2  C111  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5546  002BA6  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5547  002BAA  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5548  002BAE  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5549  002BB2  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5550  002BB6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5551  002BBA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5552  002BBE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5553  002BC2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5554  002BC6  0E18               	movlw	24
  5555  002BC8  D005               	goto	u3230
  5556  002BCA                     u3235:
  5557  002BCA  90D8               	bcf	status,0,c
  5558  002BCC  3208               	rrcf	??___fpclassifyf+3,f,c
  5559  002BCE  3207               	rrcf	??___fpclassifyf+2,f,c
  5560  002BD0  3206               	rrcf	??___fpclassifyf+1,f,c
  5561  002BD2  3205               	rrcf	??___fpclassifyf,f,c
  5562  002BD4                     u3230:
  5563  002BD4  2EE8               	decfsz	wreg,f,c
  5564  002BD6  D7F9               	goto	u3235
  5565  002BD8  5005               	movf	??___fpclassifyf,w,c
  5566  002BDA  6E09               	movwf	___fpclassifyf@e,c
  5567  002BDC  6A0A               	clrf	___fpclassifyf@e+1,c
  5568  002BDE  5009               	movf	___fpclassifyf@e,w,c
  5569  002BE0  100A               	iorwf	___fpclassifyf@e+1,w,c
  5570  002BE2  A4D8               	btfss	status,2,c
  5571  002BE4  D019               	goto	l3120
  5572  002BE6  90D8               	bcf	status,0,c
  5573  002BE8  340B               	rlcf	___fpclassifyf@u,w,c
  5574  002BEA  6E05               	movwf	??___fpclassifyf& (0+255),c
  5575  002BEC  340C               	rlcf	___fpclassifyf@u+1,w,c
  5576  002BEE  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
  5577  002BF0  340D               	rlcf	___fpclassifyf@u+2,w,c
  5578  002BF2  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
  5579  002BF4  340E               	rlcf	___fpclassifyf@u+3,w,c
  5580  002BF6  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
  5581  002BF8  5005               	movf	??___fpclassifyf,w,c
  5582  002BFA  1006               	iorwf	??___fpclassifyf+1,w,c
  5583  002BFC  1007               	iorwf	??___fpclassifyf+2,w,c
  5584  002BFE  1008               	iorwf	??___fpclassifyf+3,w,c
  5585  002C00  A4D8               	btfss	status,2,c
  5586  002C02  D005               	goto	l3116
  5587  002C04  0E00               	movlw	0
  5588  002C06  6E02               	movwf	?___fpclassifyf+1,c
  5589  002C08  0E02               	movlw	2
  5590  002C0A  6E01               	movwf	?___fpclassifyf,c
  5591  002C0C  0012               	return	
  5592  002C0E                     l3116:
  5593  002C0E  0E00               	movlw	0
  5594  002C10  6E02               	movwf	?___fpclassifyf+1,c
  5595  002C12  0E03               	movlw	3
  5596  002C14  6E01               	movwf	?___fpclassifyf,c
  5597  002C16  0012               	return	
  5598  002C18                     l3120:
  5599  002C18  2809               	incf	___fpclassifyf@e,w,c
  5600  002C1A  100A               	iorwf	___fpclassifyf@e+1,w,c
  5601  002C1C  A4D8               	btfss	status,2,c
  5602  002C1E  D01C               	goto	l3126
  5603  002C20  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5604  002C24  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5605  002C28  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5606  002C2C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5607  002C30  0E09               	movlw	9
  5608  002C32                     u3275:
  5609  002C32  90D8               	bcf	status,0,c
  5610  002C34  3605               	rlcf	??___fpclassifyf,f,c
  5611  002C36  3606               	rlcf	??___fpclassifyf+1,f,c
  5612  002C38  3607               	rlcf	??___fpclassifyf+2,f,c
  5613  002C3A  3608               	rlcf	??___fpclassifyf+3,f,c
  5614  002C3C  2EE8               	decfsz	wreg,f,c
  5615  002C3E  D7F9               	goto	u3275
  5616  002C40  5005               	movf	??___fpclassifyf,w,c
  5617  002C42  1006               	iorwf	??___fpclassifyf+1,w,c
  5618  002C44  1007               	iorwf	??___fpclassifyf+2,w,c
  5619  002C46  1008               	iorwf	??___fpclassifyf+3,w,c
  5620  002C48  A4D8               	btfss	status,2,c
  5621  002C4A  D002               	goto	u3280
  5622  002C4C  0E01               	movlw	1
  5623  002C4E  D001               	goto	u3290
  5624  002C50                     u3280:
  5625  002C50  0E00               	movlw	0
  5626  002C52                     u3290:
  5627  002C52  6E01               	movwf	?___fpclassifyf,c
  5628  002C54  6A02               	clrf	?___fpclassifyf+1,c
  5629  002C56  0012               	return	
  5630  002C58                     l3126:
  5631  002C58  0E00               	movlw	0
  5632  002C5A  6E02               	movwf	?___fpclassifyf+1,c
  5633  002C5C  0E04               	movlw	4
  5634  002C5E  6E01               	movwf	?___fpclassifyf,c
  5635  002C60  0012               	return		;funcret
  5636  002C62                     __end_of___fpclassifyf:
  5637                           	opt callstack 0
  5638                           
  5639 ;; *************** function ___fltol *****************
  5640 ;; Defined at:
  5641 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  f1              4    0[BANK0 ] int 
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;  exp1            1   93[COMRAM] unsigned char 
  5646 ;;  sign1           1   92[COMRAM] unsigned char 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  4    0[BANK0 ] long 
  5649 ;; Registers used:
  5650 ;;		wreg, status,2, status,0
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5656 ;;      Params:         0       4       0       0       0       0       0       0       0
  5657 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5658 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5659 ;;      Totals:         2       8       0       0       0       0       0       0       0
  5660 ;;Total ram usage:       10 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; Hardware stack levels required when called:    1
  5663 ;; This function calls:
  5664 ;;		Nothing
  5665 ;; This function is called by:
  5666 ;;		_main
  5667 ;;		_efgtoa
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text18
  5672  002C62                     __ptext18:
  5673                           	opt callstack 0
  5674  002C62                     ___fltol:
  5675                           	opt callstack 25
  5676                           
  5677                           ;incstack = 0
  5678  002C62  0100               	movlb	0	; () banked
  5679  002C64  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5680  002C66  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5681  002C68  6E5E               	movwf	___fltol@exp1,c
  5682  002C6A  505E               	movf	___fltol@exp1,w,c
  5683  002C6C  A4D8               	btfss	status,2,c
  5684  002C6E  D009               	goto	l3588
  5685  002C70                     u4100:
  5686                           
  5687                           ; BSR set to: 0
  5688  002C70  0E00               	movlw	0
  5689  002C72  6F60               	movwf	?___fltol& (0+255),b
  5690  002C74  0E00               	movlw	0
  5691  002C76  6F61               	movwf	(?___fltol+1)& (0+255),b
  5692  002C78  0E00               	movlw	0
  5693  002C7A  6F62               	movwf	(?___fltol+2)& (0+255),b
  5694  002C7C  0E00               	movlw	0
  5695  002C7E  6F63               	movwf	(?___fltol+3)& (0+255),b
  5696  002C80  0012               	return	
  5697  002C82                     l3588:
  5698                           
  5699                           ; BSR set to: 0
  5700  002C82  C060  F064         	movff	___fltol@f1,??___fltol
  5701  002C86  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  5702  002C8A  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  5703  002C8E  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  5704  002C92  0E20               	movlw	32
  5705  002C94  D005               	goto	u4110
  5706  002C96                     u4115:
  5707  002C96  90D8               	bcf	status,0,c
  5708  002C98  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  5709  002C9A  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  5710  002C9C  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  5711  002C9E  3364               	rrcf	??___fltol& (0+255),f,b
  5712  002CA0                     u4110:
  5713  002CA0  2EE8               	decfsz	wreg,f,c
  5714  002CA2  D7F9               	goto	u4115
  5715  002CA4  5164               	movf	??___fltol& (0+255),w,b
  5716  002CA6  6E5D               	movwf	___fltol@sign1,c
  5717                           
  5718                           ; BSR set to: 0
  5719  002CA8  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  5720                           
  5721                           ; BSR set to: 0
  5722  002CAA  0EFF               	movlw	255
  5723  002CAC  1760               	andwf	___fltol@f1& (0+255),f,b
  5724  002CAE  0EFF               	movlw	255
  5725  002CB0  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  5726  002CB2  0EFF               	movlw	255
  5727  002CB4  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  5728  002CB6  0E00               	movlw	0
  5729  002CB8  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  5730                           
  5731                           ; BSR set to: 0
  5732  002CBA  0E96               	movlw	150
  5733  002CBC  5E5E               	subwf	___fltol@exp1,f,c
  5734                           
  5735                           ; BSR set to: 0
  5736  002CBE  AE5E               	btfss	___fltol@exp1,7,c
  5737  002CC0  D00D               	goto	l3608
  5738                           
  5739                           ; BSR set to: 0
  5740  002CC2  505E               	movf	___fltol@exp1,w,c
  5741  002CC4  0A80               	xorlw	128
  5742  002CC6  0F97               	addlw	151
  5743  002CC8  A0D8               	btfss	status,0,c
  5744  002CCA  D7D2               	goto	u4100
  5745  002CCC                     l3604:
  5746                           
  5747                           ; BSR set to: 0
  5748  002CCC  90D8               	bcf	status,0,c
  5749  002CCE  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5750  002CD0  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5751  002CD2  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5752  002CD4  3360               	rrcf	___fltol@f1& (0+255),f,b
  5753                           
  5754                           ; BSR set to: 0
  5755  002CD6  3E5E               	incfsz	___fltol@exp1,f,c
  5756  002CD8  D7F9               	goto	l3604
  5757  002CDA  D00D               	goto	u4150
  5758  002CDC                     l3608:
  5759                           
  5760                           ; BSR set to: 0
  5761  002CDC  0E1F               	movlw	31
  5762  002CDE  645E               	cpfsgt	___fltol@exp1,c
  5763  002CE0  D007               	goto	l3616
  5764  002CE2  D7C6               	goto	u4100
  5765  002CE4                     l3614:
  5766                           
  5767                           ; BSR set to: 0
  5768  002CE4  90D8               	bcf	status,0,c
  5769  002CE6  3760               	rlcf	___fltol@f1& (0+255),f,b
  5770  002CE8  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5771  002CEA  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5772  002CEC  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5773  002CEE  065E               	decf	___fltol@exp1,f,c
  5774  002CF0                     l3616:
  5775                           
  5776                           ; BSR set to: 0
  5777  002CF0  505E               	movf	___fltol@exp1,w,c
  5778  002CF2  A4D8               	btfss	status,2,c
  5779  002CF4  D7F7               	goto	l3614
  5780  002CF6                     u4150:
  5781                           
  5782                           ; BSR set to: 0
  5783  002CF6  505D               	movf	___fltol@sign1,w,c
  5784  002CF8  B4D8               	btfsc	status,2,c
  5785  002CFA  D008               	goto	l3622
  5786                           
  5787                           ; BSR set to: 0
  5788  002CFC  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  5789  002CFE  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  5790  002D00  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  5791  002D02  6D60               	negf	___fltol@f1& (0+255),b
  5792  002D04  0E00               	movlw	0
  5793  002D06  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5794  002D08  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5795  002D0A  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5796  002D0C                     l3622:
  5797                           
  5798                           ; BSR set to: 0
  5799  002D0C  C060  F060         	movff	___fltol@f1,?___fltol
  5800  002D10  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  5801  002D14  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  5802  002D18  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  5803                           
  5804                           ; BSR set to: 0
  5805  002D1C  0012               	return		;funcret
  5806  002D1E                     __end_of___fltol:
  5807                           	opt callstack 0
  5808                           
  5809 ;; *************** function ___flsub *****************
  5810 ;; Defined at:
  5811 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  b               4    0[BANK0 ] long 
  5814 ;;  a               4    4[BANK0 ] long 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;		None
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  4    0[BANK0 ] long 
  5819 ;; Registers used:
  5820 ;;		wreg, status,2, status,0, cstack
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5826 ;;      Params:         0       8       0       0       0       0       0       0       0
  5827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5829 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5830 ;;Total ram usage:        8 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; Hardware stack levels required when called:    2
  5833 ;; This function calls:
  5834 ;;		___fladd
  5835 ;; This function is called by:
  5836 ;;		_efgtoa
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text19
  5841  0032D0                     __ptext19:
  5842                           	opt callstack 0
  5843  0032D0                     ___flsub:
  5844                           	opt callstack 24
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;incstack = 0
  5848  0032D0  0E00               	movlw	0
  5849  0032D2  0100               	movlb	0	; () banked
  5850  0032D4  1B64               	xorwf	___flsub@a& (0+255),f,b
  5851  0032D6  0E00               	movlw	0
  5852  0032D8  1B65               	xorwf	(___flsub@a+1)& (0+255),f,b
  5853  0032DA  0E00               	movlw	0
  5854  0032DC  1B66               	xorwf	(___flsub@a+2)& (0+255),f,b
  5855  0032DE  0E80               	movlw	128
  5856  0032E0  1B67               	xorwf	(___flsub@a+3)& (0+255),f,b
  5857                           
  5858                           ; BSR set to: 0
  5859  0032E2  C060  F04D         	movff	___flsub@b,___fladd@b
  5860  0032E6  C061  F04E         	movff	___flsub@b+1,___fladd@b+1
  5861  0032EA  C062  F04F         	movff	___flsub@b+2,___fladd@b+2
  5862  0032EE  C063  F050         	movff	___flsub@b+3,___fladd@b+3
  5863  0032F2  C064  F051         	movff	___flsub@a,___fladd@a
  5864  0032F6  C065  F052         	movff	___flsub@a+1,___fladd@a+1
  5865  0032FA  C066  F053         	movff	___flsub@a+2,___fladd@a+2
  5866  0032FE  C067  F054         	movff	___flsub@a+3,___fladd@a+3
  5867  003302  EC7C  F010         	call	___fladd	;wreg free
  5868  003306  C04D  F060         	movff	?___fladd,?___flsub
  5869  00330A  C04E  F061         	movff	?___fladd+1,?___flsub+1
  5870  00330E  C04F  F062         	movff	?___fladd+2,?___flsub+2
  5871  003312  C050  F063         	movff	?___fladd+3,?___flsub+3
  5872  003316  0012               	return		;funcret
  5873  003318                     __end_of___flsub:
  5874                           	opt callstack 0
  5875                           
  5876 ;; *************** function ___fladd *****************
  5877 ;; Defined at:
  5878 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  b               4   76[COMRAM] long 
  5881 ;;  a               4   80[COMRAM] long 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;  grs             1   91[COMRAM] unsigned char 
  5884 ;;  bexp            1   90[COMRAM] unsigned char 
  5885 ;;  aexp            1   89[COMRAM] unsigned char 
  5886 ;;  signs           1   88[COMRAM] unsigned char 
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  4   76[COMRAM] unsigned char 
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5896 ;;      Params:         8       0       0       0       0       0       0       0       0
  5897 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5898 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5899 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5900 ;;Total ram usage:       16 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    1
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_main
  5907 ;;		_efgtoa
  5908 ;;		___flsub
  5909 ;;		_sqrtf
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text20
  5914  0020F8                     __ptext20:
  5915                           	opt callstack 0
  5916  0020F8                     ___fladd:
  5917                           	opt callstack 28
  5918                           
  5919                           ;incstack = 0
  5920  0020F8  5050               	movf	___fladd@b+3,w,c
  5921  0020FA  0B80               	andlw	128
  5922  0020FC  6E59               	movwf	___fladd@signs,c
  5923  0020FE  5050               	movf	___fladd@b+3,w,c
  5924  002100  2450               	addwf	___fladd@b+3,w,c
  5925  002102  6E5B               	movwf	___fladd@bexp,c
  5926  002104  BE4F               	btfsc	___fladd@b+2,7,c
  5927  002106  805B               	bsf	___fladd@bexp,0,c
  5928  002108  505B               	movf	___fladd@bexp,w,c
  5929  00210A  B4D8               	btfsc	status,2,c
  5930  00210C  D00D               	goto	l2900
  5931  00210E  285B               	incf	___fladd@bexp,w,c
  5932  002110  A4D8               	btfss	status,2,c
  5933  002112  D008               	goto	l2896
  5934  002114  0E00               	movlw	0
  5935  002116  6E4D               	movwf	___fladd@b,c
  5936  002118  0E00               	movlw	0
  5937  00211A  6E4E               	movwf	___fladd@b+1,c
  5938  00211C  0E00               	movlw	0
  5939  00211E  6E4F               	movwf	___fladd@b+2,c
  5940  002120  0E00               	movlw	0
  5941  002122  6E50               	movwf	___fladd@b+3,c
  5942  002124                     l2896:
  5943  002124  8E4F               	bsf	___fladd@b+2,7,c
  5944  002126  D006               	goto	L9
  5945  002128                     l2900:
  5946  002128  0E00               	movlw	0
  5947  00212A  6E4D               	movwf	___fladd@b,c
  5948  00212C  0E00               	movlw	0
  5949  00212E  6E4E               	movwf	___fladd@b+1,c
  5950  002130  0E00               	movlw	0
  5951  002132  6E4F               	movwf	___fladd@b+2,c
  5952  002134                     L9:
  5953  002134  0E00               	movlw	0
  5954  002136  6E50               	movwf	___fladd@b+3,c
  5955  002138  5054               	movf	___fladd@a+3,w,c
  5956  00213A  0B80               	andlw	128
  5957  00213C  6E5A               	movwf	___fladd@aexp,c
  5958  00213E  5059               	movf	___fladd@signs,w,c
  5959  002140  185A               	xorwf	___fladd@aexp,w,c
  5960  002142  A4D8               	btfss	status,2,c
  5961  002144  8C59               	bsf	___fladd@signs,6,c
  5962  002146  5054               	movf	___fladd@a+3,w,c
  5963  002148  2454               	addwf	___fladd@a+3,w,c
  5964  00214A  6E5A               	movwf	___fladd@aexp,c
  5965  00214C  BE53               	btfsc	___fladd@a+2,7,c
  5966  00214E  805A               	bsf	___fladd@aexp,0,c
  5967  002150  505A               	movf	___fladd@aexp,w,c
  5968  002152  B4D8               	btfsc	status,2,c
  5969  002154  D00D               	goto	l2924
  5970  002156  285A               	incf	___fladd@aexp,w,c
  5971  002158  A4D8               	btfss	status,2,c
  5972  00215A  D008               	goto	l2920
  5973  00215C  0E00               	movlw	0
  5974  00215E  6E51               	movwf	___fladd@a,c
  5975  002160  0E00               	movlw	0
  5976  002162  6E52               	movwf	___fladd@a+1,c
  5977  002164  0E00               	movlw	0
  5978  002166  6E53               	movwf	___fladd@a+2,c
  5979  002168  0E00               	movlw	0
  5980  00216A  6E54               	movwf	___fladd@a+3,c
  5981  00216C                     l2920:
  5982  00216C  8E53               	bsf	___fladd@a+2,7,c
  5983  00216E  D006               	goto	L10
  5984  002170                     l2924:
  5985  002170  0E00               	movlw	0
  5986  002172  6E51               	movwf	___fladd@a,c
  5987  002174  0E00               	movlw	0
  5988  002176  6E52               	movwf	___fladd@a+1,c
  5989  002178  0E00               	movlw	0
  5990  00217A  6E53               	movwf	___fladd@a+2,c
  5991  00217C                     L10:
  5992  00217C  0E00               	movlw	0
  5993  00217E  6E54               	movwf	___fladd@a+3,c
  5994  002180  505B               	movf	___fladd@bexp,w,c
  5995  002182  5C5A               	subwf	___fladd@aexp,w,c
  5996  002184  B0D8               	btfsc	status,0,c
  5997  002186  D022               	goto	l2962
  5998  002188  AC59               	btfss	___fladd@signs,6,c
  5999  00218A  D002               	goto	l2932
  6000  00218C  0E80               	movlw	128
  6001  00218E  1A59               	xorwf	___fladd@signs,f,c
  6002  002190                     l2932:
  6003  002190  C05B  F05C         	movff	___fladd@bexp,___fladd@grs
  6004  002194  C05A  F05B         	movff	___fladd@aexp,___fladd@bexp
  6005  002198  C05C  F05A         	movff	___fladd@grs,___fladd@aexp
  6006  00219C  C04D  F05C         	movff	___fladd@b,___fladd@grs
  6007  0021A0  C051  F04D         	movff	___fladd@a,___fladd@b
  6008  0021A4  C05C  F051         	movff	___fladd@grs,___fladd@a
  6009  0021A8  C04E  F05C         	movff	___fladd@b+1,___fladd@grs
  6010  0021AC  C052  F04E         	movff	___fladd@a+1,___fladd@b+1
  6011  0021B0  C05C  F052         	movff	___fladd@grs,___fladd@a+1
  6012  0021B4  C04F  F05C         	movff	___fladd@b+2,___fladd@grs
  6013  0021B8  C053  F04F         	movff	___fladd@a+2,___fladd@b+2
  6014  0021BC  C05C  F053         	movff	___fladd@grs,___fladd@a+2
  6015  0021C0  C050  F05C         	movff	___fladd@b+3,___fladd@grs
  6016  0021C4  C054  F050         	movff	___fladd@a+3,___fladd@b+3
  6017  0021C8  C05C  F054         	movff	___fladd@grs,___fladd@a+3
  6018  0021CC                     l2962:
  6019  0021CC  0E00               	movlw	0
  6020  0021CE  6E5C               	movwf	___fladd@grs,c
  6021  0021D0  505B               	movf	___fladd@bexp,w,c
  6022  0021D2  C05A  F055         	movff	___fladd@aexp,??___fladd
  6023  0021D6  6A56               	clrf	(??___fladd+1)& (0+255),c
  6024  0021D8  5E55               	subwf	??___fladd,f,c
  6025  0021DA  0E00               	movlw	0
  6026  0021DC  5A56               	subwfb	??___fladd+1,f,c
  6027  0021DE  BE56               	btfsc	??___fladd+1,7,c
  6028  0021E0  D02C               	goto	l864
  6029  0021E2  5056               	movf	??___fladd+1,w,c
  6030  0021E4  E104               	bnz	u2890
  6031  0021E6  0E1A               	movlw	26
  6032  0021E8  5C55               	subwf	??___fladd,w,c
  6033  0021EA  A0D8               	btfss	status,0,c
  6034  0021EC  D026               	goto	l864
  6035  0021EE                     u2890:
  6036  0021EE  504D               	movf	___fladd@b,w,c
  6037  0021F0  104E               	iorwf	___fladd@b+1,w,c
  6038  0021F2  104F               	iorwf	___fladd@b+2,w,c
  6039  0021F4  1050               	iorwf	___fladd@b+3,w,c
  6040  0021F6  B4D8               	btfsc	status,2,c
  6041  0021F8  D002               	goto	u2900
  6042  0021FA  0E01               	movlw	1
  6043  0021FC  D001               	goto	u2910
  6044  0021FE                     u2900:
  6045  0021FE  0E00               	movlw	0
  6046  002200                     u2910:
  6047  002200  6E5C               	movwf	___fladd@grs,c
  6048  002202  0E00               	movlw	0
  6049  002204  6E4D               	movwf	___fladd@b,c
  6050  002206  0E00               	movlw	0
  6051  002208  6E4E               	movwf	___fladd@b+1,c
  6052  00220A  0E00               	movlw	0
  6053  00220C  6E4F               	movwf	___fladd@b+2,c
  6054  00220E  0E00               	movlw	0
  6055  002210  6E50               	movwf	___fladd@b+3,c
  6056  002212  C05A  F05B         	movff	___fladd@aexp,___fladd@bexp
  6057  002216  D015               	goto	u2940
  6058  002218                     l865:
  6059  002218  A05C               	btfss	___fladd@grs,0,c
  6060  00221A  D005               	goto	l2974
  6061  00221C  90D8               	bcf	status,0,c
  6062  00221E  305C               	rrcf	___fladd@grs,w,c
  6063  002220  0901               	iorlw	1
  6064  002222  6E5C               	movwf	___fladd@grs,c
  6065  002224  D002               	goto	l2976
  6066  002226                     l2974:
  6067  002226  90D8               	bcf	status,0,c
  6068  002228  325C               	rrcf	___fladd@grs,f,c
  6069  00222A                     l2976:
  6070  00222A  B04D               	btfsc	___fladd@b,0,c
  6071  00222C  8E5C               	bsf	___fladd@grs,7,c
  6072  00222E  3450               	rlcf	___fladd@b+3,w,c
  6073  002230  3250               	rrcf	___fladd@b+3,f,c
  6074  002232  324F               	rrcf	___fladd@b+2,f,c
  6075  002234  324E               	rrcf	___fladd@b+1,f,c
  6076  002236  324D               	rrcf	___fladd@b,f,c
  6077  002238  2A5B               	incf	___fladd@bexp,f,c
  6078  00223A                     l864:
  6079  00223A  505A               	movf	___fladd@aexp,w,c
  6080  00223C  5C5B               	subwf	___fladd@bexp,w,c
  6081  00223E  A0D8               	btfss	status,0,c
  6082  002240  D7EB               	goto	l865
  6083  002242                     u2940:
  6084  002242  BC59               	btfsc	___fladd@signs,6,c
  6085  002244  D028               	goto	l3008
  6086  002246  505B               	movf	___fladd@bexp,w,c
  6087  002248  A4D8               	btfss	status,2,c
  6088  00224A  D009               	goto	l2990
  6089  00224C  0E00               	movlw	0
  6090  00224E  6E4D               	movwf	?___fladd,c
  6091  002250  0E00               	movlw	0
  6092  002252  6E4E               	movwf	?___fladd+1,c
  6093  002254  0E00               	movlw	0
  6094  002256  6E4F               	movwf	?___fladd+2,c
  6095  002258  0E00               	movlw	0
  6096  00225A  6E50               	movwf	?___fladd+3,c
  6097  00225C  0012               	return	
  6098  00225E                     l2990:
  6099  00225E  5051               	movf	___fladd@a,w,c
  6100  002260  264D               	addwf	___fladd@b,f,c
  6101  002262  5052               	movf	___fladd@a+1,w,c
  6102  002264  224E               	addwfc	___fladd@b+1,f,c
  6103  002266  5053               	movf	___fladd@a+2,w,c
  6104  002268  224F               	addwfc	___fladd@b+2,f,c
  6105  00226A  5054               	movf	___fladd@a+3,w,c
  6106  00226C  2250               	addwfc	___fladd@b+3,f,c
  6107  00226E  A050               	btfss	___fladd@b+3,0,c
  6108  002270  D071               	goto	u3070
  6109  002272  A05C               	btfss	___fladd@grs,0,c
  6110  002274  D005               	goto	l2998
  6111  002276  90D8               	bcf	status,0,c
  6112  002278  305C               	rrcf	___fladd@grs,w,c
  6113  00227A  0901               	iorlw	1
  6114  00227C  6E5C               	movwf	___fladd@grs,c
  6115  00227E  D002               	goto	l3000
  6116  002280                     l2998:
  6117  002280  90D8               	bcf	status,0,c
  6118  002282  325C               	rrcf	___fladd@grs,f,c
  6119  002284                     l3000:
  6120  002284  B04D               	btfsc	___fladd@b,0,c
  6121  002286  8E5C               	bsf	___fladd@grs,7,c
  6122  002288  3450               	rlcf	___fladd@b+3,w,c
  6123  00228A  3250               	rrcf	___fladd@b+3,f,c
  6124  00228C  324F               	rrcf	___fladd@b+2,f,c
  6125  00228E  324E               	rrcf	___fladd@b+1,f,c
  6126  002290  324D               	rrcf	___fladd@b,f,c
  6127  002292  2A5B               	incf	___fladd@bexp,f,c
  6128  002294  D05F               	goto	u3070
  6129  002296                     l3008:
  6130  002296  5051               	movf	___fladd@a,w,c
  6131  002298  5C4D               	subwf	___fladd@b,w,c
  6132  00229A  5052               	movf	___fladd@a+1,w,c
  6133  00229C  584E               	subwfb	___fladd@b+1,w,c
  6134  00229E  5053               	movf	___fladd@a+2,w,c
  6135  0022A0  584F               	subwfb	___fladd@b+2,w,c
  6136  0022A2  5050               	movf	___fladd@b+3,w,c
  6137  0022A4  0A80               	xorlw	128
  6138  0022A6  6E55               	movwf	??___fladd& (0+255),c
  6139  0022A8  5054               	movf	___fladd@a+3,w,c
  6140  0022AA  0A80               	xorlw	128
  6141  0022AC  5855               	subwfb	??___fladd& (0+255),w,c
  6142  0022AE  B0D8               	btfsc	status,0,c
  6143  0022B0  D025               	goto	l3018
  6144  0022B2  504D               	movf	___fladd@b,w,c
  6145  0022B4  5C51               	subwf	___fladd@a,w,c
  6146  0022B6  6E55               	movwf	??___fladd& (0+255),c
  6147  0022B8  504E               	movf	___fladd@b+1,w,c
  6148  0022BA  5852               	subwfb	___fladd@a+1,w,c
  6149  0022BC  6E56               	movwf	(??___fladd+1)& (0+255),c
  6150  0022BE  504F               	movf	___fladd@b+2,w,c
  6151  0022C0  5853               	subwfb	___fladd@a+2,w,c
  6152  0022C2  6E57               	movwf	(??___fladd+2)& (0+255),c
  6153  0022C4  5050               	movf	___fladd@b+3,w,c
  6154  0022C6  5854               	subwfb	___fladd@a+3,w,c
  6155  0022C8  6E58               	movwf	(??___fladd+3)& (0+255),c
  6156  0022CA  0EFF               	movlw	255
  6157  0022CC  2455               	addwf	??___fladd,w,c
  6158  0022CE  6E4D               	movwf	___fladd@b,c
  6159  0022D0  0EFF               	movlw	255
  6160  0022D2  2056               	addwfc	??___fladd+1,w,c
  6161  0022D4  6E4E               	movwf	___fladd@b+1,c
  6162  0022D6  0EFF               	movlw	255
  6163  0022D8  2057               	addwfc	??___fladd+2,w,c
  6164  0022DA  6E4F               	movwf	___fladd@b+2,c
  6165  0022DC  0EFF               	movlw	255
  6166  0022DE  2058               	addwfc	??___fladd+3,w,c
  6167  0022E0  6E50               	movwf	___fladd@b+3,c
  6168  0022E2  0E80               	movlw	128
  6169  0022E4  1A59               	xorwf	___fladd@signs,f,c
  6170  0022E6  6C5C               	negf	___fladd@grs,c
  6171  0022E8  505C               	movf	___fladd@grs,w,c
  6172  0022EA  A4D8               	btfss	status,2,c
  6173  0022EC  D00F               	goto	l880
  6174  0022EE  0E01               	movlw	1
  6175  0022F0  264D               	addwf	___fladd@b,f,c
  6176  0022F2  0E00               	movlw	0
  6177  0022F4  224E               	addwfc	___fladd@b+1,f,c
  6178  0022F6  224F               	addwfc	___fladd@b+2,f,c
  6179  0022F8  2250               	addwfc	___fladd@b+3,f,c
  6180  0022FA  D008               	goto	l880
  6181  0022FC                     l3018:
  6182  0022FC  5051               	movf	___fladd@a,w,c
  6183  0022FE  5E4D               	subwf	___fladd@b,f,c
  6184  002300  5052               	movf	___fladd@a+1,w,c
  6185  002302  5A4E               	subwfb	___fladd@b+1,f,c
  6186  002304  5053               	movf	___fladd@a+2,w,c
  6187  002306  5A4F               	subwfb	___fladd@b+2,f,c
  6188  002308  5054               	movf	___fladd@a+3,w,c
  6189  00230A  5A50               	subwfb	___fladd@b+3,f,c
  6190  00230C                     l880:
  6191  00230C  504D               	movf	___fladd@b,w,c
  6192  00230E  104E               	iorwf	___fladd@b+1,w,c
  6193  002310  104F               	iorwf	___fladd@b+2,w,c
  6194  002312  1050               	iorwf	___fladd@b+3,w,c
  6195  002314  A4D8               	btfss	status,2,c
  6196  002316  D01C               	goto	l3042
  6197  002318  505C               	movf	___fladd@grs,w,c
  6198  00231A  A4D8               	btfss	status,2,c
  6199  00231C  D019               	goto	l3042
  6200  00231E  0E00               	movlw	0
  6201  002320  6E4D               	movwf	?___fladd,c
  6202  002322  0E00               	movlw	0
  6203  002324  6E4E               	movwf	?___fladd+1,c
  6204  002326  0E00               	movlw	0
  6205  002328  6E4F               	movwf	?___fladd+2,c
  6206  00232A  0E00               	movlw	0
  6207  00232C  6E50               	movwf	?___fladd+3,c
  6208  00232E  0012               	return	
  6209  002330                     l3026:
  6210  002330  90D8               	bcf	status,0,c
  6211  002332  364D               	rlcf	___fladd@b,f,c
  6212  002334  364E               	rlcf	___fladd@b+1,f,c
  6213  002336  364F               	rlcf	___fladd@b+2,f,c
  6214  002338  3650               	rlcf	___fladd@b+3,f,c
  6215  00233A  BE5C               	btfsc	___fladd@grs,7,c
  6216  00233C  804D               	bsf	___fladd@b,0,c
  6217  00233E  A05C               	btfss	___fladd@grs,0,c
  6218  002340  D002               	goto	l3036
  6219  002342  80D8               	bsf	status,0,c
  6220  002344  D001               	goto	L11
  6221  002346                     l3036:
  6222  002346  90D8               	bcf	status,0,c
  6223  002348                     L11:
  6224  002348  365C               	rlcf	___fladd@grs,f,c
  6225  00234A  505B               	movf	___fladd@bexp,w,c
  6226  00234C  A4D8               	btfss	status,2,c
  6227  00234E  065B               	decf	___fladd@bexp,f,c
  6228  002350                     l3042:
  6229  002350  AE4F               	btfss	___fladd@b+2,7,c
  6230  002352  D7EE               	goto	l3026
  6231  002354                     u3070:
  6232  002354  0E00               	movlw	0
  6233  002356  6E5A               	movwf	___fladd@aexp,c
  6234  002358  AE5C               	btfss	___fladd@grs,7,c
  6235  00235A  D00B               	goto	l889
  6236  00235C  C05C  F055         	movff	___fladd@grs,??___fladd
  6237  002360  0E7F               	movlw	127
  6238  002362  1655               	andwf	??___fladd,f,c
  6239  002364  B4D8               	btfsc	status,2,c
  6240  002366  D003               	goto	l890
  6241  002368                     u3090:
  6242  002368  0E01               	movlw	1
  6243  00236A  6E5A               	movwf	___fladd@aexp,c
  6244  00236C  D002               	goto	l889
  6245  00236E                     l890:
  6246  00236E  B04D               	btfsc	___fladd@b,0,c
  6247  002370  D7FB               	goto	u3090
  6248  002372                     l889:
  6249  002372  505A               	movf	___fladd@aexp,w,c
  6250  002374  B4D8               	btfsc	status,2,c
  6251  002376  D020               	goto	l3062
  6252  002378  0E01               	movlw	1
  6253  00237A  264D               	addwf	___fladd@b,f,c
  6254  00237C  0E00               	movlw	0
  6255  00237E  224E               	addwfc	___fladd@b+1,f,c
  6256  002380  224F               	addwfc	___fladd@b+2,f,c
  6257  002382  2250               	addwfc	___fladd@b+3,f,c
  6258  002384  A050               	btfss	___fladd@b+3,0,c
  6259  002386  D018               	goto	l3062
  6260  002388  C04D  F055         	movff	___fladd@b,??___fladd
  6261  00238C  C04E  F056         	movff	___fladd@b+1,??___fladd+1
  6262  002390  C04F  F057         	movff	___fladd@b+2,??___fladd+2
  6263  002394  C050  F058         	movff	___fladd@b+3,??___fladd+3
  6264  002398  3458               	rlcf	??___fladd+3,w,c
  6265  00239A  3258               	rrcf	??___fladd+3,f,c
  6266  00239C  3257               	rrcf	??___fladd+2,f,c
  6267  00239E  3256               	rrcf	??___fladd+1,f,c
  6268  0023A0  3255               	rrcf	??___fladd,f,c
  6269  0023A2  C055  F04D         	movff	??___fladd,___fladd@b
  6270  0023A6  C056  F04E         	movff	??___fladd+1,___fladd@b+1
  6271  0023AA  C057  F04F         	movff	??___fladd+2,___fladd@b+2
  6272  0023AE  C058  F050         	movff	??___fladd+3,___fladd@b+3
  6273  0023B2  285B               	incf	___fladd@bexp,w,c
  6274  0023B4  A4D8               	btfss	status,2,c
  6275  0023B6  2A5B               	incf	___fladd@bexp,f,c
  6276  0023B8                     l3062:
  6277  0023B8  285B               	incf	___fladd@bexp,w,c
  6278  0023BA  B4D8               	btfsc	status,2,c
  6279  0023BC  D003               	goto	u3150
  6280  0023BE  505B               	movf	___fladd@bexp,w,c
  6281  0023C0  A4D8               	btfss	status,2,c
  6282  0023C2  D00D               	goto	l3070
  6283  0023C4                     u3150:
  6284  0023C4  0E00               	movlw	0
  6285  0023C6  6E4D               	movwf	___fladd@b,c
  6286  0023C8  0E00               	movlw	0
  6287  0023CA  6E4E               	movwf	___fladd@b+1,c
  6288  0023CC  0E00               	movlw	0
  6289  0023CE  6E4F               	movwf	___fladd@b+2,c
  6290  0023D0  0E00               	movlw	0
  6291  0023D2  6E50               	movwf	___fladd@b+3,c
  6292  0023D4  505B               	movf	___fladd@bexp,w,c
  6293  0023D6  A4D8               	btfss	status,2,c
  6294  0023D8  D002               	goto	l3070
  6295  0023DA  0E00               	movlw	0
  6296  0023DC  6E59               	movwf	___fladd@signs,c
  6297  0023DE                     l3070:
  6298  0023DE  A05B               	btfss	___fladd@bexp,0,c
  6299  0023E0  D002               	goto	l3074
  6300  0023E2  8E4F               	bsf	___fladd@b+2,7,c
  6301  0023E4  D001               	goto	l3076
  6302  0023E6                     l3074:
  6303  0023E6  9E4F               	bcf	___fladd@b+2,7,c
  6304  0023E8                     l3076:
  6305  0023E8  90D8               	bcf	status,0,c
  6306  0023EA  305B               	rrcf	___fladd@bexp,w,c
  6307  0023EC  6E50               	movwf	___fladd@b+3,c
  6308  0023EE  BE59               	btfsc	___fladd@signs,7,c
  6309  0023F0  8E50               	bsf	___fladd@b+3,7,c
  6310  0023F2  C04D  F04D         	movff	___fladd@b,?___fladd
  6311  0023F6  C04E  F04E         	movff	___fladd@b+1,?___fladd+1
  6312  0023FA  C04F  F04F         	movff	___fladd@b+2,?___fladd+2
  6313  0023FE  C050  F050         	movff	___fladd@b+3,?___fladd+3
  6314  002402  0012               	return		;funcret
  6315  002404                     __end_of___fladd:
  6316                           	opt callstack 0
  6317                           
  6318 ;; *************** function ___flneg *****************
  6319 ;; Defined at:
  6320 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  f1              4    0[COMRAM] unsigned char 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;		None
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  4    0[COMRAM] unsigned char 
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6334 ;;      Params:         4       0       0       0       0       0       0       0       0
  6335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6337 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6338 ;;Total ram usage:        4 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    1
  6341 ;; This function calls:
  6342 ;;		Nothing
  6343 ;; This function is called by:
  6344 ;;		_efgtoa
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text21
  6349  003486                     __ptext21:
  6350                           	opt callstack 0
  6351  003486                     ___flneg:
  6352                           	opt callstack 25
  6353                           
  6354                           ;incstack = 0
  6355  003486  5001               	movf	___flneg@f1,w,c
  6356  003488  1002               	iorwf	___flneg@f1+1,w,c
  6357  00348A  1003               	iorwf	___flneg@f1+2,w,c
  6358  00348C  1004               	iorwf	___flneg@f1+3,w,c
  6359  00348E  B4D8               	btfsc	status,2,c
  6360  003490  D008               	goto	l3578
  6361  003492  0E00               	movlw	0
  6362  003494  1A01               	xorwf	___flneg@f1,f,c
  6363  003496  0E00               	movlw	0
  6364  003498  1A02               	xorwf	___flneg@f1+1,f,c
  6365  00349A  0E00               	movlw	0
  6366  00349C  1A03               	xorwf	___flneg@f1+2,f,c
  6367  00349E  0E80               	movlw	128
  6368  0034A0  1A04               	xorwf	___flneg@f1+3,f,c
  6369  0034A2                     l3578:
  6370  0034A2  C001  F001         	movff	___flneg@f1,?___flneg
  6371  0034A6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6372  0034AA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6373  0034AE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6374  0034B2  0012               	return		;funcret
  6375  0034B4                     __end_of___flneg:
  6376                           	opt callstack 0
  6377                           
  6378 ;; *************** function ___flmul *****************
  6379 ;; Defined at:
  6380 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  b               4   14[COMRAM] unsigned char 
  6383 ;;  a               4   18[COMRAM] unsigned char 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  prod            4   33[COMRAM] struct .
  6386 ;;  grs             4   27[COMRAM] unsigned long 
  6387 ;;  temp            2   37[COMRAM] struct .
  6388 ;;  bexp            1   32[COMRAM] unsigned char 
  6389 ;;  aexp            1   31[COMRAM] unsigned char 
  6390 ;;  sign            1   26[COMRAM] unsigned char 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  4   14[COMRAM] unsigned char 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0, prodl, prodh
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6400 ;;      Params:         8       0       0       0       0       0       0       0       0
  6401 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6402 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6403 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6404 ;;Total ram usage:       25 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; Hardware stack levels required when called:    1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_main
  6411 ;;		_efgtoa
  6412 ;;		_sqrtf
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text22
  6417  001DA6                     __ptext22:
  6418                           	opt callstack 0
  6419  001DA6                     ___flmul:
  6420                           	opt callstack 28
  6421                           
  6422                           ;incstack = 0
  6423  001DA6  5012               	movf	___flmul@b+3,w,c
  6424  001DA8  0B80               	andlw	128
  6425  001DAA  6E1B               	movwf	___flmul@sign,c
  6426  001DAC  5012               	movf	___flmul@b+3,w,c
  6427  001DAE  2412               	addwf	___flmul@b+3,w,c
  6428  001DB0  6E21               	movwf	___flmul@bexp,c
  6429  001DB2  BE11               	btfsc	___flmul@b+2,7,c
  6430  001DB4  8021               	bsf	___flmul@bexp,0,c
  6431  001DB6  5021               	movf	___flmul@bexp,w,c
  6432  001DB8  B4D8               	btfsc	status,2,c
  6433  001DBA  D00D               	goto	l3334
  6434  001DBC  2821               	incf	___flmul@bexp,w,c
  6435  001DBE  A4D8               	btfss	status,2,c
  6436  001DC0  D008               	goto	l3332
  6437  001DC2  0E00               	movlw	0
  6438  001DC4  6E0F               	movwf	___flmul@b,c
  6439  001DC6  0E00               	movlw	0
  6440  001DC8  6E10               	movwf	___flmul@b+1,c
  6441  001DCA  0E00               	movlw	0
  6442  001DCC  6E11               	movwf	___flmul@b+2,c
  6443  001DCE  0E00               	movlw	0
  6444  001DD0  6E12               	movwf	___flmul@b+3,c
  6445  001DD2                     l3332:
  6446  001DD2  8E11               	bsf	___flmul@b+2,7,c
  6447  001DD4  D008               	goto	l3336
  6448  001DD6                     l3334:
  6449  001DD6  0E00               	movlw	0
  6450  001DD8  6E0F               	movwf	___flmul@b,c
  6451  001DDA  0E00               	movlw	0
  6452  001DDC  6E10               	movwf	___flmul@b+1,c
  6453  001DDE  0E00               	movlw	0
  6454  001DE0  6E11               	movwf	___flmul@b+2,c
  6455  001DE2  0E00               	movlw	0
  6456  001DE4  6E12               	movwf	___flmul@b+3,c
  6457  001DE6                     l3336:
  6458  001DE6  5016               	movf	___flmul@a+3,w,c
  6459  001DE8  0B80               	andlw	128
  6460  001DEA  1A1B               	xorwf	___flmul@sign,f,c
  6461  001DEC  5016               	movf	___flmul@a+3,w,c
  6462  001DEE  2416               	addwf	___flmul@a+3,w,c
  6463  001DF0  6E20               	movwf	___flmul@aexp,c
  6464  001DF2  BE15               	btfsc	___flmul@a+2,7,c
  6465  001DF4  8020               	bsf	___flmul@aexp,0,c
  6466  001DF6  5020               	movf	___flmul@aexp,w,c
  6467  001DF8  B4D8               	btfsc	status,2,c
  6468  001DFA  D00D               	goto	l3352
  6469  001DFC  2820               	incf	___flmul@aexp,w,c
  6470  001DFE  A4D8               	btfss	status,2,c
  6471  001E00  D008               	goto	l3350
  6472  001E02  0E00               	movlw	0
  6473  001E04  6E13               	movwf	___flmul@a,c
  6474  001E06  0E00               	movlw	0
  6475  001E08  6E14               	movwf	___flmul@a+1,c
  6476  001E0A  0E00               	movlw	0
  6477  001E0C  6E15               	movwf	___flmul@a+2,c
  6478  001E0E  0E00               	movlw	0
  6479  001E10  6E16               	movwf	___flmul@a+3,c
  6480  001E12                     l3350:
  6481  001E12  8E15               	bsf	___flmul@a+2,7,c
  6482  001E14  D008               	goto	l949
  6483  001E16                     l3352:
  6484  001E16  0E00               	movlw	0
  6485  001E18  6E13               	movwf	___flmul@a,c
  6486  001E1A  0E00               	movlw	0
  6487  001E1C  6E14               	movwf	___flmul@a+1,c
  6488  001E1E  0E00               	movlw	0
  6489  001E20  6E15               	movwf	___flmul@a+2,c
  6490  001E22  0E00               	movlw	0
  6491  001E24  6E16               	movwf	___flmul@a+3,c
  6492  001E26                     l949:
  6493  001E26  5020               	movf	___flmul@aexp,w,c
  6494  001E28  B4D8               	btfsc	status,2,c
  6495  001E2A  D003               	goto	u3770
  6496  001E2C  5021               	movf	___flmul@bexp,w,c
  6497  001E2E  A4D8               	btfss	status,2,c
  6498  001E30  D009               	goto	l3360
  6499  001E32                     u3770:
  6500  001E32  0E00               	movlw	0
  6501  001E34  6E0F               	movwf	?___flmul,c
  6502  001E36  0E00               	movlw	0
  6503  001E38  6E10               	movwf	?___flmul+1,c
  6504  001E3A  0E00               	movlw	0
  6505  001E3C  6E11               	movwf	?___flmul+2,c
  6506  001E3E  0E00               	movlw	0
  6507  001E40  6E12               	movwf	?___flmul+3,c
  6508  001E42  0012               	return	
  6509  001E44                     l3360:
  6510  001E44  5015               	movf	___flmul@a+2,w,c
  6511  001E46  020F               	mulwf	___flmul@b,c
  6512  001E48  CFF3 F026          	movff	prodl,___flmul@temp
  6513  001E4C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6514  001E50  5026               	movf	___flmul@temp,w,c
  6515  001E52  6E1C               	movwf	___flmul@grs,c
  6516  001E54  6A1D               	clrf	___flmul@grs+1,c
  6517  001E56  6A1E               	clrf	___flmul@grs+2,c
  6518  001E58  6A1F               	clrf	___flmul@grs+3,c
  6519  001E5A  5027               	movf	___flmul@temp+1,w,c
  6520  001E5C  6E22               	movwf	___flmul@prod,c
  6521  001E5E  6A23               	clrf	___flmul@prod+1,c
  6522  001E60  6A24               	clrf	___flmul@prod+2,c
  6523  001E62  6A25               	clrf	___flmul@prod+3,c
  6524  001E64  5014               	movf	___flmul@a+1,w,c
  6525  001E66  0210               	mulwf	___flmul@b+1,c
  6526  001E68  CFF3 F026          	movff	prodl,___flmul@temp
  6527  001E6C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6528  001E70  5026               	movf	___flmul@temp,w,c
  6529  001E72  261C               	addwf	___flmul@grs,f,c
  6530  001E74  0E00               	movlw	0
  6531  001E76  221D               	addwfc	___flmul@grs+1,f,c
  6532  001E78  221E               	addwfc	___flmul@grs+2,f,c
  6533  001E7A  221F               	addwfc	___flmul@grs+3,f,c
  6534  001E7C  5027               	movf	___flmul@temp+1,w,c
  6535  001E7E  2622               	addwf	___flmul@prod,f,c
  6536  001E80  0E00               	movlw	0
  6537  001E82  2223               	addwfc	___flmul@prod+1,f,c
  6538  001E84  2224               	addwfc	___flmul@prod+2,f,c
  6539  001E86  2225               	addwfc	___flmul@prod+3,f,c
  6540  001E88  5013               	movf	___flmul@a,w,c
  6541  001E8A  0211               	mulwf	___flmul@b+2,c
  6542  001E8C  CFF3 F026          	movff	prodl,___flmul@temp
  6543  001E90  CFF4 F027          	movff	prodh,___flmul@temp+1
  6544  001E94  5026               	movf	___flmul@temp,w,c
  6545  001E96  261C               	addwf	___flmul@grs,f,c
  6546  001E98  0E00               	movlw	0
  6547  001E9A  221D               	addwfc	___flmul@grs+1,f,c
  6548  001E9C  221E               	addwfc	___flmul@grs+2,f,c
  6549  001E9E  221F               	addwfc	___flmul@grs+3,f,c
  6550  001EA0  5027               	movf	___flmul@temp+1,w,c
  6551  001EA2  2622               	addwf	___flmul@prod,f,c
  6552  001EA4  0E00               	movlw	0
  6553  001EA6  2223               	addwfc	___flmul@prod+1,f,c
  6554  001EA8  2224               	addwfc	___flmul@prod+2,f,c
  6555  001EAA  2225               	addwfc	___flmul@prod+3,f,c
  6556  001EAC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6557  001EB0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6558  001EB4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6559  001EB8  6A1C               	clrf	___flmul@grs,c
  6560  001EBA  5013               	movf	___flmul@a,w,c
  6561  001EBC  0210               	mulwf	___flmul@b+1,c
  6562  001EBE  CFF3 F026          	movff	prodl,___flmul@temp
  6563  001EC2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6564  001EC6  5026               	movf	___flmul@temp,w,c
  6565  001EC8  261C               	addwf	___flmul@grs,f,c
  6566  001ECA  5027               	movf	___flmul@temp+1,w,c
  6567  001ECC  221D               	addwfc	___flmul@grs+1,f,c
  6568  001ECE  0E00               	movlw	0
  6569  001ED0  221E               	addwfc	___flmul@grs+2,f,c
  6570  001ED2  0E00               	movlw	0
  6571  001ED4  221F               	addwfc	___flmul@grs+3,f,c
  6572  001ED6  5014               	movf	___flmul@a+1,w,c
  6573  001ED8  020F               	mulwf	___flmul@b,c
  6574  001EDA  CFF3 F026          	movff	prodl,___flmul@temp
  6575  001EDE  CFF4 F027          	movff	prodh,___flmul@temp+1
  6576  001EE2  5026               	movf	___flmul@temp,w,c
  6577  001EE4  261C               	addwf	___flmul@grs,f,c
  6578  001EE6  5027               	movf	___flmul@temp+1,w,c
  6579  001EE8  221D               	addwfc	___flmul@grs+1,f,c
  6580  001EEA  0E00               	movlw	0
  6581  001EEC  221E               	addwfc	___flmul@grs+2,f,c
  6582  001EEE  0E00               	movlw	0
  6583  001EF0  221F               	addwfc	___flmul@grs+3,f,c
  6584  001EF2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6585  001EF6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6586  001EFA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6587  001EFE  6A1C               	clrf	___flmul@grs,c
  6588  001F00  5013               	movf	___flmul@a,w,c
  6589  001F02  020F               	mulwf	___flmul@b,c
  6590  001F04  CFF3 F026          	movff	prodl,___flmul@temp
  6591  001F08  CFF4 F027          	movff	prodh,___flmul@temp+1
  6592  001F0C  5026               	movf	___flmul@temp,w,c
  6593  001F0E  261C               	addwf	___flmul@grs,f,c
  6594  001F10  5027               	movf	___flmul@temp+1,w,c
  6595  001F12  221D               	addwfc	___flmul@grs+1,f,c
  6596  001F14  0E00               	movlw	0
  6597  001F16  221E               	addwfc	___flmul@grs+2,f,c
  6598  001F18  0E00               	movlw	0
  6599  001F1A  221F               	addwfc	___flmul@grs+3,f,c
  6600  001F1C  5015               	movf	___flmul@a+2,w,c
  6601  001F1E  0210               	mulwf	___flmul@b+1,c
  6602  001F20  CFF3 F026          	movff	prodl,___flmul@temp
  6603  001F24  CFF4 F027          	movff	prodh,___flmul@temp+1
  6604  001F28  5026               	movf	___flmul@temp,w,c
  6605  001F2A  2622               	addwf	___flmul@prod,f,c
  6606  001F2C  5027               	movf	___flmul@temp+1,w,c
  6607  001F2E  2223               	addwfc	___flmul@prod+1,f,c
  6608  001F30  0E00               	movlw	0
  6609  001F32  2224               	addwfc	___flmul@prod+2,f,c
  6610  001F34  0E00               	movlw	0
  6611  001F36  2225               	addwfc	___flmul@prod+3,f,c
  6612  001F38  5014               	movf	___flmul@a+1,w,c
  6613  001F3A  0211               	mulwf	___flmul@b+2,c
  6614  001F3C  CFF3 F026          	movff	prodl,___flmul@temp
  6615  001F40  CFF4 F027          	movff	prodh,___flmul@temp+1
  6616  001F44  5026               	movf	___flmul@temp,w,c
  6617  001F46  2622               	addwf	___flmul@prod,f,c
  6618  001F48  5027               	movf	___flmul@temp+1,w,c
  6619  001F4A  2223               	addwfc	___flmul@prod+1,f,c
  6620  001F4C  0E00               	movlw	0
  6621  001F4E  2224               	addwfc	___flmul@prod+2,f,c
  6622  001F50  0E00               	movlw	0
  6623  001F52  2225               	addwfc	___flmul@prod+3,f,c
  6624  001F54  5015               	movf	___flmul@a+2,w,c
  6625  001F56  0211               	mulwf	___flmul@b+2,c
  6626  001F58  CFF3 F026          	movff	prodl,___flmul@temp
  6627  001F5C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6628  001F60  5026               	movf	___flmul@temp,w,c
  6629  001F62  6E17               	movwf	??___flmul& (0+255),c
  6630  001F64  5027               	movf	___flmul@temp+1,w,c
  6631  001F66  6E18               	movwf	(??___flmul+1)& (0+255),c
  6632  001F68  6A19               	clrf	(??___flmul+2)& (0+255),c
  6633  001F6A  6A1A               	clrf	(??___flmul+3)& (0+255),c
  6634  001F6C  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6635  001F70  C018  F019         	movff	??___flmul+1,??___flmul+2
  6636  001F74  C017  F018         	movff	??___flmul,??___flmul+1
  6637  001F78  6A17               	clrf	??___flmul,c
  6638  001F7A  5017               	movf	??___flmul,w,c
  6639  001F7C  2622               	addwf	___flmul@prod,f,c
  6640  001F7E  5018               	movf	??___flmul+1,w,c
  6641  001F80  2223               	addwfc	___flmul@prod+1,f,c
  6642  001F82  5019               	movf	??___flmul+2,w,c
  6643  001F84  2224               	addwfc	___flmul@prod+2,f,c
  6644  001F86  501A               	movf	??___flmul+3,w,c
  6645  001F88  2225               	addwfc	___flmul@prod+3,f,c
  6646  001F8A  C01C  F017         	movff	___flmul@grs,??___flmul
  6647  001F8E  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6648  001F92  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6649  001F96  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6650  001F9A  0E19               	movlw	25
  6651  001F9C  D005               	goto	u3780
  6652  001F9E                     u3785:
  6653  001F9E  90D8               	bcf	status,0,c
  6654  001FA0  321A               	rrcf	??___flmul+3,f,c
  6655  001FA2  3219               	rrcf	??___flmul+2,f,c
  6656  001FA4  3218               	rrcf	??___flmul+1,f,c
  6657  001FA6  3217               	rrcf	??___flmul,f,c
  6658  001FA8                     u3780:
  6659  001FA8  2EE8               	decfsz	wreg,f,c
  6660  001FAA  D7F9               	goto	u3785
  6661  001FAC  5017               	movf	??___flmul,w,c
  6662  001FAE  2622               	addwf	___flmul@prod,f,c
  6663  001FB0  5018               	movf	??___flmul+1,w,c
  6664  001FB2  2223               	addwfc	___flmul@prod+1,f,c
  6665  001FB4  5019               	movf	??___flmul+2,w,c
  6666  001FB6  2224               	addwfc	___flmul@prod+2,f,c
  6667  001FB8  501A               	movf	??___flmul+3,w,c
  6668  001FBA  2225               	addwfc	___flmul@prod+3,f,c
  6669  001FBC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6670  001FC0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6671  001FC4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6672  001FC8  6A1C               	clrf	___flmul@grs,c
  6673  001FCA  5020               	movf	___flmul@aexp,w,c
  6674  001FCC  C021  F017         	movff	___flmul@bexp,??___flmul
  6675  001FD0  6A18               	clrf	(??___flmul+1)& (0+255),c
  6676  001FD2  2617               	addwf	??___flmul,f,c
  6677  001FD4  0E00               	movlw	0
  6678  001FD6  2218               	addwfc	??___flmul+1,f,c
  6679  001FD8  0E82               	movlw	130
  6680  001FDA  2417               	addwf	??___flmul,w,c
  6681  001FDC  6E26               	movwf	___flmul@temp,c
  6682  001FDE  0EFF               	movlw	255
  6683  001FE0  2018               	addwfc	??___flmul+1,w,c
  6684  001FE2  6E27               	movwf	___flmul@temp+1,c
  6685  001FE4  D00F               	goto	l3408
  6686  001FE6                     l3402:
  6687  001FE6  90D8               	bcf	status,0,c
  6688  001FE8  3622               	rlcf	___flmul@prod,f,c
  6689  001FEA  3623               	rlcf	___flmul@prod+1,f,c
  6690  001FEC  3624               	rlcf	___flmul@prod+2,f,c
  6691  001FEE  3625               	rlcf	___flmul@prod+3,f,c
  6692  001FF0  BE1F               	btfsc	___flmul@grs+3,7,c
  6693  001FF2  8022               	bsf	___flmul@prod,0,c
  6694  001FF4  90D8               	bcf	status,0,c
  6695  001FF6  361C               	rlcf	___flmul@grs,f,c
  6696  001FF8  361D               	rlcf	___flmul@grs+1,f,c
  6697  001FFA  361E               	rlcf	___flmul@grs+2,f,c
  6698  001FFC  361F               	rlcf	___flmul@grs+3,f,c
  6699  001FFE  0626               	decf	___flmul@temp,f,c
  6700  002000  A0D8               	btfss	status,0,c
  6701  002002  0627               	decf	___flmul@temp+1,f,c
  6702  002004                     l3408:
  6703  002004  AE24               	btfss	___flmul@prod+2,7,c
  6704  002006  D7EF               	goto	l3402
  6705  002008  0E00               	movlw	0
  6706  00200A  6E20               	movwf	___flmul@aexp,c
  6707  00200C  AE1F               	btfss	___flmul@grs+3,7,c
  6708  00200E  D017               	goto	l958
  6709  002010  0EFF               	movlw	255
  6710  002012  141C               	andwf	___flmul@grs,w,c
  6711  002014  6E17               	movwf	??___flmul& (0+255),c
  6712  002016  0EFF               	movlw	255
  6713  002018  141D               	andwf	___flmul@grs+1,w,c
  6714  00201A  6E18               	movwf	(??___flmul+1)& (0+255),c
  6715  00201C  0EFF               	movlw	255
  6716  00201E  141E               	andwf	___flmul@grs+2,w,c
  6717  002020  6E19               	movwf	(??___flmul+2)& (0+255),c
  6718  002022  0E7F               	movlw	127
  6719  002024  141F               	andwf	___flmul@grs+3,w,c
  6720  002026  6E1A               	movwf	(??___flmul+3)& (0+255),c
  6721  002028  5017               	movf	??___flmul,w,c
  6722  00202A  1018               	iorwf	??___flmul+1,w,c
  6723  00202C  1019               	iorwf	??___flmul+2,w,c
  6724  00202E  101A               	iorwf	??___flmul+3,w,c
  6725  002030  B4D8               	btfsc	status,2,c
  6726  002032  D003               	goto	l959
  6727  002034                     u3820:
  6728  002034  0E01               	movlw	1
  6729  002036  6E20               	movwf	___flmul@aexp,c
  6730  002038  D002               	goto	l958
  6731  00203A                     l959:
  6732  00203A  B022               	btfsc	___flmul@prod,0,c
  6733  00203C  D7FB               	goto	u3820
  6734  00203E                     l958:
  6735  00203E  5020               	movf	___flmul@aexp,w,c
  6736  002040  B4D8               	btfsc	status,2,c
  6737  002042  D01F               	goto	l3428
  6738  002044  0E01               	movlw	1
  6739  002046  2622               	addwf	___flmul@prod,f,c
  6740  002048  0E00               	movlw	0
  6741  00204A  2223               	addwfc	___flmul@prod+1,f,c
  6742  00204C  2224               	addwfc	___flmul@prod+2,f,c
  6743  00204E  2225               	addwfc	___flmul@prod+3,f,c
  6744  002050  A025               	btfss	___flmul@prod+3,0,c
  6745  002052  D017               	goto	l3428
  6746  002054  C022  F017         	movff	___flmul@prod,??___flmul
  6747  002058  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6748  00205C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6749  002060  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6750  002064  341A               	rlcf	??___flmul+3,w,c
  6751  002066  321A               	rrcf	??___flmul+3,f,c
  6752  002068  3219               	rrcf	??___flmul+2,f,c
  6753  00206A  3218               	rrcf	??___flmul+1,f,c
  6754  00206C  3217               	rrcf	??___flmul,f,c
  6755  00206E  C017  F022         	movff	??___flmul,___flmul@prod
  6756  002072  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6757  002076  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6758  00207A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6759  00207E  4A26               	infsnz	___flmul@temp,f,c
  6760  002080  2A27               	incf	___flmul@temp+1,f,c
  6761  002082                     l3428:
  6762  002082  BE27               	btfsc	___flmul@temp+1,7,c
  6763  002084  D00D               	goto	l3432
  6764  002086  5027               	movf	___flmul@temp+1,w,c
  6765  002088  E103               	bnz	u3860
  6766  00208A  2826               	incf	___flmul@temp,w,c
  6767  00208C  A0D8               	btfss	status,0,c
  6768  00208E  D008               	goto	l3432
  6769  002090                     u3860:
  6770  002090  0E00               	movlw	0
  6771  002092  6E22               	movwf	___flmul@prod,c
  6772  002094  0E00               	movlw	0
  6773  002096  6E23               	movwf	___flmul@prod+1,c
  6774  002098  0E80               	movlw	128
  6775  00209A  6E24               	movwf	___flmul@prod+2,c
  6776  00209C  0E7F               	movlw	127
  6777  00209E  D020               	goto	L12
  6778  0020A0                     l3432:
  6779  0020A0  BE27               	btfsc	___flmul@temp+1,7,c
  6780  0020A2  D005               	goto	u3870
  6781  0020A4  5027               	movf	___flmul@temp+1,w,c
  6782  0020A6  E10E               	bnz	l966
  6783  0020A8  0426               	decf	___flmul@temp,w,c
  6784  0020AA  B0D8               	btfsc	status,0,c
  6785  0020AC  D00B               	goto	l966
  6786  0020AE                     u3870:
  6787  0020AE  0E00               	movlw	0
  6788  0020B0  6E22               	movwf	___flmul@prod,c
  6789  0020B2  0E00               	movlw	0
  6790  0020B4  6E23               	movwf	___flmul@prod+1,c
  6791  0020B6  0E00               	movlw	0
  6792  0020B8  6E24               	movwf	___flmul@prod+2,c
  6793  0020BA  0E00               	movlw	0
  6794  0020BC  6E25               	movwf	___flmul@prod+3,c
  6795  0020BE  0E00               	movlw	0
  6796  0020C0  6E1B               	movwf	___flmul@sign,c
  6797  0020C2  D00F               	goto	l3444
  6798  0020C4                     l966:
  6799  0020C4  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6800  0020C8  0EFF               	movlw	255
  6801  0020CA  1622               	andwf	___flmul@prod,f,c
  6802  0020CC  0EFF               	movlw	255
  6803  0020CE  1623               	andwf	___flmul@prod+1,f,c
  6804  0020D0  0E7F               	movlw	127
  6805  0020D2  1624               	andwf	___flmul@prod+2,f,c
  6806  0020D4  0E00               	movlw	0
  6807  0020D6  1625               	andwf	___flmul@prod+3,f,c
  6808  0020D8  B021               	btfsc	___flmul@bexp,0,c
  6809  0020DA  8E24               	bsf	___flmul@prod+2,7,c
  6810  0020DC  90D8               	bcf	status,0,c
  6811  0020DE  3021               	rrcf	___flmul@bexp,w,c
  6812  0020E0                     L12:
  6813  0020E0  6E25               	movwf	___flmul@prod+3,c
  6814  0020E2                     l3444:
  6815  0020E2  501B               	movf	___flmul@sign,w,c
  6816  0020E4  1225               	iorwf	___flmul@prod+3,f,c
  6817  0020E6  C022  F00F         	movff	___flmul@prod,?___flmul
  6818  0020EA  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6819  0020EE  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6820  0020F2  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6821  0020F6  0012               	return		;funcret
  6822  0020F8                     __end_of___flmul:
  6823                           	opt callstack 0
  6824                           
  6825 ;; *************** function ___flge *****************
  6826 ;; Defined at:
  6827 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  ff1             4   39[COMRAM] unsigned char 
  6830 ;;  ff2             4   43[COMRAM] unsigned char 
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;		None
  6833 ;; Return value:  Size  Location     Type
  6834 ;;		None               void
  6835 ;; Registers used:
  6836 ;;		wreg, status,2, status,0
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6842 ;;      Params:         8       0       0       0       0       0       0       0       0
  6843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6844 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6845 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6846 ;;Total ram usage:       12 bytes
  6847 ;; Hardware stack levels used:    1
  6848 ;; Hardware stack levels required when called:    1
  6849 ;; This function calls:
  6850 ;;		Nothing
  6851 ;; This function is called by:
  6852 ;;		_main
  6853 ;;		_efgtoa
  6854 ;;		_sqrtf
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text23
  6859  002AC6                     __ptext23:
  6860                           	opt callstack 0
  6861  002AC6                     ___flge:
  6862                           	opt callstack 28
  6863                           
  6864                           ;incstack = 0
  6865  002AC6  0E00               	movlw	0
  6866  002AC8  1428               	andwf	___flge@ff1,w,c
  6867  002ACA  6E30               	movwf	??___flge& (0+255),c
  6868  002ACC  0E00               	movlw	0
  6869  002ACE  1429               	andwf	___flge@ff1+1,w,c
  6870  002AD0  6E31               	movwf	(??___flge+1)& (0+255),c
  6871  002AD2  0E80               	movlw	128
  6872  002AD4  142A               	andwf	___flge@ff1+2,w,c
  6873  002AD6  6E32               	movwf	(??___flge+2)& (0+255),c
  6874  002AD8  0E7F               	movlw	127
  6875  002ADA  142B               	andwf	___flge@ff1+3,w,c
  6876  002ADC  6E33               	movwf	(??___flge+3)& (0+255),c
  6877  002ADE  5030               	movf	??___flge,w,c
  6878  002AE0  1031               	iorwf	??___flge+1,w,c
  6879  002AE2  1032               	iorwf	??___flge+2,w,c
  6880  002AE4  1033               	iorwf	??___flge+3,w,c
  6881  002AE6  A4D8               	btfss	status,2,c
  6882  002AE8  D008               	goto	l3556
  6883  002AEA  0E00               	movlw	0
  6884  002AEC  6E28               	movwf	___flge@ff1,c
  6885  002AEE  0E00               	movlw	0
  6886  002AF0  6E29               	movwf	___flge@ff1+1,c
  6887  002AF2  0E00               	movlw	0
  6888  002AF4  6E2A               	movwf	___flge@ff1+2,c
  6889  002AF6  0E00               	movlw	0
  6890  002AF8  6E2B               	movwf	___flge@ff1+3,c
  6891  002AFA                     l3556:
  6892  002AFA  0E00               	movlw	0
  6893  002AFC  142C               	andwf	___flge@ff2,w,c
  6894  002AFE  6E30               	movwf	??___flge& (0+255),c
  6895  002B00  0E00               	movlw	0
  6896  002B02  142D               	andwf	___flge@ff2+1,w,c
  6897  002B04  6E31               	movwf	(??___flge+1)& (0+255),c
  6898  002B06  0E80               	movlw	128
  6899  002B08  142E               	andwf	___flge@ff2+2,w,c
  6900  002B0A  6E32               	movwf	(??___flge+2)& (0+255),c
  6901  002B0C  0E7F               	movlw	127
  6902  002B0E  142F               	andwf	___flge@ff2+3,w,c
  6903  002B10  6E33               	movwf	(??___flge+3)& (0+255),c
  6904  002B12  5030               	movf	??___flge,w,c
  6905  002B14  1031               	iorwf	??___flge+1,w,c
  6906  002B16  1032               	iorwf	??___flge+2,w,c
  6907  002B18  1033               	iorwf	??___flge+3,w,c
  6908  002B1A  A4D8               	btfss	status,2,c
  6909  002B1C  D008               	goto	l3560
  6910  002B1E  0E00               	movlw	0
  6911  002B20  6E2C               	movwf	___flge@ff2,c
  6912  002B22  0E00               	movlw	0
  6913  002B24  6E2D               	movwf	___flge@ff2+1,c
  6914  002B26  0E00               	movlw	0
  6915  002B28  6E2E               	movwf	___flge@ff2+2,c
  6916  002B2A  0E00               	movlw	0
  6917  002B2C  6E2F               	movwf	___flge@ff2+3,c
  6918  002B2E                     l3560:
  6919  002B2E  AE2B               	btfss	___flge@ff1+3,7,c
  6920  002B30  D009               	goto	l3564
  6921  002B32  6C28               	negf	___flge@ff1,c
  6922  002B34  1E29               	comf	___flge@ff1+1,f,c
  6923  002B36  B0D8               	btfsc	status,0,c
  6924  002B38  2A29               	incf	___flge@ff1+1,f,c
  6925  002B3A  1E2A               	comf	___flge@ff1+2,f,c
  6926  002B3C  B0D8               	btfsc	status,0,c
  6927  002B3E  2A2A               	incf	___flge@ff1+2,f,c
  6928  002B40  0E80               	movlw	128
  6929  002B42  562B               	subfwb	___flge@ff1+3,f,c
  6930  002B44                     l3564:
  6931  002B44  AE2F               	btfss	___flge@ff2+3,7,c
  6932  002B46  D009               	goto	l600
  6933  002B48  6C2C               	negf	___flge@ff2,c
  6934  002B4A  1E2D               	comf	___flge@ff2+1,f,c
  6935  002B4C  B0D8               	btfsc	status,0,c
  6936  002B4E  2A2D               	incf	___flge@ff2+1,f,c
  6937  002B50  1E2E               	comf	___flge@ff2+2,f,c
  6938  002B52  B0D8               	btfsc	status,0,c
  6939  002B54  2A2E               	incf	___flge@ff2+2,f,c
  6940  002B56  0E80               	movlw	128
  6941  002B58  562F               	subfwb	___flge@ff2+3,f,c
  6942  002B5A                     l600:
  6943  002B5A  0E00               	movlw	0
  6944  002B5C  1A28               	xorwf	___flge@ff1,f,c
  6945  002B5E  0E00               	movlw	0
  6946  002B60  1A29               	xorwf	___flge@ff1+1,f,c
  6947  002B62  0E00               	movlw	0
  6948  002B64  1A2A               	xorwf	___flge@ff1+2,f,c
  6949  002B66  0E80               	movlw	128
  6950  002B68  1A2B               	xorwf	___flge@ff1+3,f,c
  6951  002B6A  0E00               	movlw	0
  6952  002B6C  1A2C               	xorwf	___flge@ff2,f,c
  6953  002B6E  0E00               	movlw	0
  6954  002B70  1A2D               	xorwf	___flge@ff2+1,f,c
  6955  002B72  0E00               	movlw	0
  6956  002B74  1A2E               	xorwf	___flge@ff2+2,f,c
  6957  002B76  0E80               	movlw	128
  6958  002B78  1A2F               	xorwf	___flge@ff2+3,f,c
  6959  002B7A  502C               	movf	___flge@ff2,w,c
  6960  002B7C  5C28               	subwf	___flge@ff1,w,c
  6961  002B7E  502D               	movf	___flge@ff2+1,w,c
  6962  002B80  5829               	subwfb	___flge@ff1+1,w,c
  6963  002B82  502E               	movf	___flge@ff2+2,w,c
  6964  002B84  582A               	subwfb	___flge@ff1+2,w,c
  6965  002B86  502F               	movf	___flge@ff2+3,w,c
  6966  002B88  582B               	subwfb	___flge@ff1+3,w,c
  6967  002B8A  B0D8               	btfsc	status,0,c
  6968  002B8C  D002               	goto	l3570
  6969  002B8E  90D8               	bcf	status,0,c
  6970  002B90  0012               	return	
  6971  002B92                     l3570:
  6972  002B92  80D8               	bsf	status,0,c
  6973  002B94  0012               	return		;funcret
  6974  002B96                     __end_of___flge:
  6975                           	opt callstack 0
  6976                           
  6977 ;; *************** function ___fleq *****************
  6978 ;; Defined at:
  6979 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  ff1             4    0[COMRAM] unsigned char 
  6982 ;;  ff2             4    4[COMRAM] unsigned char 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;		None               void
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6994 ;;      Params:         8       0       0       0       0       0       0       0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6996 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6997 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6998 ;;Total ram usage:       12 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    1
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_efgtoa
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text24
  7009  002EFA                     __ptext24:
  7010                           	opt callstack 0
  7011  002EFA                     ___fleq:
  7012                           	opt callstack 25
  7013                           
  7014                           ;incstack = 0
  7015  002EFA  0E00               	movlw	0
  7016  002EFC  1401               	andwf	___fleq@ff1,w,c
  7017  002EFE  6E09               	movwf	??___fleq& (0+255),c
  7018  002F00  0E00               	movlw	0
  7019  002F02  1402               	andwf	___fleq@ff1+1,w,c
  7020  002F04  6E0A               	movwf	(??___fleq+1)& (0+255),c
  7021  002F06  0E80               	movlw	128
  7022  002F08  1403               	andwf	___fleq@ff1+2,w,c
  7023  002F0A  6E0B               	movwf	(??___fleq+2)& (0+255),c
  7024  002F0C  0E7F               	movlw	127
  7025  002F0E  1404               	andwf	___fleq@ff1+3,w,c
  7026  002F10  6E0C               	movwf	(??___fleq+3)& (0+255),c
  7027  002F12  5009               	movf	??___fleq,w,c
  7028  002F14  100A               	iorwf	??___fleq+1,w,c
  7029  002F16  100B               	iorwf	??___fleq+2,w,c
  7030  002F18  100C               	iorwf	??___fleq+3,w,c
  7031  002F1A  A4D8               	btfss	status,2,c
  7032  002F1C  D008               	goto	l3540
  7033  002F1E  0E00               	movlw	0
  7034  002F20  6E01               	movwf	___fleq@ff1,c
  7035  002F22  0E00               	movlw	0
  7036  002F24  6E02               	movwf	___fleq@ff1+1,c
  7037  002F26  0E00               	movlw	0
  7038  002F28  6E03               	movwf	___fleq@ff1+2,c
  7039  002F2A  0E00               	movlw	0
  7040  002F2C  6E04               	movwf	___fleq@ff1+3,c
  7041  002F2E                     l3540:
  7042  002F2E  0E00               	movlw	0
  7043  002F30  1405               	andwf	___fleq@ff2,w,c
  7044  002F32  6E09               	movwf	??___fleq& (0+255),c
  7045  002F34  0E00               	movlw	0
  7046  002F36  1406               	andwf	___fleq@ff2+1,w,c
  7047  002F38  6E0A               	movwf	(??___fleq+1)& (0+255),c
  7048  002F3A  0E80               	movlw	128
  7049  002F3C  1407               	andwf	___fleq@ff2+2,w,c
  7050  002F3E  6E0B               	movwf	(??___fleq+2)& (0+255),c
  7051  002F40  0E7F               	movlw	127
  7052  002F42  1408               	andwf	___fleq@ff2+3,w,c
  7053  002F44  6E0C               	movwf	(??___fleq+3)& (0+255),c
  7054  002F46  5009               	movf	??___fleq,w,c
  7055  002F48  100A               	iorwf	??___fleq+1,w,c
  7056  002F4A  100B               	iorwf	??___fleq+2,w,c
  7057  002F4C  100C               	iorwf	??___fleq+3,w,c
  7058  002F4E  A4D8               	btfss	status,2,c
  7059  002F50  D008               	goto	l3544
  7060  002F52  0E00               	movlw	0
  7061  002F54  6E05               	movwf	___fleq@ff2,c
  7062  002F56  0E00               	movlw	0
  7063  002F58  6E06               	movwf	___fleq@ff2+1,c
  7064  002F5A  0E00               	movlw	0
  7065  002F5C  6E07               	movwf	___fleq@ff2+2,c
  7066  002F5E  0E00               	movlw	0
  7067  002F60  6E08               	movwf	___fleq@ff2+3,c
  7068  002F62                     l3544:
  7069  002F62  5005               	movf	___fleq@ff2,w,c
  7070  002F64  1801               	xorwf	___fleq@ff1,w,c
  7071  002F66  E10A               	bnz	u4030
  7072  002F68  5006               	movf	___fleq@ff2+1,w,c
  7073  002F6A  1802               	xorwf	___fleq@ff1+1,w,c
  7074  002F6C  E107               	bnz	u4030
  7075  002F6E  5007               	movf	___fleq@ff2+2,w,c
  7076  002F70  1803               	xorwf	___fleq@ff1+2,w,c
  7077  002F72  E104               	bnz	u4030
  7078  002F74  5008               	movf	___fleq@ff2+3,w,c
  7079  002F76  1804               	xorwf	___fleq@ff1+3,w,c
  7080  002F78  B4D8               	btfsc	status,2,c
  7081  002F7A  D002               	goto	l3548
  7082  002F7C                     u4030:
  7083  002F7C  90D8               	bcf	status,0,c
  7084  002F7E  0012               	return	
  7085  002F80                     l3548:
  7086  002F80  80D8               	bsf	status,0,c
  7087  002F82  0012               	return		;funcret
  7088  002F84                     __end_of___fleq:
  7089                           	opt callstack 0
  7090                           
  7091 ;; *************** function ___fldiv *****************
  7092 ;; Defined at:
  7093 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  b               4   51[COMRAM] unsigned char 
  7096 ;;  a               4   55[COMRAM] unsigned char 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;  grs             4   70[COMRAM] unsigned long 
  7099 ;;  rem             4   63[COMRAM] unsigned long 
  7100 ;;  new_exp         2   68[COMRAM] short 
  7101 ;;  aexp            1   75[COMRAM] unsigned char 
  7102 ;;  bexp            1   74[COMRAM] unsigned char 
  7103 ;;  sign            1   67[COMRAM] unsigned char 
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  4   51[COMRAM] unsigned char 
  7106 ;; Registers used:
  7107 ;;		wreg, status,2, status,0
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7113 ;;      Params:         8       0       0       0       0       0       0       0       0
  7114 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7115 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7116 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7117 ;;Total ram usage:       25 bytes
  7118 ;; Hardware stack levels used:    1
  7119 ;; Hardware stack levels required when called:    1
  7120 ;; This function calls:
  7121 ;;		Nothing
  7122 ;; This function is called by:
  7123 ;;		_main
  7124 ;;		_efgtoa
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text25
  7129  002404                     __ptext25:
  7130                           	opt callstack 0
  7131  002404                     ___fldiv:
  7132                           	opt callstack 25
  7133                           
  7134                           ;incstack = 0
  7135  002404  5037               	movf	___fldiv@b+3,w,c
  7136  002406  0B80               	andlw	128
  7137  002408  6E44               	movwf	___fldiv@sign,c
  7138  00240A  5037               	movf	___fldiv@b+3,w,c
  7139  00240C  2437               	addwf	___fldiv@b+3,w,c
  7140  00240E  6E4B               	movwf	___fldiv@bexp,c
  7141  002410  BE36               	btfsc	___fldiv@b+2,7,c
  7142  002412  804B               	bsf	___fldiv@bexp,0,c
  7143  002414  504B               	movf	___fldiv@bexp,w,c
  7144  002416  B4D8               	btfsc	status,2,c
  7145  002418  D00D               	goto	l3198
  7146  00241A  284B               	incf	___fldiv@bexp,w,c
  7147  00241C  A4D8               	btfss	status,2,c
  7148  00241E  D008               	goto	l3194
  7149  002420  0E00               	movlw	0
  7150  002422  6E34               	movwf	___fldiv@b,c
  7151  002424  0E00               	movlw	0
  7152  002426  6E35               	movwf	___fldiv@b+1,c
  7153  002428  0E00               	movlw	0
  7154  00242A  6E36               	movwf	___fldiv@b+2,c
  7155  00242C  0E00               	movlw	0
  7156  00242E  6E37               	movwf	___fldiv@b+3,c
  7157  002430                     l3194:
  7158  002430  8E36               	bsf	___fldiv@b+2,7,c
  7159  002432  D006               	goto	L13
  7160  002434                     l3198:
  7161  002434  0E00               	movlw	0
  7162  002436  6E34               	movwf	___fldiv@b,c
  7163  002438  0E00               	movlw	0
  7164  00243A  6E35               	movwf	___fldiv@b+1,c
  7165  00243C  0E00               	movlw	0
  7166  00243E  6E36               	movwf	___fldiv@b+2,c
  7167  002440                     L13:
  7168  002440  0E00               	movlw	0
  7169  002442  6E37               	movwf	___fldiv@b+3,c
  7170  002444  503B               	movf	___fldiv@a+3,w,c
  7171  002446  0B80               	andlw	128
  7172  002448  1A44               	xorwf	___fldiv@sign,f,c
  7173  00244A  503B               	movf	___fldiv@a+3,w,c
  7174  00244C  243B               	addwf	___fldiv@a+3,w,c
  7175  00244E  6E4C               	movwf	___fldiv@aexp,c
  7176  002450  BE3A               	btfsc	___fldiv@a+2,7,c
  7177  002452  804C               	bsf	___fldiv@aexp,0,c
  7178  002454  504C               	movf	___fldiv@aexp,w,c
  7179  002456  B4D8               	btfsc	status,2,c
  7180  002458  D00D               	goto	l3218
  7181  00245A  284C               	incf	___fldiv@aexp,w,c
  7182  00245C  A4D8               	btfss	status,2,c
  7183  00245E  D008               	goto	l3214
  7184  002460  0E00               	movlw	0
  7185  002462  6E38               	movwf	___fldiv@a,c
  7186  002464  0E00               	movlw	0
  7187  002466  6E39               	movwf	___fldiv@a+1,c
  7188  002468  0E00               	movlw	0
  7189  00246A  6E3A               	movwf	___fldiv@a+2,c
  7190  00246C  0E00               	movlw	0
  7191  00246E  6E3B               	movwf	___fldiv@a+3,c
  7192  002470                     l3214:
  7193  002470  8E3A               	bsf	___fldiv@a+2,7,c
  7194  002472  D006               	goto	L14
  7195  002474                     l3218:
  7196  002474  0E00               	movlw	0
  7197  002476  6E38               	movwf	___fldiv@a,c
  7198  002478  0E00               	movlw	0
  7199  00247A  6E39               	movwf	___fldiv@a+1,c
  7200  00247C  0E00               	movlw	0
  7201  00247E  6E3A               	movwf	___fldiv@a+2,c
  7202  002480                     L14:
  7203  002480  0E00               	movlw	0
  7204  002482  6E3B               	movwf	___fldiv@a+3,c
  7205  002484  5038               	movf	___fldiv@a,w,c
  7206  002486  1039               	iorwf	___fldiv@a+1,w,c
  7207  002488  103A               	iorwf	___fldiv@a+2,w,c
  7208  00248A  103B               	iorwf	___fldiv@a+3,w,c
  7209  00248C  A4D8               	btfss	status,2,c
  7210  00248E  D017               	goto	l3232
  7211  002490  0E00               	movlw	0
  7212  002492  6E34               	movwf	___fldiv@b,c
  7213  002494  0E00               	movlw	0
  7214  002496  6E35               	movwf	___fldiv@b+1,c
  7215  002498  0E00               	movlw	0
  7216  00249A  6E36               	movwf	___fldiv@b+2,c
  7217  00249C  0E00               	movlw	0
  7218  00249E  6E37               	movwf	___fldiv@b+3,c
  7219  0024A0  0E80               	movlw	128
  7220  0024A2  1236               	iorwf	___fldiv@b+2,f,c
  7221  0024A4  0E7F               	movlw	127
  7222  0024A6  1237               	iorwf	___fldiv@b+3,f,c
  7223  0024A8                     l3226:
  7224  0024A8  5044               	movf	___fldiv@sign,w,c
  7225  0024AA  1237               	iorwf	___fldiv@b+3,f,c
  7226  0024AC  C034  F034         	movff	___fldiv@b,?___fldiv
  7227  0024B0  C035  F035         	movff	___fldiv@b+1,?___fldiv+1
  7228  0024B4  C036  F036         	movff	___fldiv@b+2,?___fldiv+2
  7229  0024B8  C037  F037         	movff	___fldiv@b+3,?___fldiv+3
  7230  0024BC  0012               	return	
  7231  0024BE                     l3232:
  7232  0024BE  504B               	movf	___fldiv@bexp,w,c
  7233  0024C0  A4D8               	btfss	status,2,c
  7234  0024C2  D009               	goto	l3240
  7235  0024C4  0E00               	movlw	0
  7236  0024C6  6E34               	movwf	?___fldiv,c
  7237  0024C8  0E00               	movlw	0
  7238  0024CA  6E35               	movwf	?___fldiv+1,c
  7239  0024CC  0E00               	movlw	0
  7240  0024CE  6E36               	movwf	?___fldiv+2,c
  7241  0024D0  0E00               	movlw	0
  7242  0024D2  6E37               	movwf	?___fldiv+3,c
  7243  0024D4  0012               	return	
  7244  0024D6                     l3240:
  7245  0024D6  504C               	movf	___fldiv@aexp,w,c
  7246  0024D8  C04B  F03C         	movff	___fldiv@bexp,??___fldiv
  7247  0024DC  6A3D               	clrf	(??___fldiv+1)& (0+255),c
  7248  0024DE  5E3C               	subwf	??___fldiv,f,c
  7249  0024E0  0E00               	movlw	0
  7250  0024E2  5A3D               	subwfb	??___fldiv+1,f,c
  7251  0024E4  0E7F               	movlw	127
  7252  0024E6  243C               	addwf	??___fldiv,w,c
  7253  0024E8  6E45               	movwf	___fldiv@new_exp,c
  7254  0024EA  0E00               	movlw	0
  7255  0024EC  203D               	addwfc	??___fldiv+1,w,c
  7256  0024EE  6E46               	movwf	___fldiv@new_exp+1,c
  7257  0024F0  C034  F040         	movff	___fldiv@b,___fldiv@rem
  7258  0024F4  C035  F041         	movff	___fldiv@b+1,___fldiv@rem+1
  7259  0024F8  C036  F042         	movff	___fldiv@b+2,___fldiv@rem+2
  7260  0024FC  C037  F043         	movff	___fldiv@b+3,___fldiv@rem+3
  7261  002500  0E00               	movlw	0
  7262  002502  6E34               	movwf	___fldiv@b,c
  7263  002504  0E00               	movlw	0
  7264  002506  6E35               	movwf	___fldiv@b+1,c
  7265  002508  0E00               	movlw	0
  7266  00250A  6E36               	movwf	___fldiv@b+2,c
  7267  00250C  0E00               	movlw	0
  7268  00250E  6E37               	movwf	___fldiv@b+3,c
  7269  002510  0E00               	movlw	0
  7270  002512  6E47               	movwf	___fldiv@grs,c
  7271  002514  0E00               	movlw	0
  7272  002516  6E48               	movwf	___fldiv@grs+1,c
  7273  002518  0E00               	movlw	0
  7274  00251A  6E49               	movwf	___fldiv@grs+2,c
  7275  00251C  0E00               	movlw	0
  7276  00251E  6E4A               	movwf	___fldiv@grs+3,c
  7277  002520  0E00               	movlw	0
  7278  002522  6E4C               	movwf	___fldiv@aexp,c
  7279  002524  D028               	goto	l919
  7280  002526                     l3250:
  7281  002526  504C               	movf	___fldiv@aexp,w,c
  7282  002528  B4D8               	btfsc	status,2,c
  7283  00252A  D011               	goto	l3258
  7284  00252C  90D8               	bcf	status,0,c
  7285  00252E  3640               	rlcf	___fldiv@rem,f,c
  7286  002530  3641               	rlcf	___fldiv@rem+1,f,c
  7287  002532  3642               	rlcf	___fldiv@rem+2,f,c
  7288  002534  3643               	rlcf	___fldiv@rem+3,f,c
  7289  002536  90D8               	bcf	status,0,c
  7290  002538  3634               	rlcf	___fldiv@b,f,c
  7291  00253A  3635               	rlcf	___fldiv@b+1,f,c
  7292  00253C  3636               	rlcf	___fldiv@b+2,f,c
  7293  00253E  3637               	rlcf	___fldiv@b+3,f,c
  7294  002540  BE4A               	btfsc	___fldiv@grs+3,7,c
  7295  002542  8034               	bsf	___fldiv@b,0,c
  7296  002544  90D8               	bcf	status,0,c
  7297  002546  3647               	rlcf	___fldiv@grs,f,c
  7298  002548  3648               	rlcf	___fldiv@grs+1,f,c
  7299  00254A  3649               	rlcf	___fldiv@grs+2,f,c
  7300  00254C  364A               	rlcf	___fldiv@grs+3,f,c
  7301  00254E                     l3258:
  7302  00254E  5038               	movf	___fldiv@a,w,c
  7303  002550  5C40               	subwf	___fldiv@rem,w,c
  7304  002552  5039               	movf	___fldiv@a+1,w,c
  7305  002554  5841               	subwfb	___fldiv@rem+1,w,c
  7306  002556  503A               	movf	___fldiv@a+2,w,c
  7307  002558  5842               	subwfb	___fldiv@rem+2,w,c
  7308  00255A  503B               	movf	___fldiv@a+3,w,c
  7309  00255C  5843               	subwfb	___fldiv@rem+3,w,c
  7310  00255E  A0D8               	btfss	status,0,c
  7311  002560  D009               	goto	l3264
  7312  002562  8C4A               	bsf	___fldiv@grs+3,6,c
  7313  002564  5038               	movf	___fldiv@a,w,c
  7314  002566  5E40               	subwf	___fldiv@rem,f,c
  7315  002568  5039               	movf	___fldiv@a+1,w,c
  7316  00256A  5A41               	subwfb	___fldiv@rem+1,f,c
  7317  00256C  503A               	movf	___fldiv@a+2,w,c
  7318  00256E  5A42               	subwfb	___fldiv@rem+2,f,c
  7319  002570  503B               	movf	___fldiv@a+3,w,c
  7320  002572  5A43               	subwfb	___fldiv@rem+3,f,c
  7321  002574                     l3264:
  7322  002574  2A4C               	incf	___fldiv@aexp,f,c
  7323  002576                     l919:
  7324  002576  0E19               	movlw	25
  7325  002578  644C               	cpfsgt	___fldiv@aexp,c
  7326  00257A  D7D5               	goto	l3250
  7327  00257C  5040               	movf	___fldiv@rem,w,c
  7328  00257E  1041               	iorwf	___fldiv@rem+1,w,c
  7329  002580  1042               	iorwf	___fldiv@rem+2,w,c
  7330  002582  1043               	iorwf	___fldiv@rem+3,w,c
  7331  002584  B4D8               	btfsc	status,2,c
  7332  002586  D011               	goto	l3276
  7333  002588  8047               	bsf	___fldiv@grs,0,c
  7334  00258A  D00F               	goto	l3276
  7335  00258C                     l3270:
  7336  00258C  90D8               	bcf	status,0,c
  7337  00258E  3634               	rlcf	___fldiv@b,f,c
  7338  002590  3635               	rlcf	___fldiv@b+1,f,c
  7339  002592  3636               	rlcf	___fldiv@b+2,f,c
  7340  002594  3637               	rlcf	___fldiv@b+3,f,c
  7341  002596  BE4A               	btfsc	___fldiv@grs+3,7,c
  7342  002598  8034               	bsf	___fldiv@b,0,c
  7343  00259A  90D8               	bcf	status,0,c
  7344  00259C  3647               	rlcf	___fldiv@grs,f,c
  7345  00259E  3648               	rlcf	___fldiv@grs+1,f,c
  7346  0025A0  3649               	rlcf	___fldiv@grs+2,f,c
  7347  0025A2  364A               	rlcf	___fldiv@grs+3,f,c
  7348  0025A4  0645               	decf	___fldiv@new_exp,f,c
  7349  0025A6  A0D8               	btfss	status,0,c
  7350  0025A8  0646               	decf	___fldiv@new_exp+1,f,c
  7351  0025AA                     l3276:
  7352  0025AA  AE36               	btfss	___fldiv@b+2,7,c
  7353  0025AC  D7EF               	goto	l3270
  7354  0025AE  0E00               	movlw	0
  7355  0025B0  6E4C               	movwf	___fldiv@aexp,c
  7356  0025B2  AE4A               	btfss	___fldiv@grs+3,7,c
  7357  0025B4  D017               	goto	l930
  7358  0025B6  0EFF               	movlw	255
  7359  0025B8  1447               	andwf	___fldiv@grs,w,c
  7360  0025BA  6E3C               	movwf	??___fldiv& (0+255),c
  7361  0025BC  0EFF               	movlw	255
  7362  0025BE  1448               	andwf	___fldiv@grs+1,w,c
  7363  0025C0  6E3D               	movwf	(??___fldiv+1)& (0+255),c
  7364  0025C2  0EFF               	movlw	255
  7365  0025C4  1449               	andwf	___fldiv@grs+2,w,c
  7366  0025C6  6E3E               	movwf	(??___fldiv+2)& (0+255),c
  7367  0025C8  0E7F               	movlw	127
  7368  0025CA  144A               	andwf	___fldiv@grs+3,w,c
  7369  0025CC  6E3F               	movwf	(??___fldiv+3)& (0+255),c
  7370  0025CE  503C               	movf	??___fldiv,w,c
  7371  0025D0  103D               	iorwf	??___fldiv+1,w,c
  7372  0025D2  103E               	iorwf	??___fldiv+2,w,c
  7373  0025D4  103F               	iorwf	??___fldiv+3,w,c
  7374  0025D6  B4D8               	btfsc	status,2,c
  7375  0025D8  D003               	goto	l931
  7376  0025DA                     u3630:
  7377  0025DA  0E01               	movlw	1
  7378  0025DC  6E4C               	movwf	___fldiv@aexp,c
  7379  0025DE  D002               	goto	l930
  7380  0025E0                     l931:
  7381  0025E0  B034               	btfsc	___fldiv@b,0,c
  7382  0025E2  D7FB               	goto	u3630
  7383  0025E4                     l930:
  7384  0025E4  504C               	movf	___fldiv@aexp,w,c
  7385  0025E6  B4D8               	btfsc	status,2,c
  7386  0025E8  D01F               	goto	l3296
  7387  0025EA  0E01               	movlw	1
  7388  0025EC  2634               	addwf	___fldiv@b,f,c
  7389  0025EE  0E00               	movlw	0
  7390  0025F0  2235               	addwfc	___fldiv@b+1,f,c
  7391  0025F2  2236               	addwfc	___fldiv@b+2,f,c
  7392  0025F4  2237               	addwfc	___fldiv@b+3,f,c
  7393  0025F6  A037               	btfss	___fldiv@b+3,0,c
  7394  0025F8  D017               	goto	l3296
  7395  0025FA  C034  F03C         	movff	___fldiv@b,??___fldiv
  7396  0025FE  C035  F03D         	movff	___fldiv@b+1,??___fldiv+1
  7397  002602  C036  F03E         	movff	___fldiv@b+2,??___fldiv+2
  7398  002606  C037  F03F         	movff	___fldiv@b+3,??___fldiv+3
  7399  00260A  343F               	rlcf	??___fldiv+3,w,c
  7400  00260C  323F               	rrcf	??___fldiv+3,f,c
  7401  00260E  323E               	rrcf	??___fldiv+2,f,c
  7402  002610  323D               	rrcf	??___fldiv+1,f,c
  7403  002612  323C               	rrcf	??___fldiv,f,c
  7404  002614  C03C  F034         	movff	??___fldiv,___fldiv@b
  7405  002618  C03D  F035         	movff	??___fldiv+1,___fldiv@b+1
  7406  00261C  C03E  F036         	movff	??___fldiv+2,___fldiv@b+2
  7407  002620  C03F  F037         	movff	??___fldiv+3,___fldiv@b+3
  7408  002624  4A45               	infsnz	___fldiv@new_exp,f,c
  7409  002626  2A46               	incf	___fldiv@new_exp+1,f,c
  7410  002628                     l3296:
  7411  002628  BE46               	btfsc	___fldiv@new_exp+1,7,c
  7412  00262A  D010               	goto	l3300
  7413  00262C  5046               	movf	___fldiv@new_exp+1,w,c
  7414  00262E  E103               	bnz	u3670
  7415  002630  2845               	incf	___fldiv@new_exp,w,c
  7416  002632  A0D8               	btfss	status,0,c
  7417  002634  D00B               	goto	l3300
  7418  002636                     u3670:
  7419  002636  0E00               	movlw	0
  7420  002638  6E46               	movwf	___fldiv@new_exp+1,c
  7421  00263A  6845               	setf	___fldiv@new_exp,c
  7422  00263C  0E00               	movlw	0
  7423  00263E  6E34               	movwf	___fldiv@b,c
  7424  002640  0E00               	movlw	0
  7425  002642  6E35               	movwf	___fldiv@b+1,c
  7426  002644  0E00               	movlw	0
  7427  002646  6E36               	movwf	___fldiv@b+2,c
  7428  002648  0E00               	movlw	0
  7429  00264A  6E37               	movwf	___fldiv@b+3,c
  7430  00264C                     l3300:
  7431  00264C  BE46               	btfsc	___fldiv@new_exp+1,7,c
  7432  00264E  D005               	goto	u3680
  7433  002650  5046               	movf	___fldiv@new_exp+1,w,c
  7434  002652  E111               	bnz	l3304
  7435  002654  0445               	decf	___fldiv@new_exp,w,c
  7436  002656  B0D8               	btfsc	status,0,c
  7437  002658  D00E               	goto	l3304
  7438  00265A                     u3680:
  7439  00265A  0E00               	movlw	0
  7440  00265C  6E46               	movwf	___fldiv@new_exp+1,c
  7441  00265E  0E00               	movlw	0
  7442  002660  6E45               	movwf	___fldiv@new_exp,c
  7443  002662  0E00               	movlw	0
  7444  002664  6E34               	movwf	___fldiv@b,c
  7445  002666  0E00               	movlw	0
  7446  002668  6E35               	movwf	___fldiv@b+1,c
  7447  00266A  0E00               	movlw	0
  7448  00266C  6E36               	movwf	___fldiv@b+2,c
  7449  00266E  0E00               	movlw	0
  7450  002670  6E37               	movwf	___fldiv@b+3,c
  7451  002672  0E00               	movlw	0
  7452  002674  6E44               	movwf	___fldiv@sign,c
  7453  002676                     l3304:
  7454  002676  C045  F04B         	movff	___fldiv@new_exp,___fldiv@bexp
  7455  00267A  A04B               	btfss	___fldiv@bexp,0,c
  7456  00267C  D002               	goto	l3310
  7457  00267E  8E36               	bsf	___fldiv@b+2,7,c
  7458  002680  D001               	goto	l3312
  7459  002682                     l3310:
  7460  002682  9E36               	bcf	___fldiv@b+2,7,c
  7461  002684                     l3312:
  7462  002684  90D8               	bcf	status,0,c
  7463  002686  304B               	rrcf	___fldiv@bexp,w,c
  7464  002688  6E37               	movwf	___fldiv@b+3,c
  7465  00268A  D70E               	goto	l3226
  7466  00268C                     __end_of___fldiv:
  7467                           	opt callstack 0
  7468                           
  7469 ;; *************** function ___awmod *****************
  7470 ;; Defined at:
  7471 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  dividend        2    0[COMRAM] int 
  7474 ;;  divisor         2    2[COMRAM] int 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;  sign            1    5[COMRAM] unsigned char 
  7477 ;;  counter         1    4[COMRAM] unsigned char 
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  2    0[COMRAM] int 
  7480 ;; Registers used:
  7481 ;;		wreg, status,2, status,0
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7487 ;;      Params:         4       0       0       0       0       0       0       0       0
  7488 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7490 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7491 ;;Total ram usage:        6 bytes
  7492 ;; Hardware stack levels used:    1
  7493 ;; Hardware stack levels required when called:    1
  7494 ;; This function calls:
  7495 ;;		Nothing
  7496 ;; This function is called by:
  7497 ;;		_efgtoa
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text26
  7502  003082                     __ptext26:
  7503                           	opt callstack 0
  7504  003082                     ___awmod:
  7505                           	opt callstack 25
  7506                           
  7507                           ;incstack = 0
  7508  003082  0E00               	movlw	0
  7509  003084  6E06               	movwf	___awmod@sign,c
  7510  003086  AE02               	btfss	___awmod@dividend+1,7,c
  7511  003088  D006               	goto	l3508
  7512  00308A  6C01               	negf	___awmod@dividend,c
  7513  00308C  1E02               	comf	___awmod@dividend+1,f,c
  7514  00308E  B0D8               	btfsc	status,0,c
  7515  003090  2A02               	incf	___awmod@dividend+1,f,c
  7516  003092  0E01               	movlw	1
  7517  003094  6E06               	movwf	___awmod@sign,c
  7518  003096                     l3508:
  7519  003096  AE04               	btfss	___awmod@divisor+1,7,c
  7520  003098  D004               	goto	l3512
  7521  00309A  6C03               	negf	___awmod@divisor,c
  7522  00309C  1E04               	comf	___awmod@divisor+1,f,c
  7523  00309E  B0D8               	btfsc	status,0,c
  7524  0030A0  2A04               	incf	___awmod@divisor+1,f,c
  7525  0030A2                     l3512:
  7526  0030A2  5003               	movf	___awmod@divisor,w,c
  7527  0030A4  1004               	iorwf	___awmod@divisor+1,w,c
  7528  0030A6  B4D8               	btfsc	status,2,c
  7529  0030A8  D018               	goto	l3528
  7530  0030AA  0E01               	movlw	1
  7531  0030AC  6E05               	movwf	___awmod@counter,c
  7532  0030AE  D004               	goto	l3518
  7533  0030B0                     l3516:
  7534  0030B0  90D8               	bcf	status,0,c
  7535  0030B2  3603               	rlcf	___awmod@divisor,f,c
  7536  0030B4  3604               	rlcf	___awmod@divisor+1,f,c
  7537  0030B6  2A05               	incf	___awmod@counter,f,c
  7538  0030B8                     l3518:
  7539  0030B8  AE04               	btfss	___awmod@divisor+1,7,c
  7540  0030BA  D7FA               	goto	l3516
  7541  0030BC                     u3980:
  7542  0030BC  5003               	movf	___awmod@divisor,w,c
  7543  0030BE  5C01               	subwf	___awmod@dividend,w,c
  7544  0030C0  5004               	movf	___awmod@divisor+1,w,c
  7545  0030C2  5802               	subwfb	___awmod@dividend+1,w,c
  7546  0030C4  A0D8               	btfss	status,0,c
  7547  0030C6  D004               	goto	l3524
  7548  0030C8  5003               	movf	___awmod@divisor,w,c
  7549  0030CA  5E01               	subwf	___awmod@dividend,f,c
  7550  0030CC  5004               	movf	___awmod@divisor+1,w,c
  7551  0030CE  5A02               	subwfb	___awmod@dividend+1,f,c
  7552  0030D0                     l3524:
  7553  0030D0  90D8               	bcf	status,0,c
  7554  0030D2  3204               	rrcf	___awmod@divisor+1,f,c
  7555  0030D4  3203               	rrcf	___awmod@divisor,f,c
  7556  0030D6  2E05               	decfsz	___awmod@counter,f,c
  7557  0030D8  D7F1               	goto	u3980
  7558  0030DA                     l3528:
  7559  0030DA  5006               	movf	___awmod@sign,w,c
  7560  0030DC  B4D8               	btfsc	status,2,c
  7561  0030DE  D004               	goto	l3532
  7562  0030E0  6C01               	negf	___awmod@dividend,c
  7563  0030E2  1E02               	comf	___awmod@dividend+1,f,c
  7564  0030E4  B0D8               	btfsc	status,0,c
  7565  0030E6  2A02               	incf	___awmod@dividend+1,f,c
  7566  0030E8                     l3532:
  7567  0030E8  C001  F001         	movff	___awmod@dividend,?___awmod
  7568  0030EC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7569  0030F0  0012               	return		;funcret
  7570  0030F2                     __end_of___awmod:
  7571                           	opt callstack 0
  7572                           
  7573 ;; *************** function ___awdiv *****************
  7574 ;; Defined at:
  7575 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;  dividend        2    0[COMRAM] int 
  7578 ;;  divisor         2    2[COMRAM] int 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;  quotient        2    6[COMRAM] int 
  7581 ;;  sign            1    5[COMRAM] unsigned char 
  7582 ;;  counter         1    4[COMRAM] unsigned char 
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  2    0[COMRAM] int 
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7592 ;;      Params:         4       0       0       0       0       0       0       0       0
  7593 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7594 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7595 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7596 ;;Total ram usage:        8 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:    1
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_main
  7603 ;;		_efgtoa
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text27
  7608  002F84                     __ptext27:
  7609                           	opt callstack 0
  7610  002F84                     ___awdiv:
  7611                           	opt callstack 25
  7612                           
  7613                           ;incstack = 0
  7614  002F84  0E00               	movlw	0
  7615  002F86  6E06               	movwf	___awdiv@sign,c
  7616  002F88  AE04               	btfss	___awdiv@divisor+1,7,c
  7617  002F8A  D006               	goto	l3464
  7618  002F8C  6C03               	negf	___awdiv@divisor,c
  7619  002F8E  1E04               	comf	___awdiv@divisor+1,f,c
  7620  002F90  B0D8               	btfsc	status,0,c
  7621  002F92  2A04               	incf	___awdiv@divisor+1,f,c
  7622  002F94  0E01               	movlw	1
  7623  002F96  6E06               	movwf	___awdiv@sign,c
  7624  002F98                     l3464:
  7625  002F98  AE02               	btfss	___awdiv@dividend+1,7,c
  7626  002F9A  D006               	goto	l3470
  7627  002F9C  6C01               	negf	___awdiv@dividend,c
  7628  002F9E  1E02               	comf	___awdiv@dividend+1,f,c
  7629  002FA0  B0D8               	btfsc	status,0,c
  7630  002FA2  2A02               	incf	___awdiv@dividend+1,f,c
  7631  002FA4  0E01               	movlw	1
  7632  002FA6  1A06               	xorwf	___awdiv@sign,f,c
  7633  002FA8                     l3470:
  7634  002FA8  0E00               	movlw	0
  7635  002FAA  6E08               	movwf	___awdiv@quotient+1,c
  7636  002FAC  0E00               	movlw	0
  7637  002FAE  6E07               	movwf	___awdiv@quotient,c
  7638  002FB0  5003               	movf	___awdiv@divisor,w,c
  7639  002FB2  1004               	iorwf	___awdiv@divisor+1,w,c
  7640  002FB4  B4D8               	btfsc	status,2,c
  7641  002FB6  D01C               	goto	l3492
  7642  002FB8  0E01               	movlw	1
  7643  002FBA  6E05               	movwf	___awdiv@counter,c
  7644  002FBC  D004               	goto	l3478
  7645  002FBE                     l3476:
  7646  002FBE  90D8               	bcf	status,0,c
  7647  002FC0  3603               	rlcf	___awdiv@divisor,f,c
  7648  002FC2  3604               	rlcf	___awdiv@divisor+1,f,c
  7649  002FC4  2A05               	incf	___awdiv@counter,f,c
  7650  002FC6                     l3478:
  7651  002FC6  AE04               	btfss	___awdiv@divisor+1,7,c
  7652  002FC8  D7FA               	goto	l3476
  7653  002FCA                     u3920:
  7654  002FCA  90D8               	bcf	status,0,c
  7655  002FCC  3607               	rlcf	___awdiv@quotient,f,c
  7656  002FCE  3608               	rlcf	___awdiv@quotient+1,f,c
  7657  002FD0  5003               	movf	___awdiv@divisor,w,c
  7658  002FD2  5C01               	subwf	___awdiv@dividend,w,c
  7659  002FD4  5004               	movf	___awdiv@divisor+1,w,c
  7660  002FD6  5802               	subwfb	___awdiv@dividend+1,w,c
  7661  002FD8  A0D8               	btfss	status,0,c
  7662  002FDA  D005               	goto	l3488
  7663  002FDC  5003               	movf	___awdiv@divisor,w,c
  7664  002FDE  5E01               	subwf	___awdiv@dividend,f,c
  7665  002FE0  5004               	movf	___awdiv@divisor+1,w,c
  7666  002FE2  5A02               	subwfb	___awdiv@dividend+1,f,c
  7667  002FE4  8007               	bsf	___awdiv@quotient,0,c
  7668  002FE6                     l3488:
  7669  002FE6  90D8               	bcf	status,0,c
  7670  002FE8  3204               	rrcf	___awdiv@divisor+1,f,c
  7671  002FEA  3203               	rrcf	___awdiv@divisor,f,c
  7672  002FEC  2E05               	decfsz	___awdiv@counter,f,c
  7673  002FEE  D7ED               	goto	u3920
  7674  002FF0                     l3492:
  7675  002FF0  5006               	movf	___awdiv@sign,w,c
  7676  002FF2  B4D8               	btfsc	status,2,c
  7677  002FF4  D004               	goto	l3496
  7678  002FF6  6C07               	negf	___awdiv@quotient,c
  7679  002FF8  1E08               	comf	___awdiv@quotient+1,f,c
  7680  002FFA  B0D8               	btfsc	status,0,c
  7681  002FFC  2A08               	incf	___awdiv@quotient+1,f,c
  7682  002FFE                     l3496:
  7683  002FFE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7684  003002  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7685  003006  0012               	return		;funcret
  7686  003008                     __end_of___awdiv:
  7687                           	opt callstack 0
  7688                           
  7689 ;; *************** function _atoi *****************
  7690 ;; Defined at:
  7691 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7694 ;;		 -> STR_3(14), STR_2(12), STR_1(13), 
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;  n               2   20[COMRAM] int 
  7697 ;;  neg             2   13[COMRAM] int 
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  2    7[COMRAM] int 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7707 ;;      Params:         2       0       0       0       0       0       0       0       0
  7708 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7709 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7710 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7711 ;;Total ram usage:       15 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; Hardware stack levels required when called:    2
  7714 ;; This function calls:
  7715 ;;		___wmul
  7716 ;;		_isdigit
  7717 ;;		_isspace
  7718 ;; This function is called by:
  7719 ;;		_vfpfcnvrt
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           	psect	text28
  7724  002846                     __ptext28:
  7725                           	opt callstack 0
  7726  002846                     _atoi:
  7727                           	opt callstack 25
  7728                           
  7729                           ;incstack = 0
  7730  002846  0E00               	movlw	0
  7731  002848  6E16               	movwf	atoi@n+1,c
  7732  00284A  0E00               	movlw	0
  7733  00284C  6E15               	movwf	atoi@n,c
  7734  00284E  0E00               	movlw	0
  7735  002850  6E0F               	movwf	atoi@neg+1,c
  7736  002852  0E00               	movlw	0
  7737  002854  6E0E               	movwf	atoi@neg,c
  7738  002856  D002               	goto	l3956
  7739  002858                     l3954:
  7740  002858  4A08               	infsnz	atoi@s,f,c
  7741  00285A  2A09               	incf	atoi@s+1,f,c
  7742  00285C                     l3956:
  7743  00285C  0E01               	movlw	1
  7744  00285E  6E14               	movwf	_atoi$859,c
  7745  002860  C008  FFF6         	movff	atoi@s,tblptrl
  7746  002864  C009  FFF7         	movff	atoi@s+1,tblptrh
  7747  002868                     	if	0	;tblptru may be non-zero
  7748  002868                     	endif
  7749  002868                     	if	0	;tblptru may be non-zero
  7750  002868                     	endif
  7751  002868  0008               	tblrd		*
  7752  00286A  50F5               	movf	tablat,w,c
  7753  00286C  0A20               	xorlw	32
  7754  00286E  B4D8               	btfsc	status,2,c
  7755  002870  D018               	goto	l3964
  7756  002872  0EF7               	movlw	247
  7757  002874  6E0A               	movwf	??_atoi& (0+255),c
  7758  002876  0EFF               	movlw	255
  7759  002878  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7760  00287A  C008  FFF6         	movff	atoi@s,tblptrl
  7761  00287E  C009  FFF7         	movff	atoi@s+1,tblptrh
  7762  002882                     	if	0	;tblptru may be non-zero
  7763  002882                     	endif
  7764  002882                     	if	0	;tblptru may be non-zero
  7765  002882                     	endif
  7766  002882  0008               	tblrd		*
  7767  002884  50F5               	movf	tablat,w,c
  7768  002886  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7769  002888  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7770  00288A  500A               	movf	??_atoi,w,c
  7771  00288C  260C               	addwf	??_atoi+2,f,c
  7772  00288E  500B               	movf	??_atoi+1,w,c
  7773  002890  220D               	addwfc	??_atoi+3,f,c
  7774  002892  500D               	movf	??_atoi+3,w,c
  7775  002894  E104               	bnz	u4740
  7776  002896  0E05               	movlw	5
  7777  002898  5C0C               	subwf	??_atoi+2,w,c
  7778  00289A  A0D8               	btfss	status,0,c
  7779  00289C  D002               	goto	l3964
  7780  00289E                     u4740:
  7781  00289E  0E00               	movlw	0
  7782  0028A0  6E14               	movwf	_atoi$859,c
  7783  0028A2                     l3964:
  7784  0028A2  C014  F010         	movff	_atoi$859,_atoi$858
  7785  0028A6  6A11               	clrf	_atoi$858+1,c
  7786  0028A8  5010               	movf	_atoi$858,w,c
  7787  0028AA  1011               	iorwf	_atoi$858+1,w,c
  7788  0028AC  B4D8               	btfsc	status,2,c
  7789  0028AE  D008               	goto	l3974
  7790  0028B0  D7D3               	goto	l3954
  7791  0028B2                     l3970:
  7792  0028B2  0E00               	movlw	0
  7793  0028B4  6E0F               	movwf	atoi@neg+1,c
  7794  0028B6  0E01               	movlw	1
  7795  0028B8  6E0E               	movwf	atoi@neg,c
  7796  0028BA                     l3972:
  7797  0028BA  4A08               	infsnz	atoi@s,f,c
  7798  0028BC  2A09               	incf	atoi@s+1,f,c
  7799  0028BE  D02E               	goto	l3980
  7800  0028C0                     l3974:
  7801  0028C0  C008  FFF6         	movff	atoi@s,tblptrl
  7802  0028C4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7803  0028C8                     	if	0	;tblptru may be non-zero
  7804  0028C8                     	endif
  7805  0028C8                     	if	0	;tblptru may be non-zero
  7806  0028C8                     	endif
  7807  0028C8  0008               	tblrd		*
  7808  0028CA  50F5               	movf	tablat,w,c
  7809  0028CC  6E0A               	movwf	??_atoi& (0+255),c
  7810  0028CE  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7811                           
  7812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7813                           ; Switch size 1, requested type "simple"
  7814                           ; Number of cases is 1, Range of values is 0 to 0
  7815                           ; switch strategies available:
  7816                           ; Name         Instructions Cycles
  7817                           ; simple_byte            4     3 (average)
  7818                           ;	Chosen strategy is simple_byte
  7819  0028D0  500B               	movf	??_atoi+1,w,c
  7820  0028D2  0A00               	xorlw	0	; case 0
  7821  0028D4  A4D8               	btfss	status,2,c
  7822  0028D6  D022               	goto	l3980
  7823                           
  7824                           ; Switch size 1, requested type "simple"
  7825                           ; Number of cases is 2, Range of values is 43 to 45
  7826                           ; switch strategies available:
  7827                           ; Name         Instructions Cycles
  7828                           ; simple_byte            7     4 (average)
  7829                           ;	Chosen strategy is simple_byte
  7830  0028D8  500A               	movf	??_atoi,w,c
  7831  0028DA  0A2B               	xorlw	43	; case 43
  7832  0028DC  B4D8               	btfsc	status,2,c
  7833  0028DE  D7ED               	goto	l3972
  7834  0028E0  0A06               	xorlw	6	; case 45
  7835  0028E2  B4D8               	btfsc	status,2,c
  7836  0028E4  D7E6               	goto	l3970
  7837  0028E6  D01A               	goto	l3980
  7838  0028E8                     l3976:
  7839  0028E8  C015  F001         	movff	atoi@n,___wmul@multiplier
  7840  0028EC  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7841  0028F0  0E00               	movlw	0
  7842  0028F2  6E04               	movwf	___wmul@multiplicand+1,c
  7843  0028F4  0E0A               	movlw	10
  7844  0028F6  6E03               	movwf	___wmul@multiplicand,c
  7845  0028F8  EC82  F01A         	call	___wmul	;wreg free
  7846  0028FC  C008  FFF6         	movff	atoi@s,tblptrl
  7847  002900  C009  FFF7         	movff	atoi@s+1,tblptrh
  7848  002904                     	if	0	;tblptru may be non-zero
  7849  002904                     	endif
  7850  002904                     	if	0	;tblptru may be non-zero
  7851  002904                     	endif
  7852  002904  0008               	tblrd		*
  7853  002906  50F5               	movf	tablat,w,c
  7854  002908  5E01               	subwf	?___wmul,f,c
  7855  00290A  0E00               	movlw	0
  7856  00290C  5A02               	subwfb	?___wmul+1,f,c
  7857  00290E  0E30               	movlw	48
  7858  002910  2401               	addwf	?___wmul,w,c
  7859  002912  6E15               	movwf	atoi@n,c
  7860  002914  0E00               	movlw	0
  7861  002916  2002               	addwfc	?___wmul+1,w,c
  7862  002918  6E16               	movwf	atoi@n+1,c
  7863  00291A  D7CF               	goto	l3972
  7864  00291C                     l3980:
  7865  00291C  0ED0               	movlw	208
  7866  00291E  6E0A               	movwf	??_atoi& (0+255),c
  7867  002920  0EFF               	movlw	255
  7868  002922  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7869  002924  C008  FFF6         	movff	atoi@s,tblptrl
  7870  002928  C009  FFF7         	movff	atoi@s+1,tblptrh
  7871  00292C                     	if	0	;tblptru may be non-zero
  7872  00292C                     	endif
  7873  00292C                     	if	0	;tblptru may be non-zero
  7874  00292C                     	endif
  7875  00292C  0008               	tblrd		*
  7876  00292E  50F5               	movf	tablat,w,c
  7877  002930  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7878  002932  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7879  002934  500A               	movf	??_atoi,w,c
  7880  002936  260C               	addwf	??_atoi+2,f,c
  7881  002938  500B               	movf	??_atoi+1,w,c
  7882  00293A  220D               	addwfc	??_atoi+3,f,c
  7883  00293C  500D               	movf	??_atoi+3,w,c
  7884  00293E  E106               	bnz	u4760
  7885  002940  0E0A               	movlw	10
  7886  002942  5C0C               	subwf	??_atoi+2,w,c
  7887  002944  B0D8               	btfsc	status,0,c
  7888  002946  D002               	goto	u4760
  7889  002948  0E01               	movlw	1
  7890  00294A  D001               	goto	u4770
  7891  00294C                     u4760:
  7892  00294C  0E00               	movlw	0
  7893  00294E                     u4770:
  7894  00294E  6E12               	movwf	_atoi$860,c
  7895  002950  6A13               	clrf	_atoi$860+1,c
  7896  002952  5012               	movf	_atoi$860,w,c
  7897  002954  1013               	iorwf	_atoi$860+1,w,c
  7898  002956  A4D8               	btfss	status,2,c
  7899  002958  D7C7               	goto	l3976
  7900  00295A  500E               	movf	atoi@neg,w,c
  7901  00295C  100F               	iorwf	atoi@neg+1,w,c
  7902  00295E  A4D8               	btfss	status,2,c
  7903  002960  D00D               	goto	l1045
  7904  002962  C015  F00A         	movff	atoi@n,??_atoi
  7905  002966  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7906  00296A  1E0A               	comf	??_atoi,f,c
  7907  00296C  1E0B               	comf	??_atoi+1,f,c
  7908  00296E  4A0A               	infsnz	??_atoi,f,c
  7909  002970  2A0B               	incf	??_atoi+1,f,c
  7910  002972  C00A  F008         	movff	??_atoi,?_atoi
  7911  002976  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7912  00297A  0012               	return	
  7913  00297C                     l1045:
  7914  00297C  C015  F008         	movff	atoi@n,?_atoi
  7915  002980  C016  F009         	movff	atoi@n+1,?_atoi+1
  7916  002984  0012               	return		;funcret
  7917  002986                     __end_of_atoi:
  7918                           	opt callstack 0
  7919                           
  7920 ;; *************** function _isspace *****************
  7921 ;; Defined at:
  7922 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  c               2    0[COMRAM] int 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  2    0[COMRAM] int 
  7929 ;; Registers used:
  7930 ;;		wreg, status,2, status,0
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7936 ;;      Params:         2       0       0       0       0       0       0       0       0
  7937 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7938 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7939 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7940 ;;Total ram usage:        7 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    1
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		_atoi
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text29
  7951  003318                     __ptext29:
  7952                           	opt callstack 0
  7953  003318                     _isspace:
  7954                           	opt callstack 25
  7955                           
  7956                           ;incstack = 0
  7957  003318  0E01               	movlw	1
  7958  00331A  6E07               	movwf	_isspace$889,c
  7959  00331C  0E20               	movlw	32
  7960  00331E  1801               	xorwf	isspace@c,w,c
  7961  003320  1002               	iorwf	isspace@c+1,w,c
  7962  003322  B4D8               	btfsc	status,2,c
  7963  003324  D014               	goto	l3634
  7964  003326  0EF7               	movlw	247
  7965  003328  6E03               	movwf	??_isspace& (0+255),c
  7966  00332A  0EFF               	movlw	255
  7967  00332C  6E04               	movwf	(??_isspace+1)& (0+255),c
  7968  00332E  C001  F005         	movff	isspace@c,??_isspace+2
  7969  003332  C002  F006         	movff	isspace@c+1,??_isspace+3
  7970  003336  5003               	movf	??_isspace,w,c
  7971  003338  2605               	addwf	??_isspace+2,f,c
  7972  00333A  5004               	movf	??_isspace+1,w,c
  7973  00333C  2206               	addwfc	??_isspace+3,f,c
  7974  00333E  5006               	movf	??_isspace+3,w,c
  7975  003340  E104               	bnz	u4180
  7976  003342  0E05               	movlw	5
  7977  003344  5C05               	subwf	??_isspace+2,w,c
  7978  003346  A0D8               	btfss	status,0,c
  7979  003348  D002               	goto	l3634
  7980  00334A                     u4180:
  7981  00334A  0E00               	movlw	0
  7982  00334C  6E07               	movwf	_isspace$889,c
  7983  00334E                     l3634:
  7984  00334E  C007  F001         	movff	_isspace$889,?_isspace
  7985  003352  6A02               	clrf	?_isspace+1,c
  7986  003354  0012               	return		;funcret
  7987  003356                     __end_of_isspace:
  7988                           	opt callstack 0
  7989                           
  7990 ;; *************** function _isdigit *****************
  7991 ;; Defined at:
  7992 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  c               2    0[COMRAM] int 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;		None
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  2    0[COMRAM] int 
  7999 ;; Registers used:
  8000 ;;		wreg, status,2, status,0
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8006 ;;      Params:         2       0       0       0       0       0       0       0       0
  8007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8008 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8009 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8010 ;;Total ram usage:        6 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    1
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		_vfpfcnvrt
  8017 ;;		_atoi
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           	psect	text30
  8022  003426                     __ptext30:
  8023                           	opt callstack 0
  8024  003426                     _isdigit:
  8025                           	opt callstack 26
  8026                           
  8027                           ;incstack = 0
  8028  003426  0ED0               	movlw	208
  8029  003428  6E03               	movwf	??_isdigit& (0+255),c
  8030  00342A  0EFF               	movlw	255
  8031  00342C  6E04               	movwf	(??_isdigit+1)& (0+255),c
  8032  00342E  C001  F005         	movff	isdigit@c,??_isdigit+2
  8033  003432  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8034  003436  5003               	movf	??_isdigit,w,c
  8035  003438  2605               	addwf	??_isdigit+2,f,c
  8036  00343A  5004               	movf	??_isdigit+1,w,c
  8037  00343C  2206               	addwfc	??_isdigit+3,f,c
  8038  00343E  5006               	movf	??_isdigit+3,w,c
  8039  003440  E106               	bnz	u3450
  8040  003442  0E0A               	movlw	10
  8041  003444  5C05               	subwf	??_isdigit+2,w,c
  8042  003446  B0D8               	btfsc	status,0,c
  8043  003448  D002               	goto	u3450
  8044  00344A  0E01               	movlw	1
  8045  00344C  D001               	goto	u3460
  8046  00344E                     u3450:
  8047  00344E  0E00               	movlw	0
  8048  003450                     u3460:
  8049  003450  6E01               	movwf	?_isdigit,c
  8050  003452  6A02               	clrf	?_isdigit+1,c
  8051  003454  0012               	return		;funcret
  8052  003456                     __end_of_isdigit:
  8053                           	opt callstack 0
  8054                           
  8055 ;; *************** function ___wmul *****************
  8056 ;; Defined at:
  8057 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  multiplier      2    0[COMRAM] unsigned int 
  8060 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;  product         2    4[COMRAM] unsigned int 
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  2    0[COMRAM] unsigned int 
  8065 ;; Registers used:
  8066 ;;		wreg, status,2, status,0, prodl, prodh
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8072 ;;      Params:         4       0       0       0       0       0       0       0       0
  8073 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8075 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8076 ;;Total ram usage:        6 bytes
  8077 ;; Hardware stack levels used:    1
  8078 ;; Hardware stack levels required when called:    1
  8079 ;; This function calls:
  8080 ;;		Nothing
  8081 ;; This function is called by:
  8082 ;;		_atoi
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           	psect	text31
  8087  003504                     __ptext31:
  8088                           	opt callstack 0
  8089  003504                     ___wmul:
  8090                           	opt callstack 25
  8091                           
  8092                           ;incstack = 0
  8093  003504  5001               	movf	___wmul@multiplier,w,c
  8094  003506  0203               	mulwf	___wmul@multiplicand,c
  8095  003508  CFF3 F005          	movff	prodl,___wmul@product
  8096  00350C  CFF4 F006          	movff	prodh,___wmul@product+1
  8097  003510  5001               	movf	___wmul@multiplier,w,c
  8098  003512  0204               	mulwf	___wmul@multiplicand+1,c
  8099  003514  50F3               	movf	prodl,w,c
  8100  003516  2606               	addwf	___wmul@product+1,f,c
  8101  003518  5002               	movf	___wmul@multiplier+1,w,c
  8102  00351A  0203               	mulwf	___wmul@multiplicand,c
  8103  00351C  50F3               	movf	prodl,w,c
  8104  00351E  2606               	addwf	___wmul@product+1,f,c
  8105  003520  C005  F001         	movff	___wmul@product,?___wmul
  8106  003524  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8107  003528  0012               	return		;funcret
  8108  00352A                     __end_of___wmul:
  8109                           	opt callstack 0
  8110                           
  8111 ;; *************** function ___xxtofl *****************
  8112 ;; Defined at:
  8113 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;  sign            1    wreg     unsigned char 
  8116 ;;  val             4    0[COMRAM] long 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;  sign            1    8[COMRAM] unsigned char 
  8119 ;;  arg             4   10[COMRAM] unsigned long 
  8120 ;;  exp             1    9[COMRAM] unsigned char 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  4    0[COMRAM] unsigned char 
  8123 ;; Registers used:
  8124 ;;		wreg, status,2, status,0
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8130 ;;      Params:         4       0       0       0       0       0       0       0       0
  8131 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8132 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8133 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8134 ;;Total ram usage:       14 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; Hardware stack levels required when called:    1
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_main
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text32
  8145  002986                     __ptext32:
  8146                           	opt callstack 0
  8147  002986                     ___xxtofl:
  8148                           	opt callstack 29
  8149                           
  8150                           ;incstack = 0
  8151                           ;___xxtofl@sign stored from wreg
  8152  002986  6E09               	movwf	___xxtofl@sign,c
  8153  002988  5009               	movf	___xxtofl@sign,w,c
  8154  00298A  A4D8               	btfss	status,2,c
  8155  00298C  AE04               	btfss	___xxtofl@val+3,7,c
  8156  00298E  D01A               	goto	l990
  8157  002990  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8158  002994  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8159  002998  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8160  00299C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8161  0029A0  1E05               	comf	??___xxtofl,f,c
  8162  0029A2  1E06               	comf	??___xxtofl+1,f,c
  8163  0029A4  1E07               	comf	??___xxtofl+2,f,c
  8164  0029A6  1E08               	comf	??___xxtofl+3,f,c
  8165  0029A8  2A05               	incf	??___xxtofl,f,c
  8166  0029AA  0E00               	movlw	0
  8167  0029AC  2206               	addwfc	??___xxtofl+1,f,c
  8168  0029AE  2207               	addwfc	??___xxtofl+2,f,c
  8169  0029B0  2208               	addwfc	??___xxtofl+3,f,c
  8170  0029B2  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8171  0029B6  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8172  0029BA  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8173  0029BE  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8174  0029C2  D008               	goto	l4346
  8175  0029C4                     l990:
  8176  0029C4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8177  0029C8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8178  0029CC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8179  0029D0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8180  0029D4                     l4346:
  8181  0029D4  5001               	movf	___xxtofl@val,w,c
  8182  0029D6  1002               	iorwf	___xxtofl@val+1,w,c
  8183  0029D8  1003               	iorwf	___xxtofl@val+2,w,c
  8184  0029DA  1004               	iorwf	___xxtofl@val+3,w,c
  8185  0029DC  A4D8               	btfss	status,2,c
  8186  0029DE  D009               	goto	l4352
  8187  0029E0  0E00               	movlw	0
  8188  0029E2  6E01               	movwf	?___xxtofl,c
  8189  0029E4  0E00               	movlw	0
  8190  0029E6  6E02               	movwf	?___xxtofl+1,c
  8191  0029E8  0E00               	movlw	0
  8192  0029EA  6E03               	movwf	?___xxtofl+2,c
  8193  0029EC  0E00               	movlw	0
  8194  0029EE  6E04               	movwf	?___xxtofl+3,c
  8195  0029F0  0012               	return	
  8196  0029F2                     l4352:
  8197  0029F2  0E96               	movlw	150
  8198  0029F4  6E0A               	movwf	___xxtofl@exp,c
  8199  0029F6  D006               	goto	l4356
  8200  0029F8                     l4354:
  8201  0029F8  2A0A               	incf	___xxtofl@exp,f,c
  8202  0029FA  90D8               	bcf	status,0,c
  8203  0029FC  320E               	rrcf	___xxtofl@arg+3,f,c
  8204  0029FE  320D               	rrcf	___xxtofl@arg+2,f,c
  8205  002A00  320C               	rrcf	___xxtofl@arg+1,f,c
  8206  002A02  320B               	rrcf	___xxtofl@arg,f,c
  8207  002A04                     l4356:
  8208  002A04  0E00               	movlw	0
  8209  002A06  140B               	andwf	___xxtofl@arg,w,c
  8210  002A08  6E05               	movwf	??___xxtofl& (0+255),c
  8211  002A0A  0E00               	movlw	0
  8212  002A0C  140C               	andwf	___xxtofl@arg+1,w,c
  8213  002A0E  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8214  002A10  0E00               	movlw	0
  8215  002A12  140D               	andwf	___xxtofl@arg+2,w,c
  8216  002A14  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8217  002A16  0EFE               	movlw	254
  8218  002A18  140E               	andwf	___xxtofl@arg+3,w,c
  8219  002A1A  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8220  002A1C  5005               	movf	??___xxtofl,w,c
  8221  002A1E  1006               	iorwf	??___xxtofl+1,w,c
  8222  002A20  1007               	iorwf	??___xxtofl+2,w,c
  8223  002A22  1008               	iorwf	??___xxtofl+3,w,c
  8224  002A24  B4D8               	btfsc	status,2,c
  8225  002A26  D00D               	goto	l997
  8226  002A28  D7E7               	goto	l4354
  8227  002A2A                     l4358:
  8228  002A2A  2A0A               	incf	___xxtofl@exp,f,c
  8229  002A2C  0E01               	movlw	1
  8230  002A2E  260B               	addwf	___xxtofl@arg,f,c
  8231  002A30  0E00               	movlw	0
  8232  002A32  220C               	addwfc	___xxtofl@arg+1,f,c
  8233  002A34  220D               	addwfc	___xxtofl@arg+2,f,c
  8234  002A36  220E               	addwfc	___xxtofl@arg+3,f,c
  8235  002A38  90D8               	bcf	status,0,c
  8236  002A3A  320E               	rrcf	___xxtofl@arg+3,f,c
  8237  002A3C  320D               	rrcf	___xxtofl@arg+2,f,c
  8238  002A3E  320C               	rrcf	___xxtofl@arg+1,f,c
  8239  002A40  320B               	rrcf	___xxtofl@arg,f,c
  8240  002A42                     l997:
  8241  002A42  0E00               	movlw	0
  8242  002A44  140B               	andwf	___xxtofl@arg,w,c
  8243  002A46  6E05               	movwf	??___xxtofl& (0+255),c
  8244  002A48  0E00               	movlw	0
  8245  002A4A  140C               	andwf	___xxtofl@arg+1,w,c
  8246  002A4C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8247  002A4E  0E00               	movlw	0
  8248  002A50  140D               	andwf	___xxtofl@arg+2,w,c
  8249  002A52  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8250  002A54  0EFF               	movlw	255
  8251  002A56  140E               	andwf	___xxtofl@arg+3,w,c
  8252  002A58  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8253  002A5A  5005               	movf	??___xxtofl,w,c
  8254  002A5C  1006               	iorwf	??___xxtofl+1,w,c
  8255  002A5E  1007               	iorwf	??___xxtofl+2,w,c
  8256  002A60  1008               	iorwf	??___xxtofl+3,w,c
  8257  002A62  B4D8               	btfsc	status,2,c
  8258  002A64  D007               	goto	l4366
  8259  002A66  D7E1               	goto	l4358
  8260  002A68                     l4364:
  8261  002A68  060A               	decf	___xxtofl@exp,f,c
  8262  002A6A  90D8               	bcf	status,0,c
  8263  002A6C  360B               	rlcf	___xxtofl@arg,f,c
  8264  002A6E  360C               	rlcf	___xxtofl@arg+1,f,c
  8265  002A70  360D               	rlcf	___xxtofl@arg+2,f,c
  8266  002A72  360E               	rlcf	___xxtofl@arg+3,f,c
  8267  002A74                     l4366:
  8268  002A74  BE0D               	btfsc	___xxtofl@arg+2,7,c
  8269  002A76  D003               	goto	u5310
  8270  002A78  0E02               	movlw	2
  8271  002A7A  600A               	cpfslt	___xxtofl@exp,c
  8272  002A7C  D7F5               	goto	l4364
  8273  002A7E                     u5310:
  8274  002A7E  A00A               	btfss	___xxtofl@exp,0,c
  8275  002A80  9E0D               	bcf	___xxtofl@arg+2,7,c
  8276  002A82  90D8               	bcf	status,0,c
  8277  002A84  320A               	rrcf	___xxtofl@exp,f,c
  8278  002A86  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8279  002A8A  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  8280  002A8C  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  8281  002A8E  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  8282  002A90  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8283  002A94  6A07               	clrf	??___xxtofl+2,c
  8284  002A96  6A06               	clrf	??___xxtofl+1,c
  8285  002A98  6A05               	clrf	??___xxtofl,c
  8286  002A9A  5005               	movf	??___xxtofl,w,c
  8287  002A9C  120B               	iorwf	___xxtofl@arg,f,c
  8288  002A9E  5006               	movf	??___xxtofl+1,w,c
  8289  002AA0  120C               	iorwf	___xxtofl@arg+1,f,c
  8290  002AA2  5007               	movf	??___xxtofl+2,w,c
  8291  002AA4  120D               	iorwf	___xxtofl@arg+2,f,c
  8292  002AA6  5008               	movf	??___xxtofl+3,w,c
  8293  002AA8  120E               	iorwf	___xxtofl@arg+3,f,c
  8294  002AAA  5009               	movf	___xxtofl@sign,w,c
  8295  002AAC  A4D8               	btfss	status,2,c
  8296  002AAE  AE04               	btfss	___xxtofl@val+3,7,c
  8297  002AB0  D001               	goto	l4382
  8298  002AB2  8E0E               	bsf	___xxtofl@arg+3,7,c
  8299  002AB4                     l4382:
  8300  002AB4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8301  002AB8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8302  002ABC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8303  002AC0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8304  002AC4  0012               	return		;funcret
  8305  002AC6                     __end_of___xxtofl:
  8306                           	opt callstack 0
  8307                           
  8308 ;; *************** function _TIMER1_Start *****************
  8309 ;; Defined at:
  8310 ;;		line 204 in file "main.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;		None
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;		None
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  1    wreg      void 
  8317 ;; Registers used:
  8318 ;;		wreg, status,2
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8324 ;;      Params:         0       0       0       0       0       0       0       0       0
  8325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8327 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8328 ;;Total ram usage:        0 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    1
  8331 ;; This function calls:
  8332 ;;		Nothing
  8333 ;; This function is called by:
  8334 ;;		_main
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text33
  8339  003570                     __ptext33:
  8340                           	opt callstack 0
  8341  003570                     _TIMER1_Start:
  8342                           	opt callstack 29
  8343                           
  8344                           ;main.c: 206:     GIE=1;
  8345                           
  8346                           ;incstack = 0
  8347  003570  8EF2               	bsf	4082,7,c	;volatile
  8348                           
  8349                           ;main.c: 207:     PEIE=1;
  8350  003572  8CF2               	bsf	4082,6,c	;volatile
  8351                           
  8352                           ;main.c: 208:     TMR1IE=1;
  8353  003574  809D               	bsf	3997,0,c	;volatile
  8354                           
  8355                           ;main.c: 209:     TMR1IF=0;
  8356  003576  909E               	bcf	3998,0,c	;volatile
  8357                           
  8358                           ;main.c: 212:     T1CON=0x80;
  8359  003578  0E80               	movlw	128
  8360  00357A  6ECD               	movwf	4045,c	;volatile
  8361                           
  8362                           ;main.c: 214:     TMR1=0xF856;
  8363  00357C  0EF8               	movlw	248
  8364  00357E  6ECF               	movwf	4047,c	;volatile
  8365  003580  0E56               	movlw	86
  8366  003582  6ECE               	movwf	4046,c	;volatile
  8367                           
  8368                           ;main.c: 215:     TMR1ON=1;
  8369  003584  80CD               	bsf	4045,0,c	;volatile
  8370  003586  0012               	return		;funcret
  8371  003588                     __end_of_TIMER1_Start:
  8372                           	opt callstack 0
  8373                           
  8374 ;; *************** function _LCD_String_xy *****************
  8375 ;; Defined at:
  8376 ;;		line 158 in file "main.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;  row             1    wreg     unsigned char 
  8379 ;;  pos             1   10[COMRAM] unsigned char 
  8380 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  8381 ;;		 -> current_str(10), 
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;  row             1   13[COMRAM] unsigned char 
  8384 ;;  location        1   14[COMRAM] unsigned char 
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  1    wreg      void 
  8387 ;; Registers used:
  8388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8394 ;;      Params:         3       0       0       0       0       0       0       0       0
  8395 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8397 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8398 ;;Total ram usage:        5 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; Hardware stack levels required when called:    4
  8401 ;; This function calls:
  8402 ;;		_LCD_Command
  8403 ;;		_LCD_String
  8404 ;; This function is called by:
  8405 ;;		_main
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           	psect	text34
  8410  00338E                     __ptext34:
  8411                           	opt callstack 0
  8412  00338E                     _LCD_String_xy:
  8413                           	opt callstack 26
  8414                           
  8415                           ;incstack = 0
  8416                           ;LCD_String_xy@row stored from wreg
  8417  00338E  6E0E               	movwf	LCD_String_xy@row,c
  8418                           
  8419                           ;main.c: 161:     if(row<=1)
  8420  003390  0E02               	movlw	2
  8421  003392  600E               	cpfslt	LCD_String_xy@row,c
  8422  003394  D008               	goto	l4334
  8423                           
  8424                           ;main.c: 162:     {;main.c: 163:         location=(0x80) | ((pos) & 0x0f);
  8425  003396  500B               	movf	LCD_String_xy@pos,w,c
  8426  003398  0B0F               	andlw	15
  8427  00339A  0980               	iorlw	128
  8428  00339C  6E0F               	movwf	LCD_String_xy@location,c
  8429                           
  8430                           ;main.c: 164:         LCD_Command(location);
  8431  00339E  500F               	movf	LCD_String_xy@location,w,c
  8432  0033A0  EC42  F019         	call	_LCD_Command
  8433                           
  8434                           ;main.c: 165:     }
  8435  0033A4  D007               	goto	l4338
  8436  0033A6                     l4334:
  8437                           
  8438                           ;main.c: 167:     {;main.c: 168:         location=(0xC0) | ((pos) & 0x0f);
  8439  0033A6  500B               	movf	LCD_String_xy@pos,w,c
  8440  0033A8  0B0F               	andlw	15
  8441  0033AA  09C0               	iorlw	192
  8442  0033AC  6E0F               	movwf	LCD_String_xy@location,c
  8443                           
  8444                           ;main.c: 169:         LCD_Command(location);
  8445  0033AE  500F               	movf	LCD_String_xy@location,w,c
  8446  0033B0  EC42  F019         	call	_LCD_Command
  8447  0033B4                     l4338:
  8448                           
  8449                           ;main.c: 173:     LCD_String(msg);
  8450  0033B4  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
  8451  0033B8  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  8452  0033BC  EC95  F01A         	call	_LCD_String	;wreg free
  8453  0033C0  0012               	return		;funcret
  8454  0033C2                     __end_of_LCD_String_xy:
  8455                           	opt callstack 0
  8456                           
  8457 ;; *************** function _LCD_String *****************
  8458 ;; Defined at:
  8459 ;;		line 149 in file "main.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;  msg             2    8[COMRAM] PTR const unsigned char 
  8462 ;;		 -> current_str(10), 
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;		None
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  1    wreg      void 
  8467 ;; Registers used:
  8468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8474 ;;      Params:         2       0       0       0       0       0       0       0       0
  8475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8477 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8478 ;;Total ram usage:        2 bytes
  8479 ;; Hardware stack levels used:    1
  8480 ;; Hardware stack levels required when called:    3
  8481 ;; This function calls:
  8482 ;;		_LCD_Char
  8483 ;; This function is called by:
  8484 ;;		_LCD_String_xy
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text35
  8489  00352A                     __ptext35:
  8490                           	opt callstack 0
  8491  00352A                     _LCD_String:
  8492                           	opt callstack 26
  8493                           
  8494                           ;main.c: 149: void LCD_String(const char *msg);main.c: 150: {;main.c: 151:  while((*msg)
      +                          !=0)
  8495                           
  8496                           ;incstack = 0
  8497  00352A  D009               	goto	l4188
  8498  00352C                     l4184:
  8499                           
  8500                           ;main.c: 152:  {;main.c: 153:    LCD_Char(*msg);
  8501  00352C  C009  FFD9         	movff	LCD_String@msg,fsr2l
  8502  003530  C00A  FFDA         	movff	LCD_String@msg+1,fsr2h
  8503  003534  50DF               	movf	indf2,w,c
  8504  003536  EC1C  F019         	call	_LCD_Char
  8505                           
  8506                           ;main.c: 154:    msg++;
  8507  00353A  4A09               	infsnz	LCD_String@msg,f,c
  8508  00353C  2A0A               	incf	LCD_String@msg+1,f,c
  8509  00353E                     l4188:
  8510                           
  8511                           ;main.c: 151:  while((*msg)!=0)
  8512  00353E  C009  FFD9         	movff	LCD_String@msg,fsr2l
  8513  003542  C00A  FFDA         	movff	LCD_String@msg+1,fsr2h
  8514  003546  50DF               	movf	indf2,w,c
  8515  003548  B4D8               	btfsc	status,2,c
  8516  00354A  0012               	return	
  8517  00354C  D7EF               	goto	l4184
  8518  00354E                     __end_of_LCD_String:
  8519                           	opt callstack 0
  8520                           
  8521 ;; *************** function _LCD_Char *****************
  8522 ;; Defined at:
  8523 ;;		line 135 in file "main.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  dat             1    wreg     unsigned char 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;  dat             1    7[COMRAM] unsigned char 
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1    wreg      void 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8537 ;;      Params:         0       0       0       0       0       0       0       0       0
  8538 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8539 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8540 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8541 ;;Total ram usage:        2 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    2
  8544 ;; This function calls:
  8545 ;;		_MSdelay
  8546 ;; This function is called by:
  8547 ;;		_LCD_String
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           	psect	text36
  8552  003238                     __ptext36:
  8553                           	opt callstack 0
  8554  003238                     _LCD_Char:
  8555                           	opt callstack 26
  8556                           
  8557                           ;incstack = 0
  8558                           ;LCD_Char@dat stored from wreg
  8559  003238  6E08               	movwf	LCD_Char@dat,c
  8560                           
  8561                           ;main.c: 135: void LCD_Char(unsigned char dat);main.c: 136: {;main.c: 137:  LATB = (LATB
      +                           & 0x0f) | (0xF0 & dat);
  8562  00323A  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  8563  00323E  0EF0               	movlw	240
  8564  003240  1607               	andwf	??_LCD_Char,f,c
  8565  003242  508A               	movf	3978,w,c	;volatile
  8566  003244  0B0F               	andlw	15
  8567  003246  1007               	iorwf	??_LCD_Char,w,c
  8568  003248  6E8A               	movwf	3978,c	;volatile
  8569                           
  8570                           ;main.c: 138:  LATB0 = 1;
  8571  00324A  808A               	bsf	3978,0,c	;volatile
  8572                           
  8573                           ;main.c: 139:  LATB1 = 1;
  8574  00324C  828A               	bsf	3978,1,c	;volatile
  8575                           
  8576                           ;main.c: 140:  __nop();
  8577  00324E  F000               	nop	
  8578                           
  8579                           ;main.c: 141:  LATB1 = 0;
  8580  003250  928A               	bcf	3978,1,c	;volatile
  8581                           
  8582                           ;main.c: 142:  MSdelay(1);
  8583  003252  0E00               	movlw	0
  8584  003254  6E02               	movwf	MSdelay@val+1,c
  8585  003256  0E01               	movlw	1
  8586  003258  6E01               	movwf	MSdelay@val,c
  8587  00325A  ECE1  F019         	call	_MSdelay	;wreg free
  8588                           
  8589                           ;main.c: 143:     LATB = (LATB & 0x0f) | (dat<<4);
  8590  00325E  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  8591  003262  3A07               	swapf	??_LCD_Char,f,c
  8592  003264  0EF0               	movlw	240
  8593  003266  1607               	andwf	??_LCD_Char,f,c
  8594  003268  508A               	movf	3978,w,c	;volatile
  8595  00326A  0B0F               	andlw	15
  8596  00326C  1007               	iorwf	??_LCD_Char,w,c
  8597  00326E  6E8A               	movwf	3978,c	;volatile
  8598                           
  8599                           ;main.c: 144:  LATB1 = 1;
  8600  003270  828A               	bsf	3978,1,c	;volatile
  8601                           
  8602                           ;main.c: 145:  __nop();
  8603  003272  F000               	nop	
  8604                           
  8605                           ;main.c: 146:  LATB1 = 0;
  8606  003274  928A               	bcf	3978,1,c	;volatile
  8607                           
  8608                           ;main.c: 147:  MSdelay(3);
  8609  003276  0E00               	movlw	0
  8610  003278  6E02               	movwf	MSdelay@val+1,c
  8611  00327A  0E03               	movlw	3
  8612  00327C  6E01               	movwf	MSdelay@val,c
  8613  00327E  ECE1  F019         	call	_MSdelay	;wreg free
  8614  003282  0012               	return		;funcret
  8615  003284                     __end_of_LCD_Char:
  8616                           	opt callstack 0
  8617                           
  8618 ;; *************** function _LCD_Init *****************
  8619 ;; Defined at:
  8620 ;;		line 106 in file "main.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;		None
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;		None
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1    wreg      void 
  8627 ;; Registers used:
  8628 ;;		wreg, status,2, status,0, cstack
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8634 ;;      Params:         0       0       0       0       0       0       0       0       0
  8635 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8637 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8638 ;;Total ram usage:        0 bytes
  8639 ;; Hardware stack levels used:    1
  8640 ;; Hardware stack levels required when called:    3
  8641 ;; This function calls:
  8642 ;;		_LCD_Command
  8643 ;;		_MSdelay
  8644 ;; This function is called by:
  8645 ;;		_main
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           
  8649                           	psect	text37
  8650  003456                     __ptext37:
  8651                           	opt callstack 0
  8652  003456                     _LCD_Init:
  8653                           	opt callstack 27
  8654                           
  8655                           ;main.c: 108:     TRISB = 0;
  8656                           
  8657                           ;incstack = 0
  8658  003456  0E00               	movlw	0
  8659  003458  6E93               	movwf	3987,c	;volatile
  8660                           
  8661                           ;main.c: 109:     MSdelay(15);
  8662  00345A  0E00               	movlw	0
  8663  00345C  6E02               	movwf	MSdelay@val+1,c
  8664  00345E  0E0F               	movlw	15
  8665  003460  6E01               	movwf	MSdelay@val,c
  8666  003462  ECE1  F019         	call	_MSdelay	;wreg free
  8667                           
  8668                           ;main.c: 110:     LCD_Command(0x02);
  8669  003466  0E02               	movlw	2
  8670  003468  EC42  F019         	call	_LCD_Command
  8671                           
  8672                           ;main.c: 112:     LCD_Command(0x28);
  8673  00346C  0E28               	movlw	40
  8674  00346E  EC42  F019         	call	_LCD_Command
  8675                           
  8676                           ;main.c: 114:  LCD_Command(0x01);
  8677  003472  0E01               	movlw	1
  8678  003474  EC42  F019         	call	_LCD_Command
  8679                           
  8680                           ;main.c: 115:     LCD_Command(0x0c);
  8681  003478  0E0C               	movlw	12
  8682  00347A  EC42  F019         	call	_LCD_Command
  8683                           
  8684                           ;main.c: 116:  LCD_Command(0x06);
  8685  00347E  0E06               	movlw	6
  8686  003480  EC42  F019         	call	_LCD_Command
  8687  003484  0012               	return		;funcret
  8688  003486                     __end_of_LCD_Init:
  8689                           	opt callstack 0
  8690                           
  8691 ;; *************** function _LCD_Clear *****************
  8692 ;; Defined at:
  8693 ;;		line 176 in file "main.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;		None
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;		None
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      void 
  8700 ;; Registers used:
  8701 ;;		wreg, status,2, status,0, cstack
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8707 ;;      Params:         0       0       0       0       0       0       0       0       0
  8708 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8710 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8711 ;;Total ram usage:        0 bytes
  8712 ;; Hardware stack levels used:    1
  8713 ;; Hardware stack levels required when called:    3
  8714 ;; This function calls:
  8715 ;;		_LCD_Command
  8716 ;;		_MSdelay
  8717 ;; This function is called by:
  8718 ;;		_main
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text38
  8723  00359E                     __ptext38:
  8724                           	opt callstack 0
  8725  00359E                     _LCD_Clear:
  8726                           	opt callstack 27
  8727                           
  8728                           ;main.c: 178:     LCD_Command(0x01);
  8729                           
  8730                           ;incstack = 0
  8731  00359E  0E01               	movlw	1
  8732  0035A0  EC42  F019         	call	_LCD_Command
  8733                           
  8734                           ;main.c: 179:     MSdelay(3);
  8735  0035A4  0E00               	movlw	0
  8736  0035A6  6E02               	movwf	MSdelay@val+1,c
  8737  0035A8  0E03               	movlw	3
  8738  0035AA  6E01               	movwf	MSdelay@val,c
  8739  0035AC  ECE1  F019         	call	_MSdelay	;wreg free
  8740  0035B0  0012               	return		;funcret
  8741  0035B2                     __end_of_LCD_Clear:
  8742                           	opt callstack 0
  8743                           
  8744 ;; *************** function _LCD_Command *****************
  8745 ;; Defined at:
  8746 ;;		line 119 in file "main.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;  cmd             1    wreg     unsigned char 
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;  cmd             1    7[COMRAM] unsigned char 
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1    wreg      void 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2, status,0, cstack
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8760 ;;      Params:         0       0       0       0       0       0       0       0       0
  8761 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8762 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8763 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8764 ;;Total ram usage:        2 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; Hardware stack levels required when called:    2
  8767 ;; This function calls:
  8768 ;;		_MSdelay
  8769 ;; This function is called by:
  8770 ;;		_LCD_Init
  8771 ;;		_LCD_String_xy
  8772 ;;		_LCD_Clear
  8773 ;;		_LCD_Shift_Right
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777                           	psect	text39
  8778  003284                     __ptext39:
  8779                           	opt callstack 0
  8780  003284                     _LCD_Command:
  8781                           	opt callstack 27
  8782                           
  8783                           ;incstack = 0
  8784                           ;LCD_Command@cmd stored from wreg
  8785  003284  6E08               	movwf	LCD_Command@cmd,c
  8786                           
  8787                           ;main.c: 119: void LCD_Command(unsigned char cmd );main.c: 120: {;main.c: 121:  LATB = (
      +                          LATB & 0x0f) |(0xF0 & cmd);
  8788  003286  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  8789  00328A  0EF0               	movlw	240
  8790  00328C  1607               	andwf	??_LCD_Command,f,c
  8791  00328E  508A               	movf	3978,w,c	;volatile
  8792  003290  0B0F               	andlw	15
  8793  003292  1007               	iorwf	??_LCD_Command,w,c
  8794  003294  6E8A               	movwf	3978,c	;volatile
  8795                           
  8796                           ;main.c: 122:  LATB0 = 0;
  8797  003296  908A               	bcf	3978,0,c	;volatile
  8798                           
  8799                           ;main.c: 123:  LATB1 = 1;
  8800  003298  828A               	bsf	3978,1,c	;volatile
  8801                           
  8802                           ;main.c: 124:  __nop();
  8803  00329A  F000               	nop	
  8804                           
  8805                           ;main.c: 125:  LATB1 = 0;
  8806  00329C  928A               	bcf	3978,1,c	;volatile
  8807                           
  8808                           ;main.c: 126:  MSdelay(1);
  8809  00329E  0E00               	movlw	0
  8810  0032A0  6E02               	movwf	MSdelay@val+1,c
  8811  0032A2  0E01               	movlw	1
  8812  0032A4  6E01               	movwf	MSdelay@val,c
  8813  0032A6  ECE1  F019         	call	_MSdelay	;wreg free
  8814                           
  8815                           ;main.c: 127:     LATB = (LATB & 0x0f) | (cmd<<4);
  8816  0032AA  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  8817  0032AE  3A07               	swapf	??_LCD_Command,f,c
  8818  0032B0  0EF0               	movlw	240
  8819  0032B2  1607               	andwf	??_LCD_Command,f,c
  8820  0032B4  508A               	movf	3978,w,c	;volatile
  8821  0032B6  0B0F               	andlw	15
  8822  0032B8  1007               	iorwf	??_LCD_Command,w,c
  8823  0032BA  6E8A               	movwf	3978,c	;volatile
  8824                           
  8825                           ;main.c: 128:  LATB1 = 1;
  8826  0032BC  828A               	bsf	3978,1,c	;volatile
  8827                           
  8828                           ;main.c: 129:  __nop();
  8829  0032BE  F000               	nop	
  8830                           
  8831                           ;main.c: 130:  LATB1 = 0;
  8832  0032C0  928A               	bcf	3978,1,c	;volatile
  8833                           
  8834                           ;main.c: 131:  MSdelay(3);
  8835  0032C2  0E00               	movlw	0
  8836  0032C4  6E02               	movwf	MSdelay@val+1,c
  8837  0032C6  0E03               	movlw	3
  8838  0032C8  6E01               	movwf	MSdelay@val,c
  8839  0032CA  ECE1  F019         	call	_MSdelay	;wreg free
  8840  0032CE  0012               	return		;funcret
  8841  0032D0                     __end_of_LCD_Command:
  8842                           	opt callstack 0
  8843                           
  8844 ;; *************** function _MSdelay *****************
  8845 ;; Defined at:
  8846 ;;		line 188 in file "main.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  val             2    0[COMRAM] unsigned int 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  j               2    4[COMRAM] unsigned int 
  8851 ;;  i               2    2[COMRAM] unsigned int 
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  1    wreg      void 
  8854 ;; Registers used:
  8855 ;;		wreg, status,2, status,0
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8861 ;;      Params:         2       0       0       0       0       0       0       0       0
  8862 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8864 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8865 ;;Total ram usage:        6 bytes
  8866 ;; Hardware stack levels used:    1
  8867 ;; Hardware stack levels required when called:    1
  8868 ;; This function calls:
  8869 ;;		Nothing
  8870 ;; This function is called by:
  8871 ;;		_LCD_Init
  8872 ;;		_LCD_Command
  8873 ;;		_LCD_Char
  8874 ;;		_LCD_Clear
  8875 ;;		_LCD_Shift_Right
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text40
  8880  0033C2                     __ptext40:
  8881                           	opt callstack 0
  8882  0033C2                     _MSdelay:
  8883                           	opt callstack 26
  8884                           
  8885                           ;main.c: 188: void MSdelay(unsigned int val);main.c: 189: {;main.c: 190:  unsigned int i
      +                          ,j;;main.c: 191:  for(i=0;i<val;i++)
  8886                           
  8887                           ;incstack = 0
  8888  0033C2  0E00               	movlw	0
  8889  0033C4  6E04               	movwf	MSdelay@i+1,c
  8890  0033C6  0E00               	movlw	0
  8891  0033C8  6E03               	movwf	MSdelay@i,c
  8892  0033CA  D00E               	goto	l3652
  8893  0033CC                     l3640:
  8894                           
  8895                           ;main.c: 192:      for(j=0;j<165;j++);
  8896  0033CC  0E00               	movlw	0
  8897  0033CE  6E06               	movwf	MSdelay@j+1,c
  8898  0033D0  0E00               	movlw	0
  8899  0033D2  6E05               	movwf	MSdelay@j,c
  8900  0033D4                     l3646:
  8901  0033D4  4A05               	infsnz	MSdelay@j,f,c
  8902  0033D6  2A06               	incf	MSdelay@j+1,f,c
  8903  0033D8  5006               	movf	MSdelay@j+1,w,c
  8904  0033DA  E104               	bnz	u4190
  8905  0033DC  0EA5               	movlw	165
  8906  0033DE  5C05               	subwf	MSdelay@j,w,c
  8907  0033E0  A0D8               	btfss	status,0,c
  8908  0033E2  D7F8               	goto	l3646
  8909  0033E4                     u4190:
  8910  0033E4  4A03               	infsnz	MSdelay@i,f,c
  8911  0033E6  2A04               	incf	MSdelay@i+1,f,c
  8912  0033E8                     l3652:
  8913  0033E8  5001               	movf	MSdelay@val,w,c
  8914  0033EA  5C03               	subwf	MSdelay@i,w,c
  8915  0033EC  5002               	movf	MSdelay@val+1,w,c
  8916  0033EE  5804               	subwfb	MSdelay@i+1,w,c
  8917  0033F0  B0D8               	btfsc	status,0,c
  8918  0033F2  0012               	return	
  8919  0033F4  D7EB               	goto	l3640
  8920  0033F6                     __end_of_MSdelay:
  8921                           	opt callstack 0
  8922                           
  8923 ;; *************** function _ADC_Read *****************
  8924 ;; Defined at:
  8925 ;;		line 228 in file "main.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  channel         2    0[COMRAM] int 
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;  digital         2    6[COMRAM] int 
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  2    0[COMRAM] int 
  8932 ;; Registers used:
  8933 ;;		wreg, status,2, status,0
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8939 ;;      Params:         2       0       0       0       0       0       0       0       0
  8940 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8941 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8942 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8943 ;;Total ram usage:        8 bytes
  8944 ;; Hardware stack levels used:    1
  8945 ;; Hardware stack levels required when called:    1
  8946 ;; This function calls:
  8947 ;;		Nothing
  8948 ;; This function is called by:
  8949 ;;		_main
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text41
  8954  003008                     __ptext41:
  8955                           	opt callstack 0
  8956  003008                     _ADC_Read:
  8957                           	opt callstack 29
  8958                           
  8959                           ;main.c: 228: int ADC_Read(int channel);main.c: 229: {;main.c: 230:     int digital;;mai
      +                          n.c: 231:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111100);
  8960                           
  8961                           ;incstack = 0
  8962  003008  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  8963  00300C  90D8               	bcf	status,0,c
  8964  00300E  3603               	rlcf	??_ADC_Read,f,c
  8965  003010  90D8               	bcf	status,0,c
  8966  003012  3603               	rlcf	??_ADC_Read,f,c
  8967  003014  0E3C               	movlw	60
  8968  003016  1603               	andwf	??_ADC_Read,f,c
  8969  003018  50C2               	movf	4034,w,c	;volatile
  8970  00301A  0BC3               	andlw	195
  8971  00301C  1003               	iorwf	??_ADC_Read,w,c
  8972  00301E  6EC2               	movwf	4034,c	;volatile
  8973                           
  8974                           ;main.c: 234:     ADCON0 |= ((1<<ADON)|(1<<GO));
  8975  003020  A2C2               	btfss	4034,1,c	;volatile
  8976  003022  D003               	goto	u5030
  8977  003024  6A03               	clrf	??_ADC_Read& (0+255),c
  8978  003026  2A03               	incf	??_ADC_Read& (0+255),f,c
  8979  003028  D001               	goto	u5048
  8980  00302A                     u5030:
  8981  00302A  6A03               	clrf	??_ADC_Read& (0+255),c
  8982  00302C                     u5048:
  8983  00302C  0E01               	movlw	1
  8984  00302E  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  8985  003030  2A03               	incf	??_ADC_Read,f,c
  8986  003032  D002               	goto	u5054
  8987  003034                     u5055:
  8988  003034  90D8               	bcf	status,0,c
  8989  003036  3604               	rlcf	??_ADC_Read+1,f,c
  8990  003038                     u5054:
  8991  003038  2E03               	decfsz	??_ADC_Read,f,c
  8992  00303A  D7FC               	goto	u5055
  8993  00303C  A0C2               	btfss	4034,0,c	;volatile
  8994  00303E  D003               	goto	u5060
  8995  003040  6A05               	clrf	(??_ADC_Read+2)& (0+255),c
  8996  003042  2A05               	incf	(??_ADC_Read+2)& (0+255),f,c
  8997  003044  D001               	goto	u5078
  8998  003046                     u5060:
  8999  003046  6A05               	clrf	(??_ADC_Read+2)& (0+255),c
  9000  003048                     u5078:
  9001  003048  0E01               	movlw	1
  9002  00304A  6E06               	movwf	(??_ADC_Read+3)& (0+255),c
  9003  00304C  2A05               	incf	??_ADC_Read+2,f,c
  9004  00304E  D002               	goto	u5084
  9005  003050                     u5085:
  9006  003050  90D8               	bcf	status,0,c
  9007  003052  3606               	rlcf	??_ADC_Read+3,f,c
  9008  003054                     u5084:
  9009  003054  2E05               	decfsz	??_ADC_Read+2,f,c
  9010  003056  D7FC               	goto	u5085
  9011  003058  5006               	movf	??_ADC_Read+3,w,c
  9012  00305A  1004               	iorwf	??_ADC_Read+1,w,c
  9013  00305C  12C2               	iorwf	4034,f,c	;volatile
  9014  00305E                     l149:
  9015  00305E  B2C2               	btfsc	4034,1,c	;volatile
  9016  003060  D7FE               	goto	l149
  9017                           
  9018                           ;main.c: 239:     digital = (ADRESH*256) | (ADRESL);
  9019  003062  50C3               	movf	4035,w,c	;volatile
  9020  003064  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  9021  003068  6A04               	clrf	(??_ADC_Read+1)& (0+255),c
  9022  00306A  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  9023  00306E  6A03               	clrf	??_ADC_Read,c
  9024  003070  1003               	iorwf	??_ADC_Read,w,c
  9025  003072  6E07               	movwf	ADC_Read@digital,c
  9026  003074  5004               	movf	??_ADC_Read+1,w,c
  9027  003076  6E08               	movwf	ADC_Read@digital+1,c
  9028                           
  9029                           ;main.c: 240:     return(digital);
  9030  003078  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  9031  00307C  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  9032  003080  0012               	return		;funcret
  9033  003082                     __end_of_ADC_Read:
  9034                           	opt callstack 0
  9035                           
  9036 ;; *************** function _ADC_Init *****************
  9037 ;; Defined at:
  9038 ;;		line 218 in file "main.c"
  9039 ;; Parameters:    Size  Location     Type
  9040 ;;		None
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;		None
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  1    wreg      void 
  9045 ;; Registers used:
  9046 ;;		wreg, status,2
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9052 ;;      Params:         0       0       0       0       0       0       0       0       0
  9053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9055 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9056 ;;Total ram usage:        0 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:    1
  9059 ;; This function calls:
  9060 ;;		Nothing
  9061 ;; This function is called by:
  9062 ;;		_main
  9063 ;; This function uses a non-reentrant model
  9064 ;;
  9065                           
  9066                           	psect	text42
  9067  0035B2                     __ptext42:
  9068                           	opt callstack 0
  9069  0035B2                     _ADC_Init:
  9070                           	opt callstack 29
  9071                           
  9072                           ;main.c: 220:     TRISA = 0xff;
  9073                           
  9074                           ;incstack = 0
  9075  0035B2  6892               	setf	3986,c	;volatile
  9076                           
  9077                           ;main.c: 222:     ADCON1 = 0x0d;
  9078  0035B4  0E0D               	movlw	13
  9079  0035B6  6EC1               	movwf	4033,c	;volatile
  9080                           
  9081                           ;main.c: 223:     ADCON2 = 0x92;
  9082  0035B8  0E92               	movlw	146
  9083  0035BA  6EC0               	movwf	4032,c	;volatile
  9084                           
  9085                           ;main.c: 224:     ADRESH=0;
  9086  0035BC  0E00               	movlw	0
  9087  0035BE  6EC4               	movwf	4036,c	;volatile
  9088                           
  9089                           ;main.c: 225:     ADRESL=0;
  9090  0035C0  0E00               	movlw	0
  9091  0035C2  6EC3               	movwf	4035,c	;volatile
  9092  0035C4  0012               	return		;funcret
  9093  0035C6                     __end_of_ADC_Init:
  9094                           	opt callstack 0
  9095                           
  9096 ;; *************** function _timer1_isr *****************
  9097 ;; Defined at:
  9098 ;;		line 196 in file "main.c"
  9099 ;; Parameters:    Size  Location     Type
  9100 ;;		None
  9101 ;; Auto vars:     Size  Location     Type
  9102 ;;		None
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  1    wreg      void 
  9105 ;; Registers used:
  9106 ;;		wreg, status,2, status,0
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9112 ;;      Params:         0       0       0       0       0       0       0       0       0
  9113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9115 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9116 ;;Total ram usage:        0 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; This function calls:
  9119 ;;		Nothing
  9120 ;; This function is called by:
  9121 ;;		Interrupt level 2
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           	psect	intcode
  9126  000008                     __pintcode:
  9127                           	opt callstack 0
  9128  000008                     _timer1_isr:
  9129                           	opt callstack 22
  9130                           
  9131                           ;incstack = 0
  9132  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9133  00000A  EDC4  F01A         	call	int_func,f	;refresh shadow registers
  9134                           
  9135                           	psect	intcode_body
  9136  003588                     __pintcode_body:
  9137                           	opt callstack 22
  9138  003588                     int_func:
  9139                           	opt callstack 22
  9140  003588  0006               	pop		; remove dummy address from shadow register refresh
  9141                           
  9142                           ;main.c: 198:     counter++;
  9143  00358A  0100               	movlb	0	; () banked
  9144  00358C  4BF3               	infsnz	_counter& (0+255),f,b
  9145  00358E  2BF4               	incf	(_counter+1)& (0+255),f,b
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;main.c: 199:     TMR1=0xF856;
  9149  003590  0EF8               	movlw	248
  9150  003592  6ECF               	movwf	4047,c	;volatile
  9151  003594  0E56               	movlw	86
  9152  003596  6ECE               	movwf	4046,c	;volatile
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;main.c: 201:     PIR1bits.TMR1IF=0;
  9156  003598  909E               	bcf	3998,0,c	;volatile
  9157                           
  9158                           ; BSR set to: 0
  9159  00359A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9160  00359C  0011               	retfie		f
  9161  00359E                     __end_of_timer1_isr:
  9162                           	opt callstack 0
  9163                           
  9164                           	psect	rparam
  9165  0000                     
  9166                           	psect	temp
  9167  00005F                     btemp:
  9168                           	opt callstack 0
  9169  00005F                     	ds	1
  9170  0000                     int$flags	set	btemp
  9171  0000                     wtemp8	set	btemp+1
  9172  0000                     ttemp5	set	btemp+1
  9173  0000                     ttemp6	set	btemp+4
  9174  0000                     ttemp7	set	btemp+8
  9175                           tosu	equ	0xFFF
  9176                           tosh	equ	0xFFE
  9177                           tosl	equ	0xFFD
  9178                           stkptr	equ	0xFFC
  9179                           pclatu	equ	0xFFB
  9180                           pclath	equ	0xFFA
  9181                           pcl	equ	0xFF9
  9182                           tblptru	equ	0xFF8
  9183                           tblptrh	equ	0xFF7
  9184                           tblptrl	equ	0xFF6
  9185                           tablat	equ	0xFF5
  9186                           prodh	equ	0xFF4
  9187                           prodl	equ	0xFF3
  9188                           indf0	equ	0xFEF
  9189                           postinc0	equ	0xFEE
  9190                           postdec0	equ	0xFED
  9191                           preinc0	equ	0xFEC
  9192                           plusw0	equ	0xFEB
  9193                           fsr0h	equ	0xFEA
  9194                           fsr0l	equ	0xFE9
  9195                           wreg	equ	0xFE8
  9196                           indf1	equ	0xFE7
  9197                           postinc1	equ	0xFE6
  9198                           postdec1	equ	0xFE5
  9199                           preinc1	equ	0xFE4
  9200                           plusw1	equ	0xFE3
  9201                           fsr1h	equ	0xFE2
  9202                           fsr1l	equ	0xFE1
  9203                           bsr	equ	0xFE0
  9204                           indf2	equ	0xFDF
  9205                           postinc2	equ	0xFDE
  9206                           postdec2	equ	0xFDD
  9207                           preinc2	equ	0xFDC
  9208                           plusw2	equ	0xFDB
  9209                           fsr2h	equ	0xFDA
  9210                           fsr2l	equ	0xFD9
  9211                           status	equ	0xFD8


Data Sizes:
    Strings     58
    Constant    4
    Data        0
    BSS         136
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    133     157
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_17(CODE[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> current_str(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> current_str(BANK1[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S902_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> current_str(BANK1[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> current_str(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> current_str(BANK1[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> current_str(BANK1[10]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _sqrtf->___fladd
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flge
    _atoi->_isspace
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _timer1_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _timer1_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer1_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer1_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer1_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer1_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer1_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer1_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer1_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   55655
                                            128 BANK0      5     5      0
                           _ADC_Init
                           _ADC_Read
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                       _TIMER1_Start
                            ___awdiv
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _sprintf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (1) _sqrtf                                               49    45      4    8573
                                              0 BANK0     49    45      4
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (2) _nanf                                                 8     4      4      99
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   31156
                                            110 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   30495
                                            102 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   30112
                                             78 BANK0     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   24657
                                             10 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             76 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                             92 COMRAM     2     2      0
                                              0 BANK0      8     4      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3345
                                              0 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2870
                                             76 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3112
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1550
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2311
                                             51 COMRAM    25    17      8
                             ___flge (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                               _nanf (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _TIMER1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    1744
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     789
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0     668
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1292
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    1292
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0     668
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     624
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             8     6      2     121
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _timer1_isr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _TIMER1_Start
   ___awdiv
   ___fladd
     ___fldiv (ARG)
       ___flge (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _nanf (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flge (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _nanf (ARG)
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___fldiv (ARG)
         ___flge (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _nanf (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___fldiv (ARG)
               ___flge (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _nanf (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flge (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
             _nanf (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flge (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _nanf (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flge (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
                 _nanf (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flge (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
               _nanf (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
   _sqrtf
     ___fladd
       ___fldiv (ARG)
         ___flge (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _nanf (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv (ARG)
       ___flge (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _nanf (ARG)
     ___flge (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
     _nanf (ARG)

 _timer1_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      70       7       43.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16B      20        0.0%
DATA                 0      0     16B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jun 20 21:01:21 2019

           ___fldiv@aexp 004C             ___fldiv@bexp 004B             ___fldiv@sign 0044  
           ?_LCD_Command 0001                       _GO 007E11             ___awdiv@sign 0006  
            __CFG_BOR$ON 000000      ___wmul@multiplicand 0003              __CFG_BORV$3 000000  
            ?_LCD_String 0009             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l234 0B7C  
                    l260 0E5E                      l149 305E                      l600 2B5A  
                    l193 2E90                      l930 25E4                      l931 25E0  
                    l919 2576                      l880 230C                      l864 223A  
                    l865 2218                      l890 236E                      l949 1E26  
                    l990 29C4                      l966 20C4                      l958 203E  
                    l959 203A                      l889 2372                      _GIE 007F97  
                    l997 2A42             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    _pad 2E60             ___awmod@sign 0006                      wreg 000FE8  
           ___flmul@aexp 0020             ___flmul@bexp 0021              _tolower$999 000D  
           ___flmul@sign 001B             ___flmul@temp 0026             ___flmul@prod 0022  
           __CFG_LVP$OFF 000000              LCD_Char@dat 0008             ___fltol@exp1 005E  
           __CFG_WDT$OFF 000000                     l1131 17F6                     l1045 297C  
                   l1134 18AE                     l1127 17A2                     l3000 2284  
                   l1136 198A                     l1057 27A6                     l3100 2EB2  
                   l1167 322E                     l3008 2296                     l3120 2C18  
                   l3104 2EE0                     l4000 2D48                     l3026 2330  
                   l3042 2350                     l3018 22FC                     l4002 2D56  
                   l3300 264C                     l3036 2346                     l3116 2C0E  
                   l3132 31AA                     l3310 2682                     l3214 2470  
                   l3070 23DE                     l3062 23B8                     l3126 2C58  
                   l3150 2706                     l3312 2684                     l3304 2676  
                   l3240 24D6                     l3232 24BE                     l3160 27C8  
                   l4112 1460                     l4104 1404                     l3250 2526  
                   l3226 24A8                     l3218 2474                     l3402 1FE6  
                   l3074 23E6                     l3090 2E7A                     l3332 1DD2  
                   l3076 23E8                     l3164 2806                     l4132 155A  
                   l4116 148A                     l4060 1220                     l4052 1218  
                   l4044 1202                     l3270 258C                     l3350 1E12  
                   l3334 1DD6                     l3094 2E88                     l4142 15A2  
                   l4046 1204                     l4070 1270                     l3512 30A2  
                   l3264 2574                     l3432 20A0                     l3408 2004  
                   l3360 1E44                     l3352 1E16                     l3336 1DE6  
                   l3168 2834                     l3096 2E9A                     l4064 1224  
                   l4056 121C                     l4048 1214                     l4304 1960  
                   l3258 254E                     l3194 2430                     l4138 1596  
                   l4250 1696                     l4402 1A82                     l3532 30E8  
                   l3524 30D0                     l3516 30B0                     l3508 3096  
                   l3276 25AA                     l3540 2F2E                     l3444 20E2  
                   l3428 2082                     l2900 2128                     l3604 2CCC  
                   l4084 12FE                     l4068 122E                     l4148 15BC  
                   l4334 33A6                     l3470 2FA8                     l3518 30B8  
                   l3198 2434                     l3622 2D0C                     l3614 2CE4  
                   l3702 0982                     l4086 131C                     l4414 1CD6  
                   l3640 33CC                     l4184 352C                     l4352 29F2  
                   l3464 2F98                     l3528 30DA                     l3296 2628  
                   l3544 2F62                     l3560 2B2E                     l2920 216C  
                   l3616 2CF0                     l3608 2CDC                     l3712 09EE  
                   l3720 0A08                     l4088 132A                     l4272 1776  
                   l4256 16DE                     l4264 1708                     l4424 1D78  
                   l4338 33B4                     l4354 29F8                     l4346 29D4  
                   l3634 334E                     l3570 2B92                     l3810 0DC0  
                   l3802 0D4A                     l3730 0A86                     l4194 3106  
                   l4290 18C8                     l4418 1D24                     l3652 33E8  
                   l4188 353E                     l4364 2A68                     l4356 2A04  
                   l3476 2FBE                     l3492 2FF0                     l3548 2F80  
                   l3564 2B44                     l3556 2AFA                     l2932 2190  
                   l2924 2170                     l3732 0AD4                     l4196 312C  
                   l4284 1842                     l4268 1760                     l3646 33D4  
                   l4382 2AB4                     l4366 2A74                     l4358 2A2A  
                   l3478 2FC6                     l2854 2DD8                     l3902 1092  
                   l3726 0A4C                     ?_pad 0011                     l3496 2FFE  
                   l3488 2FE6                     l2864 3360                     l2872 34BE  
                   l3904 109C                     l3824 0E56                     l3816 0DFE  
                   l3752 0B86                     l3736 0B10                     l3664 088A  
                   l3578 34A2                     l2962 21CC                     l2874 34C2  
                   l3914 10F2                     l3850 0F28                     l3826 0E78  
                   l3588 2C82                     l2868 3376                     l3940 117E  
                   l3924 111E                     l3748 0B64                     l3676 08B8  
                   l3684 08CE                     l4396 1A38                     l2990 225E  
                   l2974 2226                     l3838 0EFA                     l3766 0BD4  
                   l3758 0B8C                     l3694 093A                     l2976 222A  
                   l2896 2124                     l3784 0C1A                     l3768 0BD8  
                   l3696 0952                     l3970 28B2                     l3954 2858  
                   l3858 0F48                     l3866 0F6C                     l3874 1004  
                   l3794 0C54                     l3778 0BF6                     l3698 095C  
                   l3980 291C                     l3972 28BA                     l3964 28A2  
                   l3956 285C                     l3788 0C2A                     l3974 28C0  
                   l2998 2280                     l3886 1046                     l3976 28E8  
                   _ADON 007E10                     STR_1 0813                     STR_2 0820  
                   STR_3 0805                     STR_4 082C                     STR_5 0834  
                   STR_8 0830                     STR_9 0838                     _LATB 000F8A  
                   u4100 2C70                     u3300 31E2                     u4030 2F7C  
                   u3150 23C4                     u3070 2354                     u4110 2CA0  
                   u3230 2BD4                     u3400 2786                     u3320 3214  
                   u3090 2368                     u3330 3216                     u4115 2C96  
                   u3235 2BCA                     u3307 31D8                     u3420 27E6  
                   u4300 09C6                     u3405 277C                     u5030 302A  
                   u4150 2CF6                     u3350 26D2                     u4310 09C8  
                   u4230 08A8                     u5110 16A8                     u3280 2C50  
                   u3360 26F4                     u3425 27DC                     u3450 344E  
                   u3290 2C52                     u2730 2DD0                     u4410 0BA4  
                   u3275 2C32                     u3355 26C8                     u5060 3046  
                   u3460 3450                     u4180 334A                     u2900 21FE  
                   u4260 0912                     u5054 3038                     u4190 33E4  
                   u5310 2A7E                     u3630 25DA                     u2910 2200  
                   u2750 2E18                     u4350 0B38                     u4270 0914  
                   u5055 3034                     u5048 302C                     u3385 271E  
                   u5145 171C                     u3386 2724                     u4450 0BF2  
                   u5146 1722                     u3387 2732                     u5235 19D0  
                   u5147 1730                     _PEIE 007F96                     u5084 3054  
                   u3820 2034                     u2940 2242                     u2780 341E  
                   u4700 1168                     u4620 1028                     u4380 0B72  
                   u5085 3050                     u5078 3048                     u3670 2636  
                   u2790 3420                     u4710 116A                     u3920 2FCA  
                   u3680 265A                     u3770 1E32                     u2890 21EE  
                   u4740 289E                     u3860 2090                     u3780 1FA8  
                   u4900 1364                     u3870 20AE                     u4910 1366  
                   u5390 1CB0                     u4760 294C                     u4680 1108  
                   u4840 2D9C                     u4920 1372                     u3785 1F9E  
                   u4770 294E                     u3980 30BC                     u4970 150E  
                   u4980 1510                     _TMR1 000FCE                     _dbuf 0116  
                   _atoi 2846                     _main 1A20                     _nanf 354E  
     __size_of_LCD_Clear 0014                     _prec 00EF                     _nout 00EB  
                   pad@i 0018                     pad@p 0015                     _tiny 0801  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9                     btemp 005F         __end_of_ADC_Init 35C6  
       __end_of_ADC_Read 3082            ___fpclassifyf 2B96                     prodh 000FF4  
                   prodl 000FF3                     start 000E          __end_of_MSdelay 33F6  
          __CFG_IESO$OFF 000000          ___fldiv@new_exp 0045            _LCD_String_xy 338E  
            _voltage_str 0100             ___param_bank 000000          _max_current_ant 00FB  
                  ??_pad 0017         __end_of_LCD_Char 3284         __end_of_LCD_Init 3486  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000            ___fltol@sign1 005D  
                  ?_atoi 0008          __end_of___fladd 2404                    ?_main 0001  
                  ?_nanf 0001          __end_of___fldiv 268C          __end_of___awdiv 3008  
        __end_of___flneg 34B4                    STR_12 083C                    STR_14 083C  
                  STR_17 0812          __end_of___awmod 30F2          __end_of___flmul 20F8  
        __end_of___flsub 3318          __end_of___fltol 2D1E          ___awdiv@divisor 0003  
                  _T1CON 000FCD                    _LATB0 007C50                    _LATB1 007C51  
        ___awdiv@counter 0005             vfpfcnvrt@fmt 00B0            __CFG_USBDIV$1 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _flags 00F1  
                  _errno 00E9                    _fputc 2DC0                    _fputs 3356  
        __end_of_isdigit 3456                    atoi@n 0015                    pad@fp 0011  
                  atoi@s 0008                    _width 00ED                    _putch 35C6  
                  _sqrtf 15F0                    nanf@s 0001                    nanf@u 0005  
        __end_of_isspace 3356          __end_of_isupper 3426                    tablat 000FF5  
                  ttemp5 0060                    ttemp6 0063                    ttemp7 0067  
                  status 000FD8                    wtemp8 0060      __size_of_LCD_String 0024  
        __end_of_sprintf 319A           ?___fpclassifyf 0001          __end_of_tolower 3238  
        __end_of_strncmp 2DC0           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
         ?_LCD_String_xy 000B           __CFG_MCLRE$OFF 000000             _voltage_read 00F7  
        __initialization 34DE             __end_of_atoi 2986             __end_of_main 1DA6  
           __end_of_nanf 3570             __end_of_tiny 0805                   ??_atoi 000A  
                 ??_main 00E0                   ??_nanf 0005        __end_of_LCD_Clear 35B2  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_fputc 0001                   ?_fputs 000A  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0001  
                 ?_putch 0001                   ?_sqrtf 0060         LCD_String_xy@msg 000C  
       LCD_String_xy@pos 000B         LCD_String_xy@row 000E                ??_MSdelay 0003  
                 _OSCCON 000FD3            vfpfcnvrt@done 00B8                   _TMR1IE 007CE8  
                 _TMR1IF 007CF0                   _TMR1ON 007E68         __end_of___xxtofl 2AC6  
         __CFG_XINST$OFF 000000             vfprintf@cfmt 00CC                   ___flge 2AC6  
                 ___fleq 2EFA                ??___fladd 0055                   ___wmul 3504  
              ??___fldiv 003C                ??___awdiv 0005                ??___flneg 0005  
         __CFG_STVREN$ON 000000                ??___awmod 0005                ??___flmul 0017  
              ??___flsub 005D                ??___fltol 0064                   _efgtoa 0840  
        ADC_Read@channel 0001                   _floorf 268C          ADC_Read@digital 0007  
                 clear_0 34E4                   clear_1 34F0         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005                   pad@buf 0013  
   __size_of_LCD_Command 004C                   _strcpy 319A                   _strlen 34B4  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003          ___fpclassifyf@e 0009  
              ?_ADC_Init 0001          ___fpclassifyf@u 000B                ?_ADC_Read 0001  
        ___fpclassifyf@x 0001             __mediumconst 0000                ??_isspace 0003  
                 tblptrh 000FF7                ??_isupper 0003                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 3148  
                 sqrtf@i 0071                   sqrtf@m 0085                   sqrtf@q 0079  
                 sqrtf@r 0089                   sqrtf@s 006D                   sqrtf@t 007D  
                 sqrtf@x 0060                   sqrtf@z 0081                ??_sprintf 005F  
              ??_tolower 0009                ??_strncmp 0007               ___flge@ff1 0028  
             ___flge@ff2 002C          ??___fpclassifyf 0005             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               ___fleq@ff1 0001  
             ___fleq@ff2 0005                ?_LCD_Char 0001               __accesstop 0060  
__end_of__initialization 34F6                ?_LCD_Init 0001          ??_LCD_String_xy 000E  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0060  
         __pcstackCOMRAM 0001            __end_of_fputc 2E60            __end_of_fputs 338E  
          __end_of_putch 35C8            __end_of_sqrtf 1A20             ??_LCD_String 000B  
             ??_ADC_Init 0001               ??_ADC_Read 0003                  ??_fputc 0005  
                ??_fputs 000E                  ??_putch 0001                  ??_sqrtf 0064  
             __pbssBANK0 00E5               __pbssBANK1 0100            ?_TIMER1_Start 0001  
             ??_LCD_Char 0007               ??_LCD_Init 0009       __end_of_LCD_String 354E  
             _efgtoa$363 007E               _efgtoa$357 007A               _efgtoa$358 007C  
             _efgtoa$367 0080               _efgtoa$368 0082               _efgtoa$369 0084  
                ?___flge 0028                  ?___fleq 0001                  ?___wmul 0001  
                ?_efgtoa 006A                  ?_floorf 004D                  ?_strcpy 0001  
                ?_strlen 0001                ?___xxtofl 0001       __size_of_vfpfcnvrt 0434  
         ??_TIMER1_Start 0001                  _MSdelay 33C2          __CFG_VREGEN$OFF 000000  
          LCD_String@msg 0009                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 00D0          __size_of___fleq 008A                  ___fladd 20F8  
                ___fldiv 2404                  ___awdiv 2F84                  ___flneg 3486  
                ___awmod 3082                  ___flmul 1DA6                  ___flsub 32D0  
                ___fltol 2C62          __size_of___wmul 0026                ?_vfprintf 00C6  
           __psmallconst 0800          __size_of_efgtoa 097C          __size_of_floorf 01BA  
                __pcinit 34DE                  __ramtop 0800                  __ptext0 1A20  
                __ptext1 15F0                  __ptext2 354E                  __ptext3 3148  
                __ptext4 30F2                  __ptext5 11BC                  __ptext6 2D1E  
                __ptext7 0840                  __ptext8 31EC                  __ptext9 33F6  
        __size_of_strcpy 0052          __size_of_strlen 002A                  _counter 00F3  
                _current 00E5             __size_of_pad 009A                  _isdigit 3426  
             ??___xxtofl 0005         ___awmod@dividend 0001                  _isspace 3318  
                _isupper 33F6                  efgtoa@c 0070                  efgtoa@d 008E  
                efgtoa@e 00A6                  efgtoa@f 006C                  efgtoa@g 00A2  
                efgtoa@h 0098                  efgtoa@i 00A0                  efgtoa@l 009C  
                efgtoa@m 008A                  efgtoa@n 00A8                  efgtoa@p 0092  
                efgtoa@t 0086                  efgtoa@u 00AA                  efgtoa@w 0095  
              _LCD_Clear 359E                  atoi@neg 000E                  _sprintf 3148  
                _tolower 31EC                  _voltage 0112                  _strncmp 2D1E  
         __pintcode_body 3588     end_of_initialization 34F6                  floorf@e 0064  
                floorf@m 0060                  floorf@u 0066                  floorf@x 004D  
                fputc@fp 0003           LCD_Command@cmd 0008            __Lmediumconst 0000  
                int_func 3588                  fputs@fp 000C        __end_of_vfpfcnvrt 15F0  
             efgtoa@mode 0097               efgtoa@sign 0090                  postdec2 000FDD  
             _timer1_isr 0008                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 005F                  sqrtf@ix 008D  
                strcpy@d 0009                  strlen@a 0003                  strcpy@s 0007  
                strlen@s 0001              ___fladd@grs 005C            ___xxtofl@sign 0009  
             ?_LCD_Clear 0001              ___fldiv@grs 0047              ___fldiv@rem 0040  
      __size_of_ADC_Init 0014        __size_of_ADC_Read 007A              ___flmul@grs 001C  
      __size_of_LCD_Char 004C        __size_of_LCD_Init 0030            ??_LCD_Command 0007  
         __end_of___flge 2B96           __end_of___fleq 2F84              vfpfcnvrt@ap 00B2  
            vfpfcnvrt@ct 00C2              vfpfcnvrt@fp 00AE           __end_of___wmul 352A  
   __end_of_TIMER1_Start 3588           __end_of_efgtoa 11BC           __end_of_floorf 2846  
             floorf@F524 010A           __end_of_strcpy 31EC           __end_of_strlen 34DE  
    start_initialization 34DE              __end_of_pad 2EFA    __end_of___fpclassifyf 2C62  
  __end_of_LCD_String_xy 33C2              vfprintf@fmt 00C8                 ??___flge 0030  
               ??___fleq 0009              ?_timer1_isr 0001                 ??___wmul 0005  
               ??_efgtoa 0071                 ??_floorf 0051         __CFG_LPT1OSC$OFF 000000  
               ??_strcpy 0005                 ??_strlen 0003                ___fladd@a 0051  
              ___fladd@b 004D                ___fldiv@a 0038                ___fldiv@b 0034  
    __end_of_LCD_Command 32D0                ___flmul@a 0013                ___flmul@b 000F  
              ___flsub@a 0064                ___flsub@b 0060            __pcstackBANK0 0060  
            ??_LCD_Clear 0009        __size_of___xxtofl 0140                 ?_MSdelay 0001  
           _current_read 00F9                _main$1211 00E1                __pintcode 0008  
               ?___fladd 004D                 ?___fldiv 0034                 ?___awdiv 0001  
               ?___flneg 0001                 ?___awmod 0001                 ?___flmul 000F  
               ?___flsub 0060                 ?___fltol 0060        __size_of_vfprintf 0056  
            __smallconst 0800                 ?_isdigit 0001                 _ADC_Init 35B2  
               _ADC_Read 3008                 ?_isspace 0001                 ?_isupper 0001  
  LCD_String_xy@location 000F                 ?_sprintf 00CE                 ?_tolower 0007  
         __size_of_fputc 00A0           __size_of_fputs 0038                 ?_strncmp 0001  
    __size_of_timer1_isr 3596           __size_of_putch 0002           __size_of_sqrtf 0430  
               MSdelay@i 0003                 MSdelay@j 0005                 _LCD_Char 3238  
               _LCD_Init 3456           ___wmul@product 0005                 _PIR1bits 000F9E  
  __size_of_TIMER1_Start 0018         __CFG_WDTPS$32768 000000              _LCD_Command 3284  
              _vfpfcnvrt 11BC               _ADCON0bits 000FC2        ___wmul@multiplier 0001  
             vfpfcnvrt@c 00C5               vfpfcnvrt@f 00BE             _TIMER1_Start 3570  
       __size_of_MSdelay 0034                 __Hrparam 0000               vfprintf@ap 00CA  
               __Lrparam 0000               vfprintf@fp 00C6         __size_of___fladd 030C  
       __size_of___fldiv 0288         __size_of___awdiv 0084         __size_of___flneg 002E  
       __size_of___awmod 0070         __size_of___flmul 0352         __size_of___flsub 0048  
       __size_of___fltol 00BC               ?_vfpfcnvrt 00AE              _max_current 00F5  
     ___fpclassifyf@F463 010E               sprintf@fmt 00D0                 ___xxtofl 2986  
               _atoi$860 0012              _current_str 0166                 _atoi$858 0010  
               _atoi$859 0014         __size_of_isdigit 0030         __size_of_isspace 003E  
               __ptext10 319A                 __ptext11 2E60                 __ptext20 20F8  
               __ptext12 34B4                 __ptext21 3486                 __ptext13 3356  
               __ptext30 3426                 __ptext22 1DA6                 __ptext14 2DC0  
               __ptext31 3504                 __ptext23 2AC6                 __ptext15 35C6  
               __ptext40 33C2                 __ptext32 2986                 __ptext24 2EFA  
               __ptext16 268C                 __ptext41 3008                 __ptext33 3570  
               __ptext25 2404                 __ptext17 2B96                 __ptext42 35B2  
               __ptext34 338E                 __ptext26 3082                 __ptext18 2C62  
               __ptext35 352A                 __ptext27 2F84                 __ptext19 32D0  
               __ptext36 3238                 __ptext28 2846                 __ptext37 3456  
               __ptext29 3318                 __ptext38 359E                 __ptext39 3284  
       __size_of_isupper 0030         __size_of_sprintf 0052         __size_of_tolower 004C  
             strcpy@dest 0001         __size_of_strncmp 00A2            __size_of_atoi 0140  
          __size_of_main 0386            __size_of_nanf 0022               MSdelay@val 0001  
               efgtoa@fp 006A                 efgtoa@ne 008C                 efgtoa@pp 0088  
               efgtoa@ou 0076             ??_timer1_isr 0001                 int$flags 005F  
               _vfprintf 30F2               _LCD_String 352A              _isspace$889 0007  
  __CFG_CPUDIV$OSC1_PLL2 000000                 isdigit@c 0001                 intlevel2 0000  
              sprintf@ap 00D8       __end_of_timer1_isr 359E                 isspace@c 0001  
              strcpy@src 0003                 isupper@c 0001                strncmp@_l 0001  
              strncmp@_r 0003              efgtoa@nmode 0094              ??_vfpfcnvrt 00B4  
          _vfpfcnvrt$383 00BA            _vfpfcnvrt$387 00BC      __CFG_FOSC$INTOSC_EC 000000  
               sprintf@f 00DA                 tolower@c 0007                 sprintf@s 00CE  
 __size_of___fpclassifyf 00CC                 strncmp@l 0008                 strncmp@n 0005  
               strncmp@r 000A   __size_of_LCD_String_xy 0034            ___fladd@signs 0059  
  sqrtf@__xc8_float_word 0075             ___fladd@aexp 005A             ___fladd@bexp 005B  
